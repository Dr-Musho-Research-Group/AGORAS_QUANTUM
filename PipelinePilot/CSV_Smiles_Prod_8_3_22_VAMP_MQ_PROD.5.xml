<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="CSV_Smiles_Prod_8_3_22_VAMP_MQ_PROD" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareGlobal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this protocol. Such properties can be accessed within the scope of this protocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;It is best practice to declare all global properties before use. Indeed, this practice is enforced in some contexts.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;When a global property needs to be scoped to the whole protocol:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the new global property in the &lt;i&gt;DeclareGlobal&lt;/i&gt; parameter at the protocol level.&lt;/dd&gt;
&lt;br/&gt;
&lt;dt&gt;&lt;b&gt;To limit a global property to a subprotocol scope:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the property in the subprotocol&apos;s &lt;i&gt;DeclareLocal&lt;/i&gt; parameter.&lt;/dd&gt;

&lt;p&gt;This example declares 2 global properties:&lt;/p&gt;
&lt;pre&gt;
    g_tokenHash,g_assayIdentifier
&lt;/pre&gt;

&lt;p&gt;
To initialize the declared global value with a scalar value, use the syntax:
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;property-name&lt;/i&gt; := &lt;i&gt;value&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
You can surround text string values with quotes to aid clarity. Values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are handled as boolean values.
&lt;/p&gt;
&lt;p&gt;This example declares 3 global properties, and sets initial values on two of them:&lt;/p&gt;
&lt;pre&gt;
    g_counter := 0, g_location, g_geography:=&quot;APAC&quot;
&lt;/pre&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="true">
				<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
				<sci:value>Account=</sci:value>
				<sci:value>Maximum Execution Time=</sci:value>
				<sci:value>Parallel Environment=</sci:value>
				<sci:value>Number of Cores=</sci:value>
				<sci:value>Other=</sci:value>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{25A23C6A-4EF0-45F2-8495-3E88896C6262}</sci:value>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>tdmusho</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Tue Oct 20 11:27:02 2020</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>20.1.0.2208</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>CSV_Smiles_Prod_12_31_20_read</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The Unique ID for this item</sci:help>
				<sci:value>{533650AF-F28A-4618-A0DB-F725C2015364}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>CSV_Smiles_Prod_7_23_22_VAMP_MQ</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>75</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ResultFiles Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Include JobDir Files</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>tdmusho\CSV_Smiles_Prod_8_3_22_VAMP_MQ_PROD</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.TextReader.1">
				<sci:component name="Text Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;
The location from which to read the data. Can be a file, a network resource, a global property, or a data record property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;, or select &quot;Global Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot;, or add an input port and select &quot;Data Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;To read multiple files, enter a comma-separated list of any of the above.&lt;/i&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:member>Source Authentication Options</sci:member>
						<sci:value>userdata:/run_8_3_22/index.csv</sci:value>
					</sci:arg>
					<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
						<sci:member>Source Authentication Options Username</sci:member>
						<sci:member>Source Authentication Options Password</sci:member>
						<sci:member>Source Authentication Options Authentication Method</sci:member>
						<sci:member>Source Authentication Options KDC Server</sci:member>
						<sci:member>Source Authentication Options KDC Realm</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
						<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
					</sci:arg>
					<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read. If empty, all records are read.</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies a tag format for identifying the source of data records. Causes a property named &lt;b&gt;SourceTag&lt;/b&gt; to be created to hold the value. Options and their associated tag values are:
&lt;ul&gt;
&lt;li&gt;None: No &lt;b&gt;SourceTag&lt;/b&gt; property is created and any existing &lt;b&gt;SourceTag&lt;/b&gt; properties are removed.
&lt;li&gt;Filename: The name of the file excluding its extension
&lt;li&gt;FilenameAndExtension: The name of the file including its file extension
&lt;li&gt;FullFilename: The name of the file, including its extension and directory path
&lt;li&gt;ZipFilename: When reading a compressed zip file, the filename within the compressed archive
&lt;li&gt;Number: When multiple files are read, a number (1, 2, 3...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;Letter: When multiple files are read , a letter (A, B, C...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;KeepCurrent: Keeps the current value of &lt;b&gt;SourceTag&lt;/b&gt; if present
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Specifies whether to attempt to infer the use of UTF-8 encoding in &lt;i&gt;Source&lt;/i&gt; files when a byte order mark (BOM) is absent from them.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8 is a type of character encoding which represents international characters with multiple bytes, while basic Latin characters remain as a single byte.  If a file begins with a BOM, then the encoding can be inferred with confidence. If not, an indirect approach is necessary. This approach is not 100% reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the raw bytes from the file, then convert the data using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;, which allows you to specify the encoding.
&lt;/ul&gt;

</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
						<sci:member>BeginningText</sci:member>
						<sci:member>EndingText</sci:member>
						<sci:legalval>EndOfFile</sci:legalval>
						<sci:legalval>EndOfParagraph</sci:legalval>
						<sci:legalval selected="true">EndOfLine</sci:legalval>
						<sci:legalval>DelimitText</sci:legalval>
					</sci:arg>
					<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>KeepEndOfLine</sci:member>
						<sci:member>PutTextInProperty</sci:member>
					</sci:arg>
					<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Name of property to hold the block of text</sci:help>
						<sci:value>idx</sci:value>
					</sci:arg>
					<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jul 16 10:51:54 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Read Index</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Text Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
						<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1864</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>32</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval>False</sci:legalval>
						<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.
&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
Note: In an expression inside the subprotocol you can identify the category property name as:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;parentproperty(&apos;RunToCompletion Categorize Using&apos;)&lt;/code&gt;
&lt;p&gt;
And so to access the value of this property on the current data record, use:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;property(parentproperty(&apos;RunToCompletion Categorize Using&apos;))&lt;/code&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
						<sci:value>Account=</sci:value>
						<sci:value>Maximum Execution Time=</sci:value>
						<sci:value>Parallel Environment=</sci:value>
						<sci:value>Number of Cores=</sci:value>
						<sci:value>Other=</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>VAMP RUN</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>SUBPROTOCOLNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>20.1.0.2181</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>75</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>34</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.CalculateMol2">
						<sci:component name="Molecule to MOL2" version="2">
							<sci:arg name="PutMol2OnProperty" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The property to hold the text of the MOL2 representation</sci:help>
								<sci:member>Name</sci:member>
								<sci:member>WriteProperties</sci:member>
								<sci:member>WriteAromaticInfo</sci:member>
								<sci:member>PreserveAromaticInfo</sci:member>
								<sci:member>IntegerFormalCharges</sci:member>
								<sci:member>Coordinates Precision</sci:member>
								<sci:member>Sort Bonds in Increasing Atom Order</sci:member>
								<sci:member>Maximum Number of Waters for Perception</sci:member>
								<sci:value>Mol2</sci:value>
							</sci:arg>
							<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The property containing the name of the molecule. This will be written in the MOL2 string</sci:help>
								<sci:value>Name</sci:value>
							</sci:arg>
							<sci:arg name="WriteProperties" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Write properties as COMMENT records in Tripos Mol2 file</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="WriteAromaticInfo" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If true, write aromatic atom and bond types instead of Kekule structures</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="IntegerFormalCharges" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Some functional groups, such as carboxylates and guanidinium, are normally represented in MOL2 format using fractional formal charges and partial double bonds. When this parameter is set to &lt;i&gt;True&lt;/i&gt;, these groups are written instead using integer formal charges and single or double bonds, which is the way they are represented internally in Pipeline Pilot.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Coordinates Precision" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Number of significant figures after the decimal point to use to write the atom coordinates</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Sort Bonds in Increasing Atom Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When writing the bond records, sort them in increasing order based on the atom numbers of the bonded atoms. Otherwise, the bonds are written in the order they were created in the molecule.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Maximum Number of Waters for Perception" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Maximum number of water residues in a Macromolecule to allow the waters to be included in the chemical perception of fragments and aromaticity. If the number of water residues is greater that this parameter, the perception is done excluding all waters. 
&lt;p&gt;
This parameter can be useful when dealing with macromolecule assemblies containing a large number of water molecules, such as proteins with a solvation shell, for which a full perception can be very expensive in terms of CPU time and memory.
&lt;p&gt;
Leave blank or set to zero to skip the check and allow all water residues to be included in the perception. </sci:help>
								<sci:value>1000</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Output" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>Name of the property that will hold the image</sci:help>
								<sci:legalval type="StringType" selected="true">MOL2</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Oct 15 10:45:14 2012</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Molecule to MOL2</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Mol2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CALCULATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C5C107EB-872C-478a-A87F-6677E377C467}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1590 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Creates a text property containing a Tripos SYBYL MOL2 representation of the molecule</sci:value>
								<sci:value>The name of the property with the MOL2 representation is specified by &lt;i&gt;PutMol2OnProperty&lt;/i&gt;. The input molecules are not modified.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The property &lt;b&gt;MOL2&lt;/b&gt; is implemented as a (hidden) output property, so it can be calculated on demand in PilotScript expressions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To write molecules in MOL2 format to a file see &lt;a href=&quot;javascript:DoLink(&apos;{ED7BAC41-5E3B-4211-9C60-C7EA5E8B7144}&apos;)&quot;&gt;Mol2 Writer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To convert a property with a MOL2 representation of a molecule into a molecule object see &lt;a href=&quot;javascript:DoLink(&apos;{789AEBA7-94E9-46e0-8714-B81FC17D4E1E}&apos;)&quot;&gt;Molecule from MOL2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Molecular data records with an added text property containing the  MOL2 representation of the molecule</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value>Molecular data records for which the  MOL2 representation cannot be calculated</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.0.0.100</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="PreserveAromaticInfo" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Preserve aromatic bond and atom types in the input molecules. If the input molecules are kekulized structures, aromatic bonds are written as single/double bonds. If the input molecules have query aromatic bonds, the bonds are written as aromatic.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Data Access and Manipulation\Converters\Molecule To Text\Molecule to MOL2</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="MOL2|Category">Molecular Formats</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.Mol2Writer.1">
						<sci:component name="Mol2 Writer" version="2">
							<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the MOL file to generate. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.</sci:help>
								<sci:member>CharacterEncoding</sci:member>
								<sci:member>Maximum</sci:member>
								<sci:value>userdata:/mol_data/total_new_species_152021.mol2</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ANSI&lt;/b&gt; is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UTF-8&lt;/b&gt; specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/li&gt;
 
&lt;li&gt;&lt;b&gt;Unicode&lt;/b&gt; and &lt;b&gt;Unicode big endian&lt;/b&gt; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/li&gt;
&lt;/ul&gt;
 
&lt;p&gt;&lt;b&gt;See Also&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Name</sci:member>
								<sci:member>WriteProperties</sci:member>
								<sci:member>WriteAromaticInfo</sci:member>
								<sci:member>PreserveAromaticInfo</sci:member>
								<sci:member>IntegerFormalCharges</sci:member>
								<sci:member>Coordinates Precision</sci:member>
								<sci:member>Sort Bonds in Increasing Atom Order</sci:member>
								<sci:member>Maximum Number of Waters for Perception</sci:member>
							</sci:arg>
							<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The name of the property currently holding the name of each molecule</sci:help>
								<sci:value>Name</sci:value>
							</sci:arg>
							<sci:arg name="WriteProperties" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Write properties associated with the molecule as records in the Tripos Mol2 file. Each property will be written  as a separate record.&lt;/p&gt; 

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Warning:&lt;/b&gt; PipelinePilot can read Mol2 files containing these additional property records, but other Mol2 readers might have problems with them. These additional records are not standard in the Mol2 format specification.&lt;/li&gt;
&lt;/ul&gt;

</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="WriteAromaticInfo" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Write aromatic atom and bond types instead of Kekule structures</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="IntegerFormalCharges" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Some functional groups, such as carboxylates and guanidinium, are normally represented in MOL2 format using fractional formal charges and partial double bonds. When this parameter is set to &lt;i&gt;True&lt;/i&gt;, these groups are written instead using integer formal charges and single or double bonds, which is the way they are represented internally in Pipeline Pilot.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Coordinates Precision" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>Number of significant figures after the decimal point to use to write the atom coordinates</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Sort Bonds in Increasing Atom Order" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When writing the bond records, sort them in increasing order based on the atom numbers of the bonded atoms. Otherwise, the bonds are written in the order they were created in the molecule.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Maximum Number of Waters for Perception" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>Maximum number of water residues in a Macromolecule to allow the waters to be included in the chemical perception of fragments and aromaticity. If the number of water residues is greater that this parameter, the perception is done excluding all waters. 
&lt;p&gt;
This parameter can be useful when dealing with macromolecule assemblies containing a large number of water molecules, such as proteins with a solvation shell, for which a full perception can be very expensive in terms of CPU time and memory.
&lt;p&gt;
Leave blank or set to zero to skip the check and allow all water residues to be included in the perception. </sci:help>
								<sci:value>1000</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CalculateMode" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Parameter Description</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Oct 11 09:35:06 2012</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Mol2 Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{ED7BAC41-5E3B-4211-9C60-C7EA5E8B7144}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1890 -95</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Mol2 Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes a file containing molecular data records in Tripos Mol2 format</sci:value>
								<sci:value>&lt;p&gt;Writes the molecule and associated property data to the &lt;i&gt;Destination&lt;/i&gt; file in Tripos Mol2 format.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;To read Mol2 files, use &lt;a href=&quot;javascript:DoLink(&apos;{EF63BD73-9FDE-4857-A846-07FFEA442290}&apos;)&quot;&gt;Mol2 Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To convert to and from text properties in Mol2 format, use &lt;a href=&quot;javascript:DoLink(&apos;{C5C107EB-872C-478a-A87F-6677E377C467}&apos;)&quot;&gt;Molecule to MOL2&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{789AEBA7-94E9-46e0-8714-B81FC17D4E1E}&apos;)&quot;&gt;Molecule from MOL2&lt;/a&gt;.
&lt;/ul&gt;


</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.0.0.100</sci:value>
							</sci:arg>
							<sci:arg name="PreserveAromaticInfo" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Preserve aromatic bond and atom types in the input molecules. If the input molecules are kekulized structures, aromatic bonds are written as single/double bonds. If the input molecules have query aromatic bonds, the bonds are written as aromatic.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Data Access and Manipulation\Writers\Mol2 Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Study Table Writer" version="2">
							<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Destination for the generated file.&lt;/p&gt;</sci:help>
								<sci:member>IfFileExists</sci:member>
								<sci:value>userdata:/run_8_3_22/original_data_smile_strings_$(idx)_clean.std</sci:value>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specify what the behavior should be if the file in the &lt;i&gt;Destination&lt;/i&gt;
parameter already exists. Available options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Overwrite&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Halt&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New Sheet&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
When creating several sheets in the same protocol, make sure that only one component is working against the destination file at the same time.
&lt;/p&gt;
</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
								<sci:legalval>New Sheet</sci:legalval>
							</sci:arg>
							<sci:arg name="Multiple Value Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When writing an array property into a cell of the study table, this character is used as the delimiter to separate the values.&lt;/p&gt;

&lt;p&gt;Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Semicolon&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Colon&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Comma&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linefeed&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vertical Bar&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
								<sci:legalval>Vertical Bar</sci:legalval>
							</sci:arg>
							<sci:arg name="Sheet Name" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Defines the name to the study table sheet. If left empty a default name will be used.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>25</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Study Table Writer</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{3341B881-25DA-4A76-A7B8-018757755FDB}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2490 -95</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes Materials Studio study tables</sci:value>
								<sci:value>&lt;p&gt;One row will be created for each incoming data record. A column will be
created in the study table for each unique property name encountered, and the
value of each property on a data record will be written to the appropriate
cell.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Study tables use .std as their file extension. If you specify a &lt;i&gt;Destination&lt;/i&gt; without this extension then it will be appended automatically.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Material data</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.5.2.500</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/materials</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed May 26 14:38:12 2010</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Materials\Writers\Study Table Writer</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Subprotocol" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.
&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
Note: In an expression inside the subprotocol you can identify the category property name as:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;parentproperty(&apos;RunToCompletion Categorize Using&apos;)&lt;/code&gt;
&lt;p&gt;
And so to access the value of this property on the current data record, use:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;property(parentproperty(&apos;RunToCompletion Categorize Using&apos;))&lt;/code&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>localhost</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
								<sci:value>Account=</sci:value>
								<sci:value>Maximum Execution Time=</sci:value>
								<sci:value>Parallel Environment=</sci:value>
								<sci:value>Number of Cores=</sci:value>
								<sci:value>Other=</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Make and Clean Molecule</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>SUBPROTOCOLNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -455</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>20.1.0.2181</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.CalculateSmiles.1">
								<sci:component name="Molecule from SMILES" version="2">
									<sci:arg name="FromProperty" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The name of the property in the data
which holds the SMILES information</sci:help>
										<sci:member>KekulizeAromaticBonds</sci:member>
										<sci:member>Send Empty SMILES to Fail Port</sci:member>
										<sci:member>Parse RAtoms from CXSMILES</sci:member>
										<sci:value>Smiles</sci:value>
									</sci:arg>
									<sci:arg name="KekulizeAromaticBonds" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Turn aromatic bonds into single/double bonds (set to True) or into aromatic query bonds (set to False). Molecules created with aromatic query bonds are more suitable as queries than as specific molecules. They should not be used as input for property calculators such as Molecular Weight, pKa and others, which require the structure to be uniquely defined.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Send Empty SMILES to Fail Port" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>When set to True, data records with SMILES represented by empty strings or strings with only blank characters are sent to the Fail port. 
&lt;p&gt;
When set to False, empty SMILES strings generate empty molecules with no atoms or bonds.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parse RAtoms from CXSMILES" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>Set this parameter to True to parse any Rgroup information from ChemAxon SMILES extentions (CXSMILES), if present. The extension is separated from the actual SMILES by a space or tab. When the parameter is set to False (the default state) the extension is ignored.
&lt;p&gt;
Examples
&lt;br&gt;
C1O[*]CO[*]1 |$;;_R2;;;_R1$,RG:_R1={C},{N},_R2={C},{N}|
&lt;br&gt;
Cl[*](Br)I |$;_R1;;$,RG:_R1={*CCCC(C*)CC*|
&lt;br&gt;
[*]N[C@@H](C=O)C([*])=O |$_R1;;;;;;_R2;$|
&lt;br&gt;
NC(=N)NCCC[C@H](N[*])C([*])=O |$;;;;;;;;;_R1;;_R2;$|
&lt;p&gt;
The star atoms (unknown atom type) in the SMILES are replaced by the corresponding numbered R atoms from the extension. Any RG fragment information present in the Rgroup extension is ignored.
&lt;p&gt;
Only the Rgroup information in the CXSMILES extension is parsed, any other extension is ignored.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval selected="true">Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval selected="true">Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Mar 30 15:06:09 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Molecule from SMILES</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Molecule from SMILES</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Converts a Daylight SMILES text property to a molecule</sci:value>
										<sci:value>&lt;p&gt;Builds a molecular representation for each data record from the SMILES string found in the property list. If a molecular representation is already present, it is overwritten by the new molecule. The input SMILES string is preserved.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To create a string property containing SMILES data, use &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BFF7D15}&apos;)&quot;&gt;Molecule to SMILES&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BC27D15}&apos;)&quot;&gt;Canonical Smiles&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To read and write SMILES files, use &lt;a href=&quot;javascript:DoLink(&apos;{60FC1A04-61FD-4D4F-AC3F-A818AB614C78}&apos;)&quot;&gt;SMILES Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{72A5A427-651F-4847-9525-54CB438A7166}&apos;)&quot;&gt;SMILES Writer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value>Molecular data record created from SMILES string</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.1.0.51</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Data Access and Manipulation\Converters\Molecule From Text\Molecule from SMILES</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.TransformMolecule.1">
								<sci:component name="Center Molecule" version="2">
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Parameter Help</sci:help>
										<sci:value>CenterMolecule</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Nov 02 14:58:35 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Center Molecule</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Clear Charges</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{793B7ADF-E6CC-49BD-82DA-EBBA9B98C905}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Translates a molecule so that its geometric center lies at the origin</sci:value>
										<sci:value>Transform the molecular coordinates so that the geometric center lies at the origin and outputs the molecule with its new coordinates. Works for both 2D and 3D molecules.</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value>Molecule with new coordinates</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Data Access and Manipulation\Manipulators\Center Molecule</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">6.0.1.7</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.TransformMolecule.1">
								<sci:component name="Add Hydrogens" version="2">
									<sci:arg name="Action" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies the Hydrogen fill mode:

&lt;p&gt;Adds explicit hydrogens to the molecule. Options include: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AddHydrogens&lt;/b&gt;:  Add hydrogens to all atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AddHeteroHydrogens&lt;/b&gt;:  Add hydrogens just to heteroatoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AddStereoHydrogens&lt;/b&gt;:  Add hydrogens just to stereoatoms. Explicit Hydrogens are only added to stereoatoms in which all the atoms attached to the chiral center are in rings or the attached atoms are also stereocenters. Adding these hydrogens often avoids having to put a wedge bond on a ring bond or on a bond to another stereoatom.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AddBridgeHeadHydrogens&lt;/b&gt;:  Add hydrogens to any bridgehead atom.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:legalval selected="true">AddHydrogens</sci:legalval>
										<sci:legalval>AddHeteroHydrogens</sci:legalval>
										<sci:legalval>AddStereoHydrogens</sci:legalval>
										<sci:legalval>AddBridgeHeadHydrogens</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Feb 27 09:41:27 2007</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Add Hydrogens</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{4A7D57EA-6B39-43DE-B92C-858BD216569A}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Add Hydrogens</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>690 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Adds hydrogens to the molecule</sci:value>
										<sci:value>&lt;p&gt;Adds explicit hydrogens to the molecule. Options include: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AddHydrogens&lt;/b&gt;:  Add hydrogens to all atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AddHeteroHydrogens&lt;/b&gt;:  Add hydrogens just to heteroatoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AddStereoHydrogens&lt;/b&gt;:  Add hydrogens just to stereoatoms. Explicit Hydrogens are only added to stereoatoms in which all the atoms attached to the chiral center are in rings or the attached atoms are also stereocenters. Adding these hydrogens often avoids having to put a wedge bond on a ring bond or on a bond to another stereoatom.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AddBridgeHeadHydrogens&lt;/b&gt;:  Add hydrogens to any bridgehead atom.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove explicit hydrogens, use &lt;a href=&quot;javascript:DoLink(&apos;{5A520938-939F-4210-A816-A023520422D7}&apos;)&quot;&gt;Remove Hydrogens&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Data Access and Manipulation\Manipulators\Add Hydrogens</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">6.1.0.8</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Clean Molecule" version="2">
									<sci:arg name="Clean Mode" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Enhanced Clean replicates the clean behavior available in BIOVIA Draw.

For structures having non-null coordinates, there are two clean modes:

&lt;b&gt;Enhanced&lt;/b&gt; mode attempts to retain the original structure orientation and uses an internal set of template structures to generate standard layouts for some fused ring systems.

&lt;b&gt;Standard&lt;/b&gt; mode will attempt to generate a pleasing layout using only the input coordinates as a guide.

Both modes ensure that stereochemistry is unchanged as a result of coordinate updates.</sci:help>
										<sci:legalval selected="true">Enhanced</sci:legalval>
										<sci:legalval>Standard</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval selected="true">False</sci:legalval>
										<sci:legalval>True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval selected="true">Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval selected="true">Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Clean Molecule</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ComponentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{D61D9E89-B784-445C-BEE7-F3785BE47ED5}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>990 -95</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Clean 2D molecule coordinates using BIOVIA Draw algorithm</sci:value>
										<sci:value>Invokes a template-based enhanced clean algorithm used by BIOVIA Draw.</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value>Cleans up structure coordinates</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value>Structures that cannot be cleaned, or generated errors during load or cleaning operations.</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.5.0.606</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Oct 07 13:36:06 2014</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Data Access and Manipulation\Manipulators\Clean Molecule</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.TransformMolecule.1">
								<sci:component name="Center Molecule" version="2">
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Parameter Help</sci:help>
										<sci:value>CenterMolecule</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Nov 02 14:58:35 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Center Molecule</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Clear Charges</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{793B7ADF-E6CC-49BD-82DA-EBBA9B98C905}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1290 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Translates a molecule so that its geometric center lies at the origin</sci:value>
										<sci:value>Transform the molecular coordinates so that the geometric center lies at the origin and outputs the molecule with its new coordinates. Works for both 2D and 3D molecules.</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value>Molecule with new coordinates</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Data Access and Manipulation\Manipulators\Center Molecule</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">6.0.1.7</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:connectid from="0" to="1" type="true"/>
							<sci:connectid from="1" to="2" type="true"/>
							<sci:connectid from="2" to="3" type="true"/>
							<sci:connectid from="3" to="4" type="true"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="HTML Material Table Viewer (Jmol)" version="2">
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Title</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
								<sci:value>Molecular Properties</sci:value>
							</sci:arg>
							<sci:arg name="Applet Size" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Applet Size Parameters&lt;/p&gt;</sci:help>
								<sci:member>Applet Size Width</sci:member>
								<sci:member>Applet Size Height</sci:member>
							</sci:arg>
							<sci:arg name="Applet Size Width" type="LongType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;The width in pixels of the applet.&lt;/p&gt;</sci:help>
								<sci:value>200</sci:value>
							</sci:arg>
							<sci:arg name="Applet Size Height" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The height in pixels of the applet.&lt;/p&gt;</sci:help>
								<sci:value>150</sci:value>
							</sci:arg>
							<sci:arg name="Caption Source" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Select the source of the caption to be displayed underneath the Jmol applet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Fixed List&lt;/b&gt;: The caption will be generated from the elements selected from the fixed list contained in &lt;i&gt;Caption&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Property&lt;/b&gt;: The caption will be the value contained in the property with the name specified in &lt;i&gt;Caption Property&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>Caption</sci:member>
								<sci:member>Caption Property</sci:member>
								<sci:legalval selected="true">Fixed List</sci:legalval>
								<sci:legalval>Property</sci:legalval>
							</sci:arg>
							<sci:arg name="Caption" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Select which elements, if any, you wish to be displayed in a caption underneath the Jmol applet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Name&lt;/b&gt;: The name of the Materials Studio document containing the structure.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Chemical Formula&lt;/b&gt;: The chemical formula of the structure. If the structure is 3D periodic then the chemical formula of one unit cell will be displayed.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Lattice Type&lt;/b&gt;: The type of the lattice. This will be displayed for 3D periodic structures only.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Number of Atoms&lt;/b&gt;: The number of atoms in the structure. If the structure is 3D periodic then the number of atoms in one unit cell will be displayed.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:validscript>#ok := true;
if parameter(&quot;Caption Source&quot;) eq &quot;Fixed List&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Caption Source is Fixed List&quot;);
	end if;
end if;
#ok;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;Set Caption Source to Fixed List&quot;);
parameter(&quot;Caption Source&quot;) eq &quot;Fixed List&quot;;</sci:enabledscript>
								<sci:legalval selected="true">Name</sci:legalval>
								<sci:legalval>Chemical Formula</sci:legalval>
								<sci:legalval>Lattice Type</sci:legalval>
								<sci:legalval>Number of Atoms</sci:legalval>
							</sci:arg>
							<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property that will contain the caption which is to be displayed underneath the Jmol applet. This is only required when &lt;i&gt;Caption Source&lt;/i&gt; is set to &lt;b&gt;Property&lt;/b&gt;.&lt;/p&gt;</sci:help>
								<sci:validscript>#ok := true;
if parameter(&quot;Caption Source&quot;) eq &quot;Property&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Caption Source is Property&quot;);
	end if;
end if;
#ok;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;Set Caption Source to Property&quot;);
parameter(&quot;Caption Source&quot;) eq &quot;Property&quot;;</sci:enabledscript>
								<sci:value>MyCaption</sci:value>
							</sci:arg>
							<sci:arg name="Rows Per Page" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The number of rows displayed on each page.</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>localhost</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
								<sci:member>Reporting Stylesheet</sci:member>
							</sci:arg>
							<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
								<sci:value>{42691EC8-0CE0-4DB9-8B3C-5379CBB967A7}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Jmol Implementation" type="StringType" required="true" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Jmol Implementation</sci:value>
										<sci:value>Jmol Implementation</sci:value>
										<sci:value>Jmol Implementation</sci:value>
										<sci:value>Jmol Implementation</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>Defines whether the component will use Java (Jmol) or HTML5 with JavaScript (JSmol).
Java provides better performance, but users may encounter security issues, and Java may not be available on all devices.
HTML5 is much slower, but is well supported in recent browsers.
If more than one Jmol component is used in a report, all those components must use the same Jmol implementation.
&lt;p&gt;Optionally, security restrictions may be overridden to permit Java compatibility in some browsers. Browser options are accessed via the &lt;i&gt;Advanced Options&lt;/i&gt; parameters in the HTML Viewer components, together with preferences available in the target browser program.&lt;/p&gt;
&lt;p&gt;More details can be found in Chapter 2 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Include Helper Javascript to &quot;True&quot;&apos;);
	Parameter(&apos;Include Helper Javascript&apos;) eq &apos;True&apos;;</sci:enabledscript>
								<sci:legalval selected="true">HTML5</sci:legalval>
								<sci:legalval>Java</sci:legalval>
							</sci:arg>
							<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Advanced Options</sci:value>
										<sci:value>Advanced Options</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:member>Include Format and Position CSS</sci:member>
								<sci:member>Use Default Browser</sci:member>
								<sci:member>Set IE Compatibility</sci:member>
							</sci:arg>
							<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Include Format and Position CSS</sci:value>
										<sci:value>Include Format and Position CSS</sci:value>
										<sci:value>Include Format and Position CSS</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Set IE Compatibility</sci:value>
										<sci:value>Set IE Compatibility</sci:value>
										<sci:value>Set IE Compatibility</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Browser</sci:value>
										<sci:value>Use Default Browser</sci:value>
										<sci:value>Use Default Browser</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>HTML Material Table Viewer (Jmol)</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ViewerNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BA85728-C2C7-4068-A3E3-3AED3ADC1BAE}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2490 -455</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Generates and displays an HTML table page of materials data and properties</sci:value>
								<sci:value>&lt;p&gt;Each row of the table corresponds to one materials record, with columns for the structure and each property. Each structure is displayed using an embedded Jmol applet.&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://jmol.sourceforge.net/&apos;)&quot;&gt;Jmol home page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Material data</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>20.1.0.2094</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/materials</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Aug 14 17:53:26 2019</sci:value>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Processing Order</sci:help>
								<sci:value>DrainTopDown</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Materials\Viewers\HTML Material Table Viewer (Jmol)</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Perl Material Filter" version="2">
									<sci:arg name="Parameter1" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The value for the property used by the filter.&lt;/p&gt; </sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;MaterialsScript (Perl) to execute. A &lt;i&gt;templated&lt;/i&gt; script is provided, which must be replaced.&lt;/p&gt;
&lt;p&gt;The script must implement the following three subroutines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition for MaterialsScript Perl an additional method GetMaterialsDocument($data) is provided. This can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt; 
</sci:help>
										<sci:value>use ComponentModules::Utilities::MaterialFilter;
</sci:value>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>For internal use only.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Component Comment</sci:help>
										<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
									</sci:arg>
									<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Component Usage</sci:help>
										<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Is Material?</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol ShowComment</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Add Protocol Comment Here</sci:help>
										<sci:value>Add Protocol Comment Here</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{85E816AD-6B7B-4627-852B-D2D4E1AEF9D5}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Provides a template for Perl Materials Toolkit filters</sci:value>
										<sci:value>&lt;p&gt;Use this template as a starting point to create custom Perl components to filter structures based on desired conditions using MaterialsScript.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Script&lt;/i&gt; contains boiler plate code with the three required interface methods, &lt;code&gt;onInitialize()&lt;/code&gt;, &lt;code&gt;onProcess()&lt;/code&gt; and &lt;code&gt;onFinalize()&lt;/code&gt;. Add the necessary code to calculate the custom properties.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt; 

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Unprocessed data records</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>8.4.5.30</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/materials</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed May 04 17:18:37 2011</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Materials\Materials Toolkit\Perl Templates\Perl Material Filter</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>If Property(&quot;ErrorText&quot;) Is Defined Then
	__MS_ErrorTextCache := ErrorText;
end if</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Cache Error Message</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Prepare Jmol Input" version="2">
									<sci:arg name="Text Source" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:member>Text Property</sci:member>
										<sci:member>Text</sci:member>
										<sci:legalval selected="true">Fixed List</sci:legalval>
										<sci:legalval>Property</sci:legalval>
									</sci:arg>
									<sci:arg name="Text" type="StringType" required="true" visibility="visible" multi="false">
										<sci:validscript>#ok := true;
if parameter(&quot;Text Source&quot;) eq &quot;Fixed List&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Text Source is Fixed List&quot;);
	end if;
end if;
#ok;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;Set Text Source to Fixed List&quot;);
parameter(&quot;Text Source&quot;) eq &quot;Fixed List&quot;;</sci:enabledscript>
										<sci:legalval selected="true">Name</sci:legalval>
										<sci:legalval>Chemical Formula</sci:legalval>
									</sci:arg>
									<sci:arg name="Text Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:validscript>#ok := true;
if parameter(&quot;Text Source&quot;) eq &quot;Property&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Text Source is Property&quot;);
	end if;
end if;
#ok;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;Set Text Source to Property&quot;);
parameter(&quot;Text Source&quot;) eq &quot;Property&quot;;</sci:enabledscript>
										<sci:value>MyText</sci:value>
									</sci:arg>
									<sci:arg name="Caption Source" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:member>Caption</sci:member>
										<sci:member>Caption Property</sci:member>
										<sci:value>$(Caption Source)</sci:value>
									</sci:arg>
									<sci:arg name="Caption" type="StringType" required="false" visibility="visible" multi="true">
										<sci:validscript>#ok := true;
if parameter(&quot;Caption Source&quot;) eq &quot;Fixed List&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Caption Source is Fixed List&quot;);
	end if;
end if;
#ok;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;Set Caption Source to Fixed List&quot;);
parameter(&quot;Caption Source&quot;) eq &quot;Fixed List&quot;;</sci:enabledscript>
										<sci:value>$(Caption)</sci:value>
									</sci:arg>
									<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:validscript>#ok := true;
if parameter(&quot;Caption Source&quot;) eq &quot;Property&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Caption Source is Property&quot;);
	end if;
end if;
#ok;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;Set Caption Source to Property&quot;);
parameter(&quot;Caption Source&quot;) eq &quot;Property&quot;;</sci:enabledscript>
										<sci:value>$(Caption Property)</sci:value>
									</sci:arg>
									<sci:arg name="Jmol Startup Script" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Additional Jmol script that will be executed after the structure has been loaded into Jmol. Documentation for Jmol scripting commands can be found by following the relevant links on the &lt;a href=&quot;javascript:DoLink(&apos;http://jmol.sourceforge.net/&apos;)&quot;&gt;Jmol home page&lt;/a&gt;.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Output Structure Location Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:value>__StructureFileRelativePath</sci:value>
									</sci:arg>
									<sci:arg name="Output Caption Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:value>__Caption</sci:value>
									</sci:arg>
									<sci:arg name="Output Text Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:value>__Text</sci:value>
									</sci:arg>
									<sci:arg name="Output Jmol Script Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:value>__JmolScriptProperty</sci:value>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
										<sci:value>PrepareJmolInputGUID</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>REPORTSUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{738544C0-AF74-4A25-9601-DF0EED121B94}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>690 -95</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
										<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>8.4.5.30</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/materials</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Apr 21 15:01:44 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Prepare Jmol Input from Materials Node</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Materials\Utilities\Internals\Jmol Internals\Prepare Jmol Input</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>If Property(&quot;__MS_ErrorTextCache&quot;) Is Defined Then
	ErrorText := __MS_ErrorTextCache;
	Remove(&quot;__MS_ErrorTextCache&quot;);
end if</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Restore Error Message</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>990 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="No-op" version="2">
									<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
										<sci:legalval selected="true">LeaveData</sci:legalval>
										<sci:legalval>ClearData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>PassDataToPort</sci:value>
									</sci:arg>
									<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>the port to pass data to</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>No-op</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Evaluate Expression</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1290 -275</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
										<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.1.1</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="HTML Table Jmol Viewer" version="2">
									<sci:arg name="Structure Location Property" type="StringType" required="true" visibility="visible" multi="false">
										<sci:value>__StructureFileRelativePath</sci:value>
									</sci:arg>
									<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:value>__Caption</sci:value>
									</sci:arg>
									<sci:arg name="Jmol Script Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Additional Jmol script that will be executed after the structure has been loaded into Jmol. Documentation for Jmol scripting commands can be found by following the relevant links on the &lt;a href=&quot;javascript:DoLink(&apos;http://jmol.sourceforge.net/&apos;)&quot;&gt;Jmol home page&lt;/a&gt;.&lt;/p&gt;</sci:help>
										<sci:value>__JmolScriptProperty</sci:value>
									</sci:arg>
									<sci:arg name="Error Property" type="StringType" required="true" visibility="visible" multi="false">
										<sci:value>ErrorText</sci:value>
									</sci:arg>
									<sci:arg name="Title" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
												<sci:value>Title</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
										<sci:value>Title</sci:value>
									</sci:arg>
									<sci:arg name="Applet Size" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Applet Size Parameters&lt;/p&gt;</sci:help>
										<sci:member>Applet Size Width</sci:member>
										<sci:member>Applet Size Height</sci:member>
									</sci:arg>
									<sci:arg name="Applet Size Width" type="LongType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:value>$(Applet Size Width)</sci:value>
									</sci:arg>
									<sci:arg name="Applet Size Height" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:value>$(Applet Size Height)</sci:value>
									</sci:arg>
									<sci:arg name="Rows Per Page" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The number of rows displayed on each page.</sci:help>
										<sci:value>$(Rows Per Page)</sci:value>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
										<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
										<sci:member>Reporting Stylesheet</sci:member>
									</sci:arg>
									<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
										<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
										<sci:value>{42691EC8-0CE0-4DB9-8B3C-5379CBB967A7}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Jmol Implementation" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
												<sci:value>Jmol Implementation</sci:value>
												<sci:value>Jmol Implementation</sci:value>
												<sci:value>Jmol Implementation</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Defines whether the component will use Java (Jmol) or HTML5 with JavaScript (JSmol).
Java provides better performance, but users may encounter security issues, and Java may not be available on all devices.
HTML5 is much slower, but is well supported in recent browsers.
If more than one Jmol component is used in a report, all those components must use the same Jmol implementation.
&lt;p&gt;Optionally, security restrictions may be overridden to permit Java compatibility in some browsers. Browser options are accessed via the &lt;i&gt;Advanced Options&lt;/i&gt; parameters in the HTML Viewer components, together with preferences available in the target browser program.&lt;/p&gt;
&lt;p&gt;More details can be found in Chapter 2 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;</sci:help>
										<sci:value>Jmol Implementation</sci:value>
									</sci:arg>
									<sci:arg name="Include Helper Javascript" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
												<sci:value>Include Helper Javascript</sci:value>
												<sci:value>Include Helper Javascript</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Specifies whether JavaScript supporting this component will be made available to downstream HTML Viewer components.</sci:help>
										<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Jmol Implementation to &quot;Java&quot;&apos;);
	Parameter(&apos;Jmol Implementation&apos;) eq &apos;Java&apos;;</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Advanced Options" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
												<sci:value>Advanced Options</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
										</sci:metaproplist>
										<sci:member>Include Format and Position CSS</sci:member>
										<sci:member>Use Default Browser</sci:member>
										<sci:member>Set IE Compatibility</sci:member>
										<sci:value>Advanced Options</sci:value>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Include Format and Position CSS" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" expanded="true">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Include Format and Position CSS</sci:value>
												<sci:value>Include Format and Position CSS</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
										<sci:value>Include Format and Position CSS</sci:value>
									</sci:arg>
									<sci:arg name="Set IE Compatibility" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
												<sci:value>Set IE Compatibility</sci:value>
												<sci:value>Set IE Compatibility</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
										<sci:value>Set IE Compatibility</sci:value>
									</sci:arg>
									<sci:arg name="Use Default Browser" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Browser</sci:value>
												<sci:value>Use Default Browser</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
										<sci:value>Use Default Browser</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>HTML Table Jmol Viewer</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>REPORTVIEWERNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{30B033E7-8D64-4462-82E3-5FC999B26C20}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1590 -275</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Generates and displays an HTML table page with Jmol applet embedded for each record</sci:value>
										<sci:value>&lt;br/&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>20.1.0.2094</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/materials</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Aug 13 18:47:35 2019</sci:value>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Processing Order</sci:help>
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Materials\Utilities\Internals\Jmol Reporting\HTML Table Jmol Viewer</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:connectid from="6" to="3" type="true"/>
							<sci:connectid from="6" to="5" type="false"/>
							<sci:connectid from="3" to="0" type="true"/>
							<sci:connectid from="0" to="2" type="true"/>
							<sci:connectid from="0" to="2" type="false"/>
							<sci:connectid from="2" to="5" type="true"/>
							<sci:connectid from="5" to="1" type="true"/>
							<sci:version iVal="1"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>@idx := idx;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Set global index</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -635</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Clear Component" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>ClearComponent</sci:value>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ComponentNode</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Apr 28 14:59:22 2005</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Clear Component</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{72CAFE5E-7550-493a-B762-9ABACC8D9F51}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>390 -635</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Clears the component out of the data, but leave the property collection.</sci:value>
								<sci:value>Clears the component out of the data, but leave the property collection. This is useful if we wish to view the raw properties in Excel or the Delimited Text Writer (rather than having them &quot;interpret&quot; the component).</sci:value>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>5.0.0.14</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon</sci:help>
								<sci:value>Copy Property</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>17</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Component Utilities\Clear Component</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.TextReader.1">
						<sci:component name="Text Reader" version="2">
							<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:help>&lt;p&gt;
The location from which to read the data. Can be a file, a network resource, a global property, or a data record property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;, or select &quot;Global Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot;, or add an input port and select &quot;Data Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;To read multiple files, enter a comma-separated list of any of the above.&lt;/i&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>SourceTag</sci:member>
								<sci:member>Keep Properties</sci:member>
								<sci:member>UTF-8 Auto Detect</sci:member>
								<sci:member>Source Authentication Options</sci:member>
								<sci:value>userdata:/run_8_3_22/original_data_smile_strings_$(idx).csv</sci:value>
							</sci:arg>
							<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Source Authentication Options Username</sci:member>
								<sci:member>Source Authentication Options Password</sci:member>
								<sci:member>Source Authentication Options Authentication Method</sci:member>
								<sci:member>Source Authentication Options KDC Server</sci:member>
								<sci:member>Source Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Source Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Source Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to read. If empty, all records are read.</sci:help>
							</sci:arg>
							<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies a tag format for identifying the source of data records. Causes a property named &lt;b&gt;SourceTag&lt;/b&gt; to be created to hold the value. Options and their associated tag values are:
&lt;ul&gt;
&lt;li&gt;None: No &lt;b&gt;SourceTag&lt;/b&gt; property is created and any existing &lt;b&gt;SourceTag&lt;/b&gt; properties are removed.
&lt;li&gt;Filename: The name of the file excluding its extension
&lt;li&gt;FilenameAndExtension: The name of the file including its file extension
&lt;li&gt;FullFilename: The name of the file, including its extension and directory path
&lt;li&gt;ZipFilename: When reading a compressed zip file, the filename within the compressed archive
&lt;li&gt;Number: When multiple files are read, a number (1, 2, 3...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;Letter: When multiple files are read , a letter (A, B, C...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;KeepCurrent: Keeps the current value of &lt;b&gt;SourceTag&lt;/b&gt; if present
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Filename</sci:legalval>
								<sci:legalval>FilenameAndExtension</sci:legalval>
								<sci:legalval>FullFilename</sci:legalval>
								<sci:legalval>ZipFilename</sci:legalval>
								<sci:legalval>Number</sci:legalval>
								<sci:legalval>Letter</sci:legalval>
								<sci:legalval>KeepCurrent</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
								<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
							</sci:arg>
							<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Specifies whether to attempt to infer the use of UTF-8 encoding in &lt;i&gt;Source&lt;/i&gt; files when a byte order mark (BOM) is absent from them.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8 is a type of character encoding which represents international characters with multiple bytes, while basic Latin characters remain as a single byte.  If a file begins with a BOM, then the encoding can be inferred with confidence. If not, an indirect approach is necessary. This approach is not 100% reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the raw bytes from the file, then convert the data using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;, which allows you to specify the encoding.
&lt;/ul&gt;

</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
								<sci:member>BeginningText</sci:member>
								<sci:member>EndingText</sci:member>
								<sci:legalval>EndOfFile</sci:legalval>
								<sci:legalval>EndOfParagraph</sci:legalval>
								<sci:legalval selected="true">EndOfLine</sci:legalval>
								<sci:legalval>DelimitText</sci:legalval>
							</sci:arg>
							<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>KeepEndOfLine</sci:member>
								<sci:member>PutTextInProperty</sci:member>
							</sci:arg>
							<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Name of property to hold the block of text</sci:help>
								<sci:value>Smiles</sci:value>
							</sci:arg>
							<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:value>ComponentReturnsPass</sci:value>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 16 10:51:54 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Read Filename</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -635</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Text Reader</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
								<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1864</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{2E0553EB-BF9F-4461-BE24-E0DA7B0C5453}</sci:value>
								<sci:value>3</sci:value>
								<sci:value>0</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CalculateSmiles.1">
						<sci:component name="Check SMILES" version="2">
							<sci:arg name="FromProperty" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the property in the data
which holds the SMILES information</sci:help>
								<sci:value>smiles</sci:value>
							</sci:arg>
							<sci:arg name="Check Smiles Only" type="BoolType" required="true" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jun 15 11:03:47 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Check SMILES</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Molecule from SMILES</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FilterNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C38C21FC-F4C1-459B-9844-6371B99DF8FB}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -635</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Checks input strings to verify that they are valid SMILES</sci:value>
								<sci:value>Strings in the input property specified by &lt;i&gt;FromProperty&lt;/i&gt; are parsed as SMILES. The strings that contain valid SMILES are sent to the Pass port. Strings perceived as invalid SMILES are sent to the Fail port. No conversion to structure is actually done.

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data record with valid SMILES string</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data record with invalid SMILES string</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.2.0.0</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Data Access and Manipulation\Filters\Check SMILES</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Material from Molecule" version="2">
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
								<sci:value>__MolFileTempDir</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval>Halt</sci:legalval>
								<sci:legalval selected="true">Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>For internal use only.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Material from Molecule</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{A26E18E2-DB6D-4E83-9EB9-C87DC3FB362C}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1590 -635</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Converts a molecule data record into materials data</sci:value>
								<sci:value>&lt;p&gt;A molecule data record is converted to a data record representing the materials data model. 
Any existing data properties are preserved, but the data conversion can be lossy with respect to information
 in the Molecule object.&lt;/p&gt;

&lt;p&gt;This enables data interchange when designing protocols that mix components from Materials Studio Collection 
and Chemistry (or other) components. &lt;/p&gt;

&lt;p&gt;Materials data records can be consumed by components in the Materials Studio Collection, 
and are available to the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.html&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For further discussion of the issues around data records, and different associated chemistry data node types, see
the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt; Materials Studio Collection User Guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;



</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value>Molecular data record</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Material data</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records that could not be converted to Material data</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.4.5.30</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/materials</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed May 04 16:28:20 2011</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{1C85AACE-8417-42B5-97CB-40D535B8CFEF}</sci:value>
								<sci:value>3</sci:value>
								<sci:value>0</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Materials\Converters\Material from Molecule</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Build Crystal" version="2">
							<sci:arg name="Space Group" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The space group in which the input structure should be built, options may include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;1 P1&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;2 P-1&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;3 P2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;4 P21&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;5 C2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;6 PM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;7 PC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;8 CM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;9 CC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;10 P2/M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;11 P21/M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;12 C2/M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;13 P2/C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;14 P21/C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;15 C2/C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;16 P222&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;17 P2221&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;18 P21212&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;19 P212121&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;20 C2221&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;21 C222&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;22 F222&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;23 I222&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;24 I212121&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;25 PMM2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;26 PMC21&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;27 PCC2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;28 PMA2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;29 PCA21&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;30 PNC2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;31 PMN21&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;32 PBA2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;33 PNA21&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;34 PNN2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;35 CMM2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;36 CMC21&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;37 CCC2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;38 AMM2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;39 ABM2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;40 AMA2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;41 ABA2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;42 FMM2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;43 FDD2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;44 IMM2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;45 IBA2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;46 IMA2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;47 PMMM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;48 PNNN&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;49 PCCM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;50 PBAN&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;51 PMMA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;52 PNNA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;53 PMNA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;54 PCCA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;55 PBAM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;56 PCCN&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;57 PBCM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;58 PNNM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;59 PMMN&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;60 PBCN&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;61 PBCA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;62 PNMA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;63 CMCM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;64 CMCA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;65 CMMM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;66 CCCM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;67 CMMA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;68 CCCA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;69 FMMM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;70 FDDD&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;71 IMMM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;72 IBAM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;73 IBCA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;74 IMMA&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;75 P4&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;76 P41&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;77 P42&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;78 P43&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;79 I4&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;80 I41&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;81 P-4&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;82 I-4&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;83 P4/M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;84 P42/M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;85 P4/N&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;86 P42/N&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;87 I4/M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;88 I41/A&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;89 P422&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;90 P4212&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;91 P4122&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;92 P41212&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;93 P4222&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;94 P42212&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;95 P4322&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;96 P43212&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;97 I422&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;98 I4122&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;99 P4MM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;100 P4BM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;101 P42CM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;102 P42NM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;103 P4CC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;104 P4NC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;105 P42MC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;106 P42BC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;107 I4MM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;108 I4CM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;109 I41MD&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;110 I41CD&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;111 P-42M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;112 P-42C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;113 P-421M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;114 P-421C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;115 P-4M2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;116 P-4C2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;117 P-4B2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;118 P-4N2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;119 I-4M2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;120 I-4C2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;121 I-42M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;122 I-42D&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;123 P4/MMM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;124 P4/MCC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;125 P4/NBM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;126 P4/NNC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;127 P4/MBM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;128 P4/MNC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;129 P4/NMM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;130 P4/NCC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;131 P42/MMC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;132 P42/MCM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;133 P42/NBC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;134 P42/NNM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;135 P42/MBC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;136 P42/MNM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;137 P42/NMC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;138 P42/NCM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;139 I4/MMM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;140 I4/MCM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;141 I41/AMD&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;142 I41/ACD&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;143 P3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;144 P31&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;145 P32&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;146 R3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;147 P-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;148 R-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;149 P312&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;150 P321&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;151 P3112&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;152 P3121&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;153 P3212&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;154 P3221&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;155 R32&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;156 P3M1&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;157 P31M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;158 P3C1&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;159 P31C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;160 R3M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;161 R3C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;162 P-31M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;163 P-31C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;164 P-3M1&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;165 P-3C1&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;166 R-3M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;167 R-3C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;168 P6&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;169 P61&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;170 P65&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;171 P62&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;172 P64&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;173 P63&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;174 P-6&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;175 P6/M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;176 P63/M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;177 P622&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;178 P6122&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;179 P6522&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;180 P6222&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;181 P6422&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;182 P6322&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;183 P6MM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;184 P6CC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;185 P63CM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;186 P63MC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;187 P-6M2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;188 P-6C2&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;189 P-62M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;190 P-62C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;191 P6/MMM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;192 P6/MCC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;193 P63/MCM&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;194 P63/MMC&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;195 P23&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;196 F23&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;197 I23&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;198 P213&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;199 I213&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;200 PM-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;201 PN-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;202 FM-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;203 FD-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;204 IM-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;205 PA-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;206 IA-3&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;207 P432&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;208 P4232&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;209 F432&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;210 F4132&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;211 I432&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;212 P4332&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;213 P4132&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;214 I4132&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;215 P-43M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;216 F-43M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;217 I-43M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;218 P-43N&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;219 F-43C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;220 I-43D&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;221 PM-3M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;222 PN-3N&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;223 PM-3N&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;224 PN-3M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;225 FM-3M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;226 FM-3C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;227 FD-3M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;228 FD-3C&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;229 IM-3M&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;230 IA-3D&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
								<sci:member>Space Group Qualifier</sci:member>
								<sci:member>List Space Groups</sci:member>
								<sci:legalvalscript>#idx := 0;
#legalvals := &quot;&quot;;
Resize(#legalvals, #idx+2);
#legalvals[++#idx] := &apos;1 P1&apos;;
#legalvals[++#idx] := &apos;2 P-1&apos;;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;3 P2&apos;;
end if;
Resize(#legalvals, #idx+2);
#legalvals[++#idx] := &apos;4 P21&apos;;
#legalvals[++#idx] := &apos;5 C2&apos;;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;6 PM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;7 PC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;8 CM&apos;;
end if;
Resize(#legalvals, #idx+1);
#legalvals[++#idx] := &apos;9 CC&apos;;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;10 P2/M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;11 P21/M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;12 C2/M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;13 P2/C&apos;;
end if;
Resize(#legalvals, #idx+2);
#legalvals[++#idx] := &apos;14 P21/C&apos;;
#legalvals[++#idx] := &apos;15 C2/C&apos;;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;16 P222&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;17 P2221&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;18 P21212&apos;;
end if;
Resize(#legalvals, #idx+1);
#legalvals[++#idx] := &apos;19 P212121&apos;;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;20 C2221&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;21 C222&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;22 F222&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;23 I222&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;24 I212121&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;25 PMM2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;26 PMC21&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;27 PCC2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;28 PMA2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;29 PCA21&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;30 PNC2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;31 PMN21&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;32 PBA2&apos;;
end if;
Resize(#legalvals, #idx+1);
#legalvals[++#idx] := &apos;33 PNA21&apos;;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;34 PNN2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;35 CMM2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;36 CMC21&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;37 CCC2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;38 AMM2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;39 ABM2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;40 AMA2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;41 ABA2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;42 FMM2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;43 FDD2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;44 IMM2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;45 IBA2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;46 IMA2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;47 PMMM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;48 PNNN&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;49 PCCM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;50 PBAN&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;51 PMMA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;52 PNNA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;53 PMNA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;54 PCCA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;55 PBAM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;56 PCCN&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;57 PBCM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;58 PNNM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;59 PMMN&apos;;
end if;
Resize(#legalvals, #idx+2);
#legalvals[++#idx] := &apos;60 PBCN&apos;;
#legalvals[++#idx] := &apos;61 PBCA&apos;;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;62 PNMA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;63 CMCM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;64 CMCA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;65 CMMM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;66 CCCM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;67 CMMA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;68 CCCA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;69 FMMM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;70 FDDD&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;71 IMMM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;72 IBAM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;73 IBCA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;74 IMMA&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;75 P4&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;76 P41&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;77 P42&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;78 P43&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;79 I4&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;80 I41&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;81 P-4&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;82 I-4&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;83 P4/M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;84 P42/M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;85 P4/N&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;86 P42/N&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;87 I4/M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;88 I41/A&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;89 P422&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;90 P4212&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;91 P4122&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;92 P41212&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;93 P4222&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;94 P42212&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;95 P4322&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;96 P43212&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;97 I422&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;98 I4122&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;99 P4MM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;100 P4BM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;101 P42CM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;102 P42NM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;103 P4CC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;104 P4NC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;105 P42MC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;106 P42BC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;107 I4MM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;108 I4CM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;109 I41MD&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;110 I41CD&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;111 P-42M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;112 P-42C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;113 P-421M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;114 P-421C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;115 P-4M2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;116 P-4C2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;117 P-4B2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;118 P-4N2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;119 I-4M2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;120 I-4C2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;121 I-42M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;122 I-42D&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;123 P4/MMM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;124 P4/MCC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;125 P4/NBM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;126 P4/NNC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;127 P4/MBM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;128 P4/MNC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;129 P4/NMM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;130 P4/NCC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;131 P42/MMC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;132 P42/MCM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;133 P42/NBC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;134 P42/NNM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;135 P42/MBC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;136 P42/MNM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;137 P42/NMC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;138 P42/NCM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;139 I4/MMM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;140 I4/MCM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;141 I41/AMD&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;142 I41/ACD&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;143 P3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;144 P31&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;145 P32&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;146 R3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;147 P-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;148 R-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;149 P312&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;150 P321&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;151 P3112&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;152 P3121&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;153 P3212&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;154 P3221&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;155 R32&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;156 P3M1&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;157 P31M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;158 P3C1&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;159 P31C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;160 R3M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;161 R3C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;162 P-31M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;163 P-31C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;164 P-3M1&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;165 P-3C1&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;166 R-3M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;167 R-3C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;168 P6&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;169 P61&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;170 P65&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;171 P62&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;172 P64&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;173 P63&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;174 P-6&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;175 P6/M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;176 P63/M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;177 P622&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;178 P6122&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;179 P6522&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;180 P6222&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;181 P6422&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;182 P6322&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;183 P6MM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;184 P6CC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;185 P63CM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;186 P63MC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;187 P-6M2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;188 P-6C2&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;189 P-62M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;190 P-62C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;191 P6/MMM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;192 P6/MCC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;193 P63/MCM&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;194 P63/MMC&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;195 P23&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;196 F23&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;197 I23&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;198 P213&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;199 I213&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;200 PM-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;201 PN-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;202 FM-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;203 FD-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;204 IM-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;205 PA-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;206 IA-3&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;207 P432&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;208 P4232&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;209 F432&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;210 F4132&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;211 I432&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;212 P4332&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;213 P4132&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;214 I4132&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;215 P-43M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;216 F-43M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;217 I-43M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;218 P-43N&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;219 F-43C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;220 I-43D&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;221 PM-3M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;222 PN-3N&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;223 PM-3N&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;224 PN-3M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;225 FM-3M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;226 FM-3C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;227 FD-3M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;228 FD-3C&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;229 IM-3M&apos;;
end if;
if ((Parameter(&apos;List Space Groups&apos;) eq &apos;All&apos;)) then
	Resize(#legalvals, #idx+1);
	#legalvals[++#idx] := &apos;230 IA-3D&apos;;
end if;
SetLegalValues(#legalvals);</sci:legalvalscript>
								<sci:value>1 P1</sci:value>
							</sci:arg>
							<sci:arg name="Space Group Qualifier" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The specific space group settings to be used. If not specified the standard settings for the selected space group will be applied. Valid options depend on the selected &lt;i&gt;Space Group&lt;/i&gt; and include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Origin-1&lt;/li&gt;&lt;li&gt;Origin-2&lt;/li&gt;&lt;li&gt;Origin-1,a-cb&lt;/li&gt;&lt;li&gt;Origin-2,a-cb&lt;/li&gt;&lt;li&gt;Origin-1,-c-ab&lt;/li&gt;&lt;li&gt;Origin-2,-c-ab&lt;/li&gt;&lt;li&gt;Origin-1,bca&lt;/li&gt;&lt;li&gt;Origin-2,bca&lt;/li&gt;&lt;li&gt;Origin-1,cab&lt;/li&gt;&lt;li&gt;Origin-2,cab&lt;/li&gt;&lt;li&gt;Origin-1,-cba&lt;/li&gt;&lt;li&gt;Origin-2,-cba&lt;/li&gt;&lt;li&gt;Origin-1,b-ac&lt;/li&gt;&lt;li&gt;Origin-2,b-ac&lt;/li&gt;&lt;li&gt;Hexagonal&lt;/li&gt;&lt;li&gt;Rhombohedral&lt;/li&gt;&lt;li&gt;A-Unique&lt;/li&gt;&lt;li&gt;B-Unique&lt;/li&gt;&lt;li&gt;C-Unique&lt;/li&gt;&lt;li&gt;A-Unique,Cell 1&lt;/li&gt;&lt;li&gt;A-Unique,Cell 2&lt;/li&gt;&lt;li&gt;A-Unique,Cell 3&lt;/li&gt;&lt;li&gt;-A-Unique,Cell 1&lt;/li&gt;&lt;li&gt;-A-Unique,Cell 2&lt;/li&gt;&lt;li&gt;-A-Unique,Cell 3&lt;/li&gt;&lt;li&gt;B-Unique,Cell 1&lt;/li&gt;&lt;li&gt;B-Unique,Cell 2&lt;/li&gt;&lt;li&gt;B-Unique,Cell 3&lt;/li&gt;&lt;li&gt;-B-Unique,Cell 1&lt;/li&gt;&lt;li&gt;-B-Unique,Cell 2&lt;/li&gt;&lt;li&gt;-B-Unique,Cell 3&lt;/li&gt;&lt;li&gt;C-Unique,Cell 1&lt;/li&gt;&lt;li&gt;C-Unique,Cell 2&lt;/li&gt;&lt;li&gt;C-Unique,Cell 3&lt;/li&gt;&lt;li&gt;-C-Unique,Cell 1&lt;/li&gt;&lt;li&gt;-C-Unique,Cell 2&lt;/li&gt;&lt;li&gt;-C-Unique,Cell 3&lt;/li&gt;&lt;/ul&gt;</sci:help>
							</sci:arg>
							<sci:arg name="List Space Groups" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The list available for the &lt;i&gt;Space Group&lt;/i&gt;, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Common&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;All&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
								<sci:legalval>All</sci:legalval>
								<sci:legalval selected="true">Common</sci:legalval>
							</sci:arg>
							<sci:arg name="Cell Specification" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;The method used to define the cell, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Use Cell Parameters&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Use Cell Vectors&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
								<sci:member>Cell Specification Cell Parameters</sci:member>
								<sci:member>Cell Specification Cell Vectors</sci:member>
								<sci:legalval selected="true">Use Cell Parameters</sci:legalval>
								<sci:legalval>Use Cell Vectors</sci:legalval>
							</sci:arg>
							<sci:arg name="Cell Specification Cell Parameters" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Cell Parameters&lt;/p&gt;</sci:help>
								<sci:member>Length A</sci:member>
								<sci:member>Length B</sci:member>
								<sci:member>Length C</sci:member>
								<sci:member>Angle Alpha</sci:member>
								<sci:member>Angle Beta</sci:member>
								<sci:member>Angle Gamma</sci:member>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Parameters&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Parameters&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Length A" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The length of the cell vector A, in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1.E-9&quot;);parameter() &gt;= 1.E-9;</sci:validscript>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Parameters&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Parameters&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>20.0</sci:value>
							</sci:arg>
							<sci:arg name="Length B" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The length of the cell vector B, in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1.E-9&quot;);parameter() &gt;= 1.E-9;</sci:validscript>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Parameters&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Parameters&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>15.0</sci:value>
							</sci:arg>
							<sci:arg name="Length C" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The length of the cell vector C, in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1.E-9&quot;);parameter() &gt;= 1.E-9;</sci:validscript>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Parameters&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Parameters&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>10.0</sci:value>
							</sci:arg>
							<sci:arg name="Angle Alpha" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The angle between cell vectors B and C, in degrees.&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 180&quot;);parameter() &gt;=  0 and parameter() &lt;= 180;</sci:validscript>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Parameters&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Parameters&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>90</sci:value>
							</sci:arg>
							<sci:arg name="Angle Beta" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The angle between cell vectors A and C, in degrees.&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 180&quot;);parameter() &gt;=  0 and parameter() &lt;= 180;</sci:validscript>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Parameters&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Parameters&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>90</sci:value>
							</sci:arg>
							<sci:arg name="Angle Gamma" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The angle between cell vectors A and B, in degrees.&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 180&quot;);parameter() &gt;=  0 and parameter() &lt;= 180;</sci:validscript>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Parameters&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Parameters&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>90</sci:value>
							</sci:arg>
							<sci:arg name="Cell Specification Cell Vectors" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Cell vectors for the crystal.&lt;/p&gt;</sci:help>
								<sci:member>Vector A</sci:member>
								<sci:member>Vector B</sci:member>
								<sci:member>Vector C</sci:member>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Vector A" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Cartesian cell vector A.&lt;/p&gt;</sci:help>
								<sci:member>Vector A Point X</sci:member>
								<sci:member>Vector A Point Y</sci:member>
								<sci:member>Vector A Point Z</sci:member>
							</sci:arg>
							<sci:arg name="Vector A Point X" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The X coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Vector A Point Y" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The Y coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Vector A Point Z" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The Z coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Vector B" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Cartesian cell vector B.&lt;/p&gt;</sci:help>
								<sci:member>Vector B Point X</sci:member>
								<sci:member>Vector B Point Y</sci:member>
								<sci:member>Vector B Point Z</sci:member>
							</sci:arg>
							<sci:arg name="Vector B Point X" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The X coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Vector B Point Y" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The Y coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Vector B Point Z" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The Z coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Vector C" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Cartesian cell vector C.&lt;/p&gt;</sci:help>
								<sci:member>Vector C Point X</sci:member>
								<sci:member>Vector C Point Y</sci:member>
								<sci:member>Vector C Point Z</sci:member>
							</sci:arg>
							<sci:arg name="Vector C Point X" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The X coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Vector C Point Y" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The Y coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Vector C Point Z" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The Z coordinate in &amp;Aring;.&lt;/p&gt;</sci:help>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Cell Specification&apos; is equal to &apos;Use Cell Vectors&apos;&quot;;

if (not (Parameter(&apos;Cell Specification&apos;) eq &apos;Use Cell Vectors&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Build Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Build Options&lt;/p&gt;</sci:help>
								<sci:member>Use Special Positions</sci:member>
								<sci:member>Special Position Tolerance</sci:member>
								<sci:member>Calculate Bonding</sci:member>
								<sci:member>Crystal Orientation Standard</sci:member>
							</sci:arg>
							<sci:arg name="Use Special Positions" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specify whether atoms close to special positions should have reduced multiplicity.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Special Position Tolerance" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The distance, in &amp;Aring;, of a special position proximity test.&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0.0 and 1.0&quot;);parameter() &gt;=  0.0 and parameter() &lt;= 1.0;</sci:validscript>
								<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Use Special Positions&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Use Special Positions&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
								<sci:value>0.05</sci:value>
							</sci:arg>
							<sci:arg name="Calculate Bonding" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Specify whether to automatically calculate bonding after building the crystal.&lt;/p&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Crystal Orientation Standard" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The orientation standard to be used for the crystal, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;C Along Z, B in YZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;B Along Z, A in YZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A Along Z, C in YZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A Along X, B in XY Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;C Along X, A in XY Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;B Along X, C in XY Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;B Along Y, A in XY Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A Along Y, C in XY Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;C Along Y, B in XY Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;C Along Z, A in XZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;B Along Z, C in XZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A Along Z, B in XZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A Along X, C in XZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;C Along X, B in XZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;B Along X, A in XZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;B Along Y, C in YZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A Along Y, B in YZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;C Along Y, A in YZ Plane&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">C Along Z, B in YZ Plane</sci:legalval>
								<sci:legalval>B Along Z, A in YZ Plane</sci:legalval>
								<sci:legalval>A Along Z, C in YZ Plane</sci:legalval>
								<sci:legalval>A Along X, B in XY Plane</sci:legalval>
								<sci:legalval>C Along X, A in XY Plane</sci:legalval>
								<sci:legalval>B Along X, C in XY Plane</sci:legalval>
								<sci:legalval>B Along Y, A in XY Plane</sci:legalval>
								<sci:legalval>A Along Y, C in XY Plane</sci:legalval>
								<sci:legalval>C Along Y, B in XY Plane</sci:legalval>
								<sci:legalval>C Along Z, A in XZ Plane</sci:legalval>
								<sci:legalval>B Along Z, C in XZ Plane</sci:legalval>
								<sci:legalval>A Along Z, B in XZ Plane</sci:legalval>
								<sci:legalval>A Along X, C in XZ Plane</sci:legalval>
								<sci:legalval>C Along X, B in XZ Plane</sci:legalval>
								<sci:legalval>B Along X, A in XZ Plane</sci:legalval>
								<sci:legalval>B Along Y, C in YZ Plane</sci:legalval>
								<sci:legalval>A Along Y, B in YZ Plane</sci:legalval>
								<sci:legalval>C Along Y, A in YZ Plane</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Constructs a crystal from its symmetry and lattice parameters</sci:value>
								<sci:value>&lt;p&gt;Even though the macroscopic dimensions of a crystalline material may be extremely large compared to interatomic distances, it is usually sufficient to consider the contents of only a single repeat unit (unit cell) of the material for the simulation - its interactions with the virtually infinite number of equivalent cells can then be described with efficient mathematical techniques.&lt;/p&gt;&lt;p&gt;A crystal is defined by the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The lattice, which defines the periodicity of the crystal.&lt;/li&gt;&lt;li&gt;A set of original objects, for example atoms and bonds. This set of objects must contain the atoms for at least one asymmetric unit but it may contain as many atoms as you wish.&lt;/li&gt;&lt;li&gt;A set of symmetry operations, which together with the lattice vectors specify how any object in the infinite crystal is related to the original objects. If any of the original objects are related to each other by symmetry or periodicity, duplicates are removed.&lt;/li&gt;&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Material data</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Material data</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Unprocessed data records</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.0.0.14</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/materials</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Nov 01 11:43:05 2012</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Build Crystal</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{62A95122-8936-4bdf-9725-CEB21A1E6412}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1890 -635</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>9</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Materials\Manipulators\Builders\Build Crystal</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Clean Structure" version="2">
							<sci:arg name="Number of Iterations" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The number of geometry optimization steps to be performed.</sci:help>
								<sci:validscript>#ok := true;
if parameter() &lt; 1 then
	setinvaliddetails(parametername().&apos; must be greater than or equal to 1&apos;);
	#ok := false;
end if;
#ok;</sci:validscript>
								<sci:value>30</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>localhost</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval>Halt</sci:legalval>
								<sci:legalval selected="true">Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval>Halt</sci:legalval>
								<sci:legalval selected="true">Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Clean Structure</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{39C3F97F-8478-46FA-B8C1-BC2A74928929}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2190 -635</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Performs a simple geometry optimization</sci:value>
								<sci:value>&lt;p&gt;Attempts to produce a chemically reasonable structure for non-periodic structures by performing an initial optimization of the  geometry using a simple forcefield.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Material data</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Material data</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Unprocessed data records</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>8.4.5.30</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/materials</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed May 04 16:33:39 2011</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{EB1D0086-D925-418F-A498-9710B60F8B54}</sci:value>
								<sci:value>3</sci:value>
								<sci:value>0</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Materials\Manipulators\Clean Structure</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Perl MaterialsScript (on Server)" version="2">
									<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;MaterialsScript (Perl) to execute. A &lt;i&gt;templated&lt;/i&gt; script is provided, which must be replaced.&lt;/p&gt;
&lt;p&gt;The script must implement the following three subroutines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition for MaterialsScript Perl an additional method GetMaterialsDocument($data) is provided. This can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt; </sci:help>
										<sci:value>use ComponentModules::Manipulators::CleanStructure;
</sci:value>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>For internal use only.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Component Comment</sci:help>
										<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
									</sci:arg>
									<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Component Usage</sci:help>
										<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Clean Structure</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol ShowComment</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Add Protocol Comment Here</sci:help>
										<sci:value>Add Protocol Comment Here</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Executes MaterialsScript for each record</sci:value>
										<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Unprocessed data records</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>8.4.5.24</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/materials</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.DataToJsonWriter.1">
						<sci:component name="JSON Writer" version="2">
							<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>
The name or path name for the destination data. The destination can be a file, a network resource, a data record property, or a global property.
&lt;ul&gt;
&lt;li&gt;Use a network URL for a network resource.&lt;/li&gt;
&lt;li&gt;Use a file path name for a file.&lt;/li&gt;
&lt;li&gt;Use &quot;global://property-name&quot; for a global property.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, specify an extension. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
	</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>If Destination Exists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:value>userdata:/total_new_species_152021_s$(idx)_smiles_fails.json</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write (all if value is empty).</sci:help>
							</sci:arg>
							<sci:arg name="If Destination Exists" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>What to do if the destination already exists</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/p&gt;</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval>ANSI</sci:legalval>
								<sci:legalval selected="true">UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The byte order mark (BOM) is an optional Unicode character written to the start of a file or data stream that can be used to indicate the character encoding of the following data. Spefically it can be used to indicate the various UTF-8 and UTF-16 encodings.
&lt;/p&gt;
&lt;p&gt;
BOMs are more widely used in a Windows setting. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;/p&gt;
&lt;p&gt;
Setting options are:
&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Always&lt;/dt&gt;
&lt;dd&gt;For non-ANSI encodings, the BOM is always written at the start of the output stream.&lt;/dd&gt;
&lt;dt&gt;Never&lt;/dt&gt;
&lt;dd&gt;No BOM is written at the start of the output stream.&lt;/dd&gt;
&lt;dt&gt;Native&lt;/dt&gt;
&lt;dd&gt;This is equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.&lt;/dd&gt;
&lt;/dl&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a non-ANSI value&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Output All Nodes" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;
If true, this component will recurse down the node tree, creating the corresponding objects in the JSON output based on the node names.
&lt;/p&gt;

</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Children Are Always Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;If set to True then child nodes with the same name are always serialized as an array of objects even if there is only one child node with that name.&lt;/p&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>What to do if the destination file already exists</sci:help>
								<sci:value>$(If Destination Exists)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Lossless Format" type="BoolType" required="true" visibility="nevershow" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;If set to true, then types which do not have an obvious or unambiguous mapping to JSON primitives (e.g. a ByteArray or Integer Fingerprint), will be represented as JSON objects with a special &quot;__ctag__&quot; name indicating the type.&lt;/p&gt;
&lt;p&gt;If set to false, then JSON output will be simpler, but types more complex than the basic numeric, boolean, string and null types may not be represented with sufficient information to allow reserialisation back into their original format. This option is provided for backwards compatibility.&lt;/p&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Complete" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>When &quot;For Each Data&quot; is selected, data is written for each data record. Otherwise, data is written to a new data record after all input data records have been processed.
</sci:help>
								<sci:enabledscript>false;</sci:enabledscript>
								<sci:legalval selected="true">Using All Data</sci:legalval>
								<sci:legalval>For Each Data</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Aug 19 11:20:24 2013</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{61B96C66-E9EB-41F7-814A-14F3F1827AB2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Json SMILES Fails</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DocumentNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -815</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes input data records as JSON encoded string  (formerly called &quot;JSON Writer (Generic)&quot;)</sci:value>
								<sci:value>&lt;p&gt;
Converts incoming data record properties into an array of objects in JSON (JavaScript Object Notation) format and writes the results to the file, network resource, or global property specified in the &lt;i&gt;Destination&lt;/i&gt; parameter. The format tries to create a JSON object that best reflects the hierarchical data structure, but may be lossy for unusual data types, metadata, etc.
&lt;/p&gt;
&lt;p&gt;
The output is an array of objects. One object is generated for each incoming data record, with fields corresponding to each property. When the parameter &lt;i&gt;Output All Nodes&lt;/i&gt; is True (default), this component will recurse down the node tree, creating the corresponding JSON objects based on the node names. Arrays and n-dimensional arrays are supported, and Pipeline Pilot data types are mapped to JavaScript primitive types where appropriate.
&lt;/p&gt;
With the default parameterization, the output will be of the form:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;
[{&quot;name1&quot;:&quot;value1&quot;},{&quot;name2&quot;:&quot;value2&quot;}]
&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;
To learn more about JSON, visit the &lt;a href=&quot;javascript:DoLink(&apos;http://www.json.org&apos;)&quot;&gt;JSON.org&lt;/a&gt; web site.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon</sci:help>
								<sci:value>Plug In</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>11</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\JSON Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DataToJsonWriter.1">
						<sci:component name="JSON Writer" version="2">
							<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>
The name or path name for the destination data. The destination can be a file, a network resource, a data record property, or a global property.
&lt;ul&gt;
&lt;li&gt;Use a network URL for a network resource.&lt;/li&gt;
&lt;li&gt;Use a file path name for a file.&lt;/li&gt;
&lt;li&gt;Use &quot;global://property-name&quot; for a global property.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, specify an extension. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
	</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>If Destination Exists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:value>userdata:/run_8_3_22/original_data_smile_strings_$(idx)_clean_fails.json</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write (all if value is empty).</sci:help>
							</sci:arg>
							<sci:arg name="If Destination Exists" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>What to do if the destination already exists</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/p&gt;</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval>ANSI</sci:legalval>
								<sci:legalval selected="true">UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The byte order mark (BOM) is an optional Unicode character written to the start of a file or data stream that can be used to indicate the character encoding of the following data. Spefically it can be used to indicate the various UTF-8 and UTF-16 encodings.
&lt;/p&gt;
&lt;p&gt;
BOMs are more widely used in a Windows setting. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;/p&gt;
&lt;p&gt;
Setting options are:
&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Always&lt;/dt&gt;
&lt;dd&gt;For non-ANSI encodings, the BOM is always written at the start of the output stream.&lt;/dd&gt;
&lt;dt&gt;Never&lt;/dt&gt;
&lt;dd&gt;No BOM is written at the start of the output stream.&lt;/dd&gt;
&lt;dt&gt;Native&lt;/dt&gt;
&lt;dd&gt;This is equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.&lt;/dd&gt;
&lt;/dl&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a non-ANSI value&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Output All Nodes" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;
If true, this component will recurse down the node tree, creating the corresponding objects in the JSON output based on the node names.
&lt;/p&gt;

</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Children Are Always Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;If set to True then child nodes with the same name are always serialized as an array of objects even if there is only one child node with that name.&lt;/p&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>What to do if the destination file already exists</sci:help>
								<sci:value>$(If Destination Exists)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Lossless Format" type="BoolType" required="true" visibility="nevershow" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;If set to true, then types which do not have an obvious or unambiguous mapping to JSON primitives (e.g. a ByteArray or Integer Fingerprint), will be represented as JSON objects with a special &quot;__ctag__&quot; name indicating the type.&lt;/p&gt;
&lt;p&gt;If set to false, then JSON output will be simpler, but types more complex than the basic numeric, boolean, string and null types may not be represented with sufficient information to allow reserialisation back into their original format. This option is provided for backwards compatibility.&lt;/p&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Complete" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>When &quot;For Each Data&quot; is selected, data is written for each data record. Otherwise, data is written to a new data record after all input data records have been processed.
</sci:help>
								<sci:enabledscript>false;</sci:enabledscript>
								<sci:legalval selected="true">Using All Data</sci:legalval>
								<sci:legalval>For Each Data</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Aug 19 11:20:24 2013</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{61B96C66-E9EB-41F7-814A-14F3F1827AB2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Json Clean Fails</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DocumentNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2490 -815</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes input data records as JSON encoded string  (formerly called &quot;JSON Writer (Generic)&quot;)</sci:value>
								<sci:value>&lt;p&gt;
Converts incoming data record properties into an array of objects in JSON (JavaScript Object Notation) format and writes the results to the file, network resource, or global property specified in the &lt;i&gt;Destination&lt;/i&gt; parameter. The format tries to create a JSON object that best reflects the hierarchical data structure, but may be lossy for unusual data types, metadata, etc.
&lt;/p&gt;
&lt;p&gt;
The output is an array of objects. One object is generated for each incoming data record, with fields corresponding to each property. When the parameter &lt;i&gt;Output All Nodes&lt;/i&gt; is True (default), this component will recurse down the node tree, creating the corresponding JSON objects based on the node names. Arrays and n-dimensional arrays are supported, and Pipeline Pilot data types are mapped to JavaScript primitive types where appropriate.
&lt;/p&gt;
With the default parameterization, the output will be of the form:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;
[{&quot;name1&quot;:&quot;value1&quot;},{&quot;name2&quot;:&quot;value2&quot;}]
&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;
To learn more about JSON, visit the &lt;a href=&quot;javascript:DoLink(&apos;http://www.json.org&apos;)&quot;&gt;JSON.org&lt;/a&gt; web site.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon</sci:help>
								<sci:value>Plug In</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>12</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\JSON Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Subprotocol" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.
&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
Note: In an expression inside the subprotocol you can identify the category property name as:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;parentproperty(&apos;RunToCompletion Categorize Using&apos;)&lt;/code&gt;
&lt;p&gt;
And so to access the value of this property on the current data record, use:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;property(parentproperty(&apos;RunToCompletion Categorize Using&apos;))&lt;/code&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
								<sci:value>Account=</sci:value>
								<sci:value>Maximum Execution Time=</sci:value>
								<sci:value>Parallel Environment=</sci:value>
								<sci:value>Number of Cores=</sci:value>
								<sci:value>Other=</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>VAMP and Output</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>SUBPROTOCOLNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2490 -1175</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>20.1.0.2181</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>75</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>13</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="HTML Material Table Viewer (Jmol)" version="2">
									<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Title</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
										<sci:value>Molecular Properties</sci:value>
									</sci:arg>
									<sci:arg name="Applet Size" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Applet Size Parameters&lt;/p&gt;</sci:help>
										<sci:member>Applet Size Width</sci:member>
										<sci:member>Applet Size Height</sci:member>
									</sci:arg>
									<sci:arg name="Applet Size Width" type="LongType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;The width in pixels of the applet.&lt;/p&gt;</sci:help>
										<sci:value>200</sci:value>
									</sci:arg>
									<sci:arg name="Applet Size Height" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The height in pixels of the applet.&lt;/p&gt;</sci:help>
										<sci:value>150</sci:value>
									</sci:arg>
									<sci:arg name="Caption Source" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;Select the source of the caption to be displayed underneath the Jmol applet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Fixed List&lt;/b&gt;: The caption will be generated from the elements selected from the fixed list contained in &lt;i&gt;Caption&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Property&lt;/b&gt;: The caption will be the value contained in the property with the name specified in &lt;i&gt;Caption Property&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:member>Caption</sci:member>
										<sci:member>Caption Property</sci:member>
										<sci:legalval selected="true">Fixed List</sci:legalval>
										<sci:legalval>Property</sci:legalval>
									</sci:arg>
									<sci:arg name="Caption" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>&lt;p&gt;Select which elements, if any, you wish to be displayed in a caption underneath the Jmol applet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Name&lt;/b&gt;: The name of the Materials Studio document containing the structure.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Chemical Formula&lt;/b&gt;: The chemical formula of the structure. If the structure is 3D periodic then the chemical formula of one unit cell will be displayed.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Lattice Type&lt;/b&gt;: The type of the lattice. This will be displayed for 3D periodic structures only.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Number of Atoms&lt;/b&gt;: The number of atoms in the structure. If the structure is 3D periodic then the number of atoms in one unit cell will be displayed.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:validscript>#ok := true;
if parameter(&quot;Caption Source&quot;) eq &quot;Fixed List&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Caption Source is Fixed List&quot;);
	end if;
end if;
#ok;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;Set Caption Source to Fixed List&quot;);
parameter(&quot;Caption Source&quot;) eq &quot;Fixed List&quot;;</sci:enabledscript>
										<sci:legalval selected="true">Name</sci:legalval>
										<sci:legalval>Chemical Formula</sci:legalval>
										<sci:legalval>Lattice Type</sci:legalval>
										<sci:legalval>Number of Atoms</sci:legalval>
									</sci:arg>
									<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The name of the property that will contain the caption which is to be displayed underneath the Jmol applet. This is only required when &lt;i&gt;Caption Source&lt;/i&gt; is set to &lt;b&gt;Property&lt;/b&gt;.&lt;/p&gt;</sci:help>
										<sci:validscript>#ok := true;
if parameter(&quot;Caption Source&quot;) eq &quot;Property&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Caption Source is Property&quot;);
	end if;
end if;
#ok;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;Set Caption Source to Property&quot;);
parameter(&quot;Caption Source&quot;) eq &quot;Property&quot;;</sci:enabledscript>
										<sci:value>MyCaption</sci:value>
									</sci:arg>
									<sci:arg name="Rows Per Page" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The number of rows displayed on each page.</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>localhost</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
										<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
										<sci:member>Reporting Stylesheet</sci:member>
									</sci:arg>
									<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
										<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
										<sci:value>{42691EC8-0CE0-4DB9-8B3C-5379CBB967A7}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Jmol Implementation" type="StringType" required="true" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Jmol Implementation</sci:value>
												<sci:value>Jmol Implementation</sci:value>
												<sci:value>Jmol Implementation</sci:value>
												<sci:value>Jmol Implementation</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>Defines whether the component will use Java (Jmol) or HTML5 with JavaScript (JSmol).
Java provides better performance, but users may encounter security issues, and Java may not be available on all devices.
HTML5 is much slower, but is well supported in recent browsers.
If more than one Jmol component is used in a report, all those components must use the same Jmol implementation.
&lt;p&gt;Optionally, security restrictions may be overridden to permit Java compatibility in some browsers. Browser options are accessed via the &lt;i&gt;Advanced Options&lt;/i&gt; parameters in the HTML Viewer components, together with preferences available in the target browser program.&lt;/p&gt;
&lt;p&gt;More details can be found in Chapter 2 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Include Helper Javascript to &quot;True&quot;&apos;);
	Parameter(&apos;Include Helper Javascript&apos;) eq &apos;True&apos;;</sci:enabledscript>
										<sci:legalval selected="true">HTML5</sci:legalval>
										<sci:legalval>Java</sci:legalval>
									</sci:arg>
									<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Advanced Options</sci:value>
												<sci:value>Advanced Options</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:member>Include Format and Position CSS</sci:member>
										<sci:member>Use Default Browser</sci:member>
										<sci:member>Set IE Compatibility</sci:member>
									</sci:arg>
									<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Include Format and Position CSS</sci:value>
												<sci:value>Include Format and Position CSS</sci:value>
												<sci:value>Include Format and Position CSS</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Set IE Compatibility</sci:value>
												<sci:value>Set IE Compatibility</sci:value>
												<sci:value>Set IE Compatibility</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Browser</sci:value>
												<sci:value>Use Default Browser</sci:value>
												<sci:value>Use Default Browser</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>HTML Material Table Viewer (Jmol)</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ViewerNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{7BA85728-C2C7-4068-A3E3-3AED3ADC1BAE}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -95</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Generates and displays an HTML table page of materials data and properties</sci:value>
										<sci:value>&lt;p&gt;Each row of the table corresponds to one materials record, with columns for the structure and each property. Each structure is displayed using an embedded Jmol applet.&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://jmol.sourceforge.net/&apos;)&quot;&gt;Jmol home page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>20.1.0.2094</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/materials</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Aug 14 17:53:26 2019</sci:value>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Processing Order</sci:help>
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>7</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Materials\Viewers\HTML Material Table Viewer (Jmol)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Perl Material Filter" version="2">
											<sci:arg name="Parameter1" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The value for the property used by the filter.&lt;/p&gt; </sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;MaterialsScript (Perl) to execute. A &lt;i&gt;templated&lt;/i&gt; script is provided, which must be replaced.&lt;/p&gt;
&lt;p&gt;The script must implement the following three subroutines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition for MaterialsScript Perl an additional method GetMaterialsDocument($data) is provided. This can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt; 
</sci:help>
												<sci:value>use ComponentModules::Utilities::MaterialFilter;
</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Component Comment</sci:help>
												<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
											</sci:arg>
											<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Component Usage</sci:help>
												<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Is Material?</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol ShowComment</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Add Protocol Comment Here</sci:help>
												<sci:value>Add Protocol Comment Here</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{85E816AD-6B7B-4627-852B-D2D4E1AEF9D5}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Provides a template for Perl Materials Toolkit filters</sci:value>
												<sci:value>&lt;p&gt;Use this template as a starting point to create custom Perl components to filter structures based on desired conditions using MaterialsScript.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Script&lt;/i&gt; contains boiler plate code with the three required interface methods, &lt;code&gt;onInitialize()&lt;/code&gt;, &lt;code&gt;onProcess()&lt;/code&gt; and &lt;code&gt;onFinalize()&lt;/code&gt;. Add the necessary code to calculate the custom properties.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt; 

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>8.4.5.30</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed May 04 17:18:37 2011</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Materials Toolkit\Perl Templates\Perl Material Filter</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>If Property(&quot;ErrorText&quot;) Is Defined Then
	__MS_ErrorTextCache := ErrorText;
end if</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Cache Error Message</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Prepare Jmol Input" version="2">
											<sci:arg name="Text Source" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:member>Text Property</sci:member>
												<sci:member>Text</sci:member>
												<sci:legalval selected="true">Fixed List</sci:legalval>
												<sci:legalval>Property</sci:legalval>
											</sci:arg>
											<sci:arg name="Text" type="StringType" required="true" visibility="visible" multi="false">
												<sci:validscript>#ok := true;
if parameter(&quot;Text Source&quot;) eq &quot;Fixed List&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Text Source is Fixed List&quot;);
	end if;
end if;
#ok;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;Set Text Source to Fixed List&quot;);
parameter(&quot;Text Source&quot;) eq &quot;Fixed List&quot;;</sci:enabledscript>
												<sci:legalval selected="true">Name</sci:legalval>
												<sci:legalval>Chemical Formula</sci:legalval>
											</sci:arg>
											<sci:arg name="Text Property" type="StringType" required="false" visibility="visible" multi="false">
												<sci:validscript>#ok := true;
if parameter(&quot;Text Source&quot;) eq &quot;Property&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Text Source is Property&quot;);
	end if;
end if;
#ok;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;Set Text Source to Property&quot;);
parameter(&quot;Text Source&quot;) eq &quot;Property&quot;;</sci:enabledscript>
												<sci:value>MyText</sci:value>
											</sci:arg>
											<sci:arg name="Caption Source" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:member>Caption</sci:member>
												<sci:member>Caption Property</sci:member>
												<sci:value>$(Caption Source)</sci:value>
											</sci:arg>
											<sci:arg name="Caption" type="StringType" required="false" visibility="visible" multi="true">
												<sci:validscript>#ok := true;
if parameter(&quot;Caption Source&quot;) eq &quot;Fixed List&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Caption Source is Fixed List&quot;);
	end if;
end if;
#ok;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;Set Caption Source to Fixed List&quot;);
parameter(&quot;Caption Source&quot;) eq &quot;Fixed List&quot;;</sci:enabledscript>
												<sci:value>$(Caption)</sci:value>
											</sci:arg>
											<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false">
												<sci:validscript>#ok := true;
if parameter(&quot;Caption Source&quot;) eq &quot;Property&quot; then
	if stringlen(parameter()) == 0 then
		#ok := false;
		SetInvalidDetails(&quot;This parameter is required when Caption Source is Property&quot;);
	end if;
end if;
#ok;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;Set Caption Source to Property&quot;);
parameter(&quot;Caption Source&quot;) eq &quot;Property&quot;;</sci:enabledscript>
												<sci:value>$(Caption Property)</sci:value>
											</sci:arg>
											<sci:arg name="Jmol Startup Script" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Additional Jmol script that will be executed after the structure has been loaded into Jmol. Documentation for Jmol scripting commands can be found by following the relevant links on the &lt;a href=&quot;javascript:DoLink(&apos;http://jmol.sourceforge.net/&apos;)&quot;&gt;Jmol home page&lt;/a&gt;.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Output Structure Location Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:value>__StructureFileRelativePath</sci:value>
											</sci:arg>
											<sci:arg name="Output Caption Property" type="StringType" required="false" visibility="visible" multi="false">
												<sci:value>__Caption</sci:value>
											</sci:arg>
											<sci:arg name="Output Text Property" type="StringType" required="false" visibility="visible" multi="false">
												<sci:value>__Text</sci:value>
											</sci:arg>
											<sci:arg name="Output Jmol Script Property" type="StringType" required="false" visibility="visible" multi="false">
												<sci:value>__JmolScriptProperty</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
												<sci:value>PrepareJmolInputGUID</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Run subprotocol on grid engine if available.</sci:help>
												<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
												<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>REPORTSUBPROTOCOLNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{738544C0-AF74-4A25-9601-DF0EED121B94}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -95</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
												<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>8.4.5.30</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Apr 21 15:01:44 2010</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Prepare Jmol Input from Materials Node</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Utilities\Internals\Jmol Internals\Prepare Jmol Input</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>If Property(&quot;__MS_ErrorTextCache&quot;) Is Defined Then
	ErrorText := __MS_ErrorTextCache;
	Remove(&quot;__MS_ErrorTextCache&quot;);
end if</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Restore Error Message</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>990 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1290 -275</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
												<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.1</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="HTML Table Jmol Viewer" version="2">
											<sci:arg name="Structure Location Property" type="StringType" required="true" visibility="visible" multi="false">
												<sci:value>__StructureFileRelativePath</sci:value>
											</sci:arg>
											<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false">
												<sci:value>__Caption</sci:value>
											</sci:arg>
											<sci:arg name="Jmol Script Property" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Additional Jmol script that will be executed after the structure has been loaded into Jmol. Documentation for Jmol scripting commands can be found by following the relevant links on the &lt;a href=&quot;javascript:DoLink(&apos;http://jmol.sourceforge.net/&apos;)&quot;&gt;Jmol home page&lt;/a&gt;.&lt;/p&gt;</sci:help>
												<sci:value>__JmolScriptProperty</sci:value>
											</sci:arg>
											<sci:arg name="Error Property" type="StringType" required="true" visibility="visible" multi="false">
												<sci:value>ErrorText</sci:value>
											</sci:arg>
											<sci:arg name="Title" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
														<sci:value>Title</sci:value>
													</sci:mpropval>
													<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
													<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
												</sci:metaproplist>
												<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
												<sci:value>Title</sci:value>
											</sci:arg>
											<sci:arg name="Applet Size" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Applet Size Parameters&lt;/p&gt;</sci:help>
												<sci:member>Applet Size Width</sci:member>
												<sci:member>Applet Size Height</sci:member>
											</sci:arg>
											<sci:arg name="Applet Size Width" type="LongType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
												<sci:value>$(Applet Size Width)</sci:value>
											</sci:arg>
											<sci:arg name="Applet Size Height" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
												<sci:value>$(Applet Size Height)</sci:value>
											</sci:arg>
											<sci:arg name="Rows Per Page" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of rows displayed on each page.</sci:help>
												<sci:value>$(Rows Per Page)</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Run subprotocol on grid engine if available.</sci:help>
												<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
												<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
												<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
												<sci:member>Reporting Stylesheet</sci:member>
											</sci:arg>
											<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
												<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
												<sci:value>{42691EC8-0CE0-4DB9-8B3C-5379CBB967A7}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="Jmol Implementation" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
													<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
														<sci:value>Jmol Implementation</sci:value>
														<sci:value>Jmol Implementation</sci:value>
														<sci:value>Jmol Implementation</sci:value>
													</sci:mpropval>
													<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
												</sci:metaproplist>
												<sci:help>Defines whether the component will use Java (Jmol) or HTML5 with JavaScript (JSmol).
Java provides better performance, but users may encounter security issues, and Java may not be available on all devices.
HTML5 is much slower, but is well supported in recent browsers.
If more than one Jmol component is used in a report, all those components must use the same Jmol implementation.
&lt;p&gt;Optionally, security restrictions may be overridden to permit Java compatibility in some browsers. Browser options are accessed via the &lt;i&gt;Advanced Options&lt;/i&gt; parameters in the HTML Viewer components, together with preferences available in the target browser program.&lt;/p&gt;
&lt;p&gt;More details can be found in Chapter 2 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;</sci:help>
												<sci:value>Jmol Implementation</sci:value>
											</sci:arg>
											<sci:arg name="Include Helper Javascript" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
												<sci:metaproplist>
													<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
														<sci:value>Include Helper Javascript</sci:value>
														<sci:value>Include Helper Javascript</sci:value>
													</sci:mpropval>
													<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
												</sci:metaproplist>
												<sci:help>Specifies whether JavaScript supporting this component will be made available to downstream HTML Viewer components.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Jmol Implementation to &quot;Java&quot;&apos;);
	Parameter(&apos;Jmol Implementation&apos;) eq &apos;Java&apos;;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Advanced Options" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:metaproplist>
													<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
														<sci:value>Advanced Options</sci:value>
													</sci:mpropval>
													<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
													<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">GroupType</sci:propval>
												</sci:metaproplist>
												<sci:member>Include Format and Position CSS</sci:member>
												<sci:member>Use Default Browser</sci:member>
												<sci:member>Set IE Compatibility</sci:member>
												<sci:value>Advanced Options</sci:value>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Include Format and Position CSS" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" expanded="true">
												<sci:metaproplist>
													<sci:mpropval name="SCI_PromotedFrom" type="StringType">
														<sci:value>Include Format and Position CSS</sci:value>
														<sci:value>Include Format and Position CSS</sci:value>
													</sci:mpropval>
													<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
												</sci:metaproplist>
												<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
												<sci:value>Include Format and Position CSS</sci:value>
											</sci:arg>
											<sci:arg name="Set IE Compatibility" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false" uimpl="false">
												<sci:metaproplist>
													<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
														<sci:value>Set IE Compatibility</sci:value>
														<sci:value>Set IE Compatibility</sci:value>
													</sci:mpropval>
													<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
												</sci:metaproplist>
												<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
												<sci:value>Set IE Compatibility</sci:value>
											</sci:arg>
											<sci:arg name="Use Default Browser" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
												<sci:metaproplist>
													<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
													<sci:mpropval name="SCI_PromotedFrom" type="StringType">
														<sci:value>Browser</sci:value>
														<sci:value>Use Default Browser</sci:value>
													</sci:mpropval>
												</sci:metaproplist>
												<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
												<sci:value>Use Default Browser</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>HTML Table Jmol Viewer</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>REPORTVIEWERNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{30B033E7-8D64-4462-82E3-5FC999B26C20}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1590 -275</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Generates and displays an HTML table page with Jmol applet embedded for each record</sci:value>
												<sci:value>&lt;br/&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>20.1.0.2094</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Aug 13 18:47:35 2019</sci:value>
											</sci:arg>
											<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Processing Order</sci:help>
												<sci:value>DrainTopDown</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Utilities\Internals\Jmol Reporting\HTML Table Jmol Viewer</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:connectid from="6" to="3" type="true"/>
									<sci:connectid from="6" to="5" type="false"/>
									<sci:connectid from="3" to="0" type="true"/>
									<sci:connectid from="0" to="2" type="true"/>
									<sci:connectid from="0" to="2" type="false"/>
									<sci:connectid from="2" to="5" type="true"/>
									<sci:connectid from="5" to="1" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.DataToJsonWriter.1">
								<sci:component name="JSON Writer" version="2">
									<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>
The name or path name for the destination data. The destination can be a file, a network resource, a data record property, or a global property.
&lt;ul&gt;
&lt;li&gt;Use a network URL for a network resource.&lt;/li&gt;
&lt;li&gt;Use a file path name for a file.&lt;/li&gt;
&lt;li&gt;Use &quot;global://property-name&quot; for a global property.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, specify an extension. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
	</sci:help>
										<sci:member>Maximum</sci:member>
										<sci:member>If Destination Exists</sci:member>
										<sci:member>CharacterEncoding</sci:member>
										<sci:value>userdata:/run_8_3_22/original_data_smile_strings_$(idx)_finish.json</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data records to write (all if value is empty).</sci:help>
									</sci:arg>
									<sci:arg name="If Destination Exists" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>What to do if the destination already exists</sci:help>
										<sci:legalval selected="true">Overwrite</sci:legalval>
										<sci:legalval>Append</sci:legalval>
										<sci:legalval>Halt</sci:legalval>
									</sci:arg>
									<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/p&gt;</sci:help>
										<sci:member>UseByteOrderMark</sci:member>
										<sci:legalval>ANSI</sci:legalval>
										<sci:legalval selected="true">UTF-8</sci:legalval>
										<sci:legalval>Unicode</sci:legalval>
										<sci:legalval>Unicode big endian</sci:legalval>
									</sci:arg>
									<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The byte order mark (BOM) is an optional Unicode character written to the start of a file or data stream that can be used to indicate the character encoding of the following data. Spefically it can be used to indicate the various UTF-8 and UTF-16 encodings.
&lt;/p&gt;
&lt;p&gt;
BOMs are more widely used in a Windows setting. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;/p&gt;
&lt;p&gt;
Setting options are:
&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Always&lt;/dt&gt;
&lt;dd&gt;For non-ANSI encodings, the BOM is always written at the start of the output stream.&lt;/dd&gt;
&lt;dt&gt;Never&lt;/dt&gt;
&lt;dd&gt;No BOM is written at the start of the output stream.&lt;/dd&gt;
&lt;dt&gt;Native&lt;/dt&gt;
&lt;dd&gt;This is equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.&lt;/dd&gt;
&lt;/dl&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a non-ANSI value&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
										<sci:legalval selected="true">Always</sci:legalval>
										<sci:legalval>Never</sci:legalval>
										<sci:legalval>Native</sci:legalval>
									</sci:arg>
									<sci:arg name="Output All Nodes" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;
If true, this component will recurse down the node tree, creating the corresponding objects in the JSON output based on the node names.
&lt;/p&gt;

</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Children Are Always Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>&lt;p&gt;If set to True then child nodes with the same name are always serialized as an array of objects even if there is only one child node with that name.&lt;/p&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="IfFileExists" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>What to do if the destination file already exists</sci:help>
										<sci:value>$(If Destination Exists)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Lossless Format" type="BoolType" required="true" visibility="nevershow" multi="false" legalvalsenforced="false">
										<sci:help>&lt;p&gt;If set to true, then types which do not have an obvious or unambiguous mapping to JSON primitives (e.g. a ByteArray or Integer Fingerprint), will be represented as JSON objects with a special &quot;__ctag__&quot; name indicating the type.&lt;/p&gt;
&lt;p&gt;If set to false, then JSON output will be simpler, but types more complex than the basic numeric, boolean, string and null types may not be represented with sufficient information to allow reserialisation back into their original format. This option is provided for backwards compatibility.&lt;/p&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Complete" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>When &quot;For Each Data&quot; is selected, data is written for each data record. Otherwise, data is written to a new data record after all input data records have been processed.
</sci:help>
										<sci:enabledscript>false;</sci:enabledscript>
										<sci:legalval selected="true">Using All Data</sci:legalval>
										<sci:legalval>For Each Data</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Aug 19 11:20:24 2013</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{61B96C66-E9EB-41F7-814A-14F3F1827AB2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>VAMP Output Json Finish</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -455</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Writes input data records as JSON encoded string  (formerly called &quot;JSON Writer (Generic)&quot;)</sci:value>
										<sci:value>&lt;p&gt;
Converts incoming data record properties into an array of objects in JSON (JavaScript Object Notation) format and writes the results to the file, network resource, or global property specified in the &lt;i&gt;Destination&lt;/i&gt; parameter. The format tries to create a JSON object that best reflects the hierarchical data structure, but may be lossy for unusual data types, metadata, etc.
&lt;/p&gt;
&lt;p&gt;
The output is an array of objects. One object is generated for each incoming data record, with fields corresponding to each property. When the parameter &lt;i&gt;Output All Nodes&lt;/i&gt; is True (default), this component will recurse down the node tree, creating the corresponding JSON objects based on the node names. Arrays and n-dimensional arrays are supported, and Pipeline Pilot data types are mapped to JavaScript primitive types where appropriate.
&lt;/p&gt;
With the default parameterization, the output will be of the form:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;
[{&quot;name1&quot;:&quot;value1&quot;},{&quot;name2&quot;:&quot;value2&quot;}]
&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;
To learn more about JSON, visit the &lt;a href=&quot;javascript:DoLink(&apos;http://www.json.org&apos;)&quot;&gt;JSON.org&lt;/a&gt; web site.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon</sci:help>
										<sci:value>Plug In</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.2.0.0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>8</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Writers\JSON Writer</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Semiempirical Properties (VAMP)" version="2">
									<sci:arg name="Task" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The type of calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Energy&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Geometry Optimization&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalval>Energy</sci:legalval>
										<sci:legalval selected="true">Geometry Optimization</sci:legalval>
									</sci:arg>
									<sci:arg name="Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;There are two types of Hamiltonian available; neglect of diatomic differential overlap (NDDO) and Zerner&apos;s intermediate neglect of differential overlap (ZINDO). However, only NDDO Hamiltonians can be used for geometry optimization.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important. (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds. (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3. (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CNDO/1&lt;/strong&gt; - complete neglect of differential overlap is the least rigorous semiempirical approximation, all integrals involving different atomic orbitals are ignored. (ZINDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CNDO/2&lt;/strong&gt; - identical to CNDO/1 but parameterized for fewer elements (ZINDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;INDO/1&lt;/strong&gt; - intermediate neglect of differential overlap removes the CNDO constraint that two-electron integrals on the same center must be equal. Therefore, for atoms with s and p orbitals, five unique two-electron one-center integrals exist. (ZINDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;INDO/2&lt;/strong&gt; - identical to INDO/1 but parameterized for fewer elements (ZINDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries. (NDDO)&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalvalscript>#includeZINDO := (Parameter(&apos;Task&apos;) eq &apos;Energy&apos;);	
resize(#legalvals, (#includeZINDO ? 11 : 7));
#idx := 0;
#legalvals[++#idx] := &apos;MNDO/C&apos;;
#legalvals[++#idx] := &apos;MNDO&apos;;
#legalvals[++#idx] := &apos;AM1&apos;;
#legalvals[++#idx] := &apos;PM3&apos;;
#legalvals[++#idx] := &apos;AM1*&apos;;
#legalvals[++#idx] := &apos;MNDO/d&apos;;
if #includeZINDO then
	#legalvals[++#idx] := &apos;CNDO/1&apos;;
	#legalvals[++#idx] := &apos;CNDO/2&apos;;
	#legalvals[++#idx] := &apos;INDO/1&apos;;
	#legalvals[++#idx] := &apos;INDO/2&apos;;
end if;
#legalvals[++#idx] := &apos;PM6&apos;;
setlegalvalues(#legalvals);</sci:legalvalscript>
										<sci:value>PM6</sci:value>
									</sci:arg>
									<sci:arg name="Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Auto</sci:legalval>
										<sci:legalval>Singlet</sci:legalval>
										<sci:legalval>Doublet</sci:legalval>
										<sci:legalval>Triplet</sci:legalval>
										<sci:legalval>Quartet</sci:legalval>
										<sci:legalval>Quintet</sci:legalval>
										<sci:legalval>Sextet</sci:legalval>
									</sci:arg>
									<sci:arg name="Spin State" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:legalval>RHF</sci:legalval>
										<sci:legalval selected="true">UHF</sci:legalval>
										<sci:legalval>A-UHF</sci:legalval>
										<sci:legalval>ROHF</sci:legalval>
									</sci:arg>
									<sci:arg name="Charge" type="DoubleType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
										<sci:validscript>SetInvalidDetails(&quot;Allowed value is between -10000 and 10000&quot;);parameter() &gt;=  -10000 and parameter() &lt;= 10000;</sci:validscript>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Solvation Scheme" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;li&gt;&lt;strong&gt;SCRF&lt;/strong&gt; - Use the self-consistent reaction field method&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &quot;SCRF&quot; is only available when &lt;i&gt;Task&lt;/i&gt; is set to &quot;Energy&quot;.&lt;/p&gt;
&lt;strong&gt;Note:&lt;/strong&gt; &quot;COSMO&quot; is not available for  &lt;i&gt;Hamiltonian&lt;/i&gt; &quot;PM6&quot;.&lt;/p&gt;</sci:help>
										<sci:member>SCRF Solvent</sci:member>
										<sci:member>COSMO Solvent</sci:member>
										<sci:member>Dielectric Constant</sci:member>
										<sci:legalvalscript>Append(#legalvals, &apos;None&apos;);
if ((Parameter(&apos;Hamiltonian&apos;) eq &apos;MNDO/C&apos; or Parameter(&apos;Hamiltonian&apos;) eq &apos;MNDO&apos; or Parameter(&apos;Hamiltonian&apos;) eq &apos;AM1&apos; or Parameter(&apos;Hamiltonian&apos;) eq &apos;PM3&apos; or Parameter(&apos;Hamiltonian&apos;) eq &apos;AM1*&apos; or Parameter(&apos;Hamiltonian&apos;) eq &apos;MNDO/d&apos;)) then
	Append(#legalvals, &apos;COSMO&apos;);
end if;
if Parameter(&apos;Task&apos;) eq &apos;Energy&apos; then
	Append(#legalvals, &apos;SCRF&apos;);
end if;
SetLegalValues(#legalvals);</sci:legalvalscript>
										<sci:value>None</sci:value>
									</sci:arg>
									<sci:arg name="SCRF Solvent" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The SCRF solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;SCRF&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;SCRF&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
										<sci:legalval>Acetone</sci:legalval>
										<sci:legalval>Acetonitrile</sci:legalval>
										<sci:legalval>Benzene</sci:legalval>
										<sci:legalval>Carbon Tetrachloride</sci:legalval>
										<sci:legalval>Chloroform</sci:legalval>
										<sci:legalval>Diethyl Ether</sci:legalval>
										<sci:legalval>Dimethyl Sulfoxide</sci:legalval>
										<sci:legalval>Ethanol</sci:legalval>
										<sci:legalval>Methanol</sci:legalval>
										<sci:legalval>Methylene Chloride</sci:legalval>
										<sci:legalval>n-Hexane</sci:legalval>
										<sci:legalval>n-Hexadecane</sci:legalval>
										<sci:legalval>Nitrobenzene</sci:legalval>
										<sci:legalval>Pyridine</sci:legalval>
										<sci:legalval selected="true">Water</sci:legalval>
									</sci:arg>
									<sci:arg name="COSMO Solvent" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
										<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
										<sci:legalval>Acetone</sci:legalval>
										<sci:legalval>Acetonitrile</sci:legalval>
										<sci:legalval>Benzene</sci:legalval>
										<sci:legalval>Carbon Tetrachloride</sci:legalval>
										<sci:legalval>Chloroform</sci:legalval>
										<sci:legalval>Diethyl Ether</sci:legalval>
										<sci:legalval>Dimethyl Sulfoxide</sci:legalval>
										<sci:legalval>Ethanol</sci:legalval>
										<sci:legalval>Methanol</sci:legalval>
										<sci:legalval>Methylene Chloride</sci:legalval>
										<sci:legalval>n-Hexane</sci:legalval>
										<sci:legalval>n-Hexadecane</sci:legalval>
										<sci:legalval>Nitrobenzene</sci:legalval>
										<sci:legalval>Pyridine</sci:legalval>
										<sci:legalval selected="true">Water</sci:legalval>
										<sci:legalval>Customized</sci:legalval>
									</sci:arg>
									<sci:arg name="Dielectric Constant" type="DoubleType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
										<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 10000&quot;);parameter() &gt;=  1 and parameter() &lt;= 10000;</sci:validscript>
										<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;COSMO Solvent&quot;);
if (#tmpStr ne &quot;Customized&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;COSMO Solvent&apos; to &apos;Customized&apos;&quot;;
end if;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	if (#disableText ne &quot;&quot;) then #disableText .= &quot; and&quot;; end if;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Outputs" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Specifies which properties calculated by VAMP are added to the data record.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &quot;Electronic Levels&quot; and &quot;UV-Vis Chart&quot; cannot be calculated when any of the following are selected: &quot;Vibrational Modes&quot;, &quot;Zero Point Energy&quot;, or &quot;Thermodynamics Chart&quot;.&lt;/p&gt;
&lt;p&gt;Here is a summary list of available outputs:&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Total Energy&lt;/li&gt;
&lt;li&gt;Electronic Energy&lt;/li&gt;
&lt;li&gt;Repulsive Energy&lt;/li&gt;
&lt;li&gt;Ionization Potential&lt;/li&gt;
&lt;li&gt;HOMO Energy&lt;/li&gt;
&lt;li&gt;LUMO Energy&lt;/li&gt;
&lt;li&gt;Heat of Formation&lt;/li&gt;
&lt;li&gt;Zero Point Energy&lt;/li&gt;
&lt;li&gt;Vibrational Modes&lt;/li&gt;
&lt;li&gt;Total Dipole&lt;/li&gt;
&lt;li&gt;Dipole Moment&lt;/li&gt;
&lt;li&gt;Quadrupole Moment&lt;/li&gt;
&lt;li&gt;Octupole Moment&lt;/li&gt;
&lt;li&gt;ESP Charge&lt;/li&gt;
&lt;li&gt;Mulliken Charge&lt;/li&gt;
&lt;li&gt;Coulson Charge&lt;/li&gt;
&lt;li&gt;Atomic Densities HOMO&lt;/li&gt;
&lt;li&gt;Atomic Densities LUMO&lt;/li&gt;
&lt;li&gt;Mean Polarizability&lt;/li&gt;
&lt;li&gt;Molecular Point Group&lt;/li&gt;
&lt;li&gt;Surface Area&lt;/li&gt;
&lt;li&gt;Electronic Levels&lt;/li&gt;
&lt;li&gt;Propgen Descriptors&lt;/li&gt;
&lt;li&gt;Thermodynamics Chart&lt;/li&gt;
&lt;li&gt;UV-Vis Chart&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;</sci:help>
										<sci:member>Keep All Calculated</sci:member>
										<sci:legalval selected="true">Total Energy</sci:legalval>
										<sci:legalval selected="true">Electronic Energy</sci:legalval>
										<sci:legalval>Repulsive Energy</sci:legalval>
										<sci:legalval>Ionization Potential</sci:legalval>
										<sci:legalval selected="true">HOMO Energy</sci:legalval>
										<sci:legalval selected="true">LUMO Energy</sci:legalval>
										<sci:legalval selected="true">Heat of Formation</sci:legalval>
										<sci:legalval selected="true">Zero Point Energy</sci:legalval>
										<sci:legalval selected="true">Vibrational Modes</sci:legalval>
										<sci:legalval selected="true">Total Dipole</sci:legalval>
										<sci:legalval selected="true">Dipole Moment</sci:legalval>
										<sci:legalval>Quadrupole Moment</sci:legalval>
										<sci:legalval>Octupole Moment</sci:legalval>
										<sci:legalval>ESP Charge</sci:legalval>
										<sci:legalval selected="true">Mulliken Charge</sci:legalval>
										<sci:legalval>Coulson Charge</sci:legalval>
										<sci:legalval>Atomic Densities HOMO</sci:legalval>
										<sci:legalval>Atomic Densities LUMO</sci:legalval>
										<sci:legalval selected="true">Mean Polarizability</sci:legalval>
										<sci:legalval>Molecular Point Group</sci:legalval>
										<sci:legalval>Surface Area</sci:legalval>
										<sci:legalval selected="true">Electronic Levels</sci:legalval>
										<sci:legalval>Propgen Descriptors</sci:legalval>
										<sci:legalval selected="true">Thermodynamics Chart</sci:legalval>
										<sci:legalval selected="true">UV-Vis Chart</sci:legalval>
									</sci:arg>
									<sci:arg name="Keep All Calculated" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;If true, all outputs from the VAMP calculation will be added to the data record. These may include unrequested outputs produced by the VAMP calculation using the input settings required to generate the requested outputs.&lt;/p&gt;
&lt;p&gt;If false, only those outputs specifically requested will be added.&lt;/p&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
										<sci:value>__OutputsTable,__OutputPropertiesTable,__Freq,__CIScheme,__UVVis,__Propgen,_CalculateMullikenCharges,_CalculateESPCharges</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>localhost</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval selected="true">Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval selected="true">Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/materials</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jul 25 10:55:39 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Semiempirical Properties (VAMP)</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>CALCULATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{3C37DB78-1B51-46aa-9BF7-147B154C7016}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -815</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Calculates properties using VAMP</sci:value>
										<sci:value>&lt;p&gt;Calculates various properties using VAMP.  VAMP is a state-of-the-art semiempirical quantum mechanics program that simulates reactions and properties of molecules in gas and solvent phases. The program is optimized to be highly numerically stable and fast so that calculations, even on large molecular systems, can be performed very efficiently.&lt;/p&gt;
&lt;p&gt;The properties that can be calculated include various energies, dipole moments, atomic charges, polarizability, thermodynamics and UV-Vis spectrum.&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Unprocessed data records</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.1.0.115</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Materials\Property Calculators\Simulation\Semiempirical Properties (VAMP)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#uvvis := HashContains(@__OutputsTable, &apos;Electronic Levels&apos;) or HashContains(@__OutputsTable, &apos;UV-Vis Chart&apos;);
@__Freq := HashContains(@__OutputsTable, &apos;Vibrational Modes&apos;) or HashContains(@__OutputsTable, &apos;Zero Point Energy&apos;) or HashContains(@__OutputsTable, &apos;Thermodynamics Chart&apos;) ? &apos;True&apos; : &apos;False&apos;;
@__CIScheme := &apos;CIS&apos;;
if #uvvis then
	if @&apos;Spin State&apos; eq &apos;RHF&apos; then
		@__CIScheme := &apos;CIS&apos;;
	elsif @&apos;Spin State&apos; eq &apos;ROHF&apos; then
		@__CIScheme := &apos;RumerCI&apos;;
	end if;
	@__UVVis := (@__CIScheme ne &apos;None&apos;) ? &apos;True&apos; : &apos;False&apos;;
else
	@__UVVis := &apos;False&apos;;
end if;
@__Propgen := HashContains(@__OutputsTable, &apos;Propgen Descriptors&apos;) ? &apos;True&apos; : &apos;False&apos;;
@_CalculateMullikenCharges := HashContains(@__OutputsTable, &apos;Mulliken Charge&apos;) ? &apos;True&apos; : &apos;False&apos;;
@_CalculateESPCharges := HashContains(@__OutputsTable, &apos;ESP Charge&apos;) ? &apos;True&apos; : &apos;False&apos;;
</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
												<sci:value>@__OutputsTable := HashCreate(False);
@__OutputPropertiesTable := HashCreate(False);
#n := numvalues(@Outputs);
for #i in 1 .. #n loop
	HashAdd(@__OutputsTable, @Outputs[#i], 1);
	if (@Outputs[#i] eq &apos;Vibrational Modes&apos;) then
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_VibrationalMode&apos;, 1);
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_VibrationalFrequency&apos;, 1);
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_VibrationalReducedMass&apos;, 1);
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_VibrationalRamanIntensity&apos;, 1);
	elsif (@Outputs[#i] eq &apos;Thermodynamics Chart&apos;) then
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_ThermodynamicsChart&apos;, 1);
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_Enthalpy&apos;, 1);
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_Entropy&apos;, 1);
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_HeatCapacity&apos;, 1);
	else
		HashAdd(@__OutputPropertiesTable, &apos;MSVAMP_&apos;.rsubst(@Outputs[#i], &apos;\W&apos;, &apos;&apos;, &apos;g&apos;), 1);
	end if;
end loop;
</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
												<sci:value>HashDestroy(@__OutputsTable);</sci:value>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Initialize Settings</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Energy Calculation (VAMP)" version="2">
											<sci:arg name="Energy" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
												<sci:member>Hamiltonian</sci:member>
												<sci:member>Multiplicity</sci:member>
												<sci:member>Spin State</sci:member>
												<sci:member>Charge</sci:member>
												<sci:member>Electronic</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;There are two types of Hamiltonian available; neglect of diatomic differential overlap (NDDO) and Zerner&apos;s intermediate neglect of differential overlap (ZINDO).&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important. (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds. (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3. (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens (NDDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CNDO/1&lt;/strong&gt; - complete neglect of differential overlap is the least rigorous semiempirical approximation, all integrals involving different atomic orbitals are ignored. (ZINDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CNDO/2&lt;/strong&gt; - identical to CNDO/1 but parameterized for fewer elements (ZINDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;INDO/1&lt;/strong&gt; - intermediate neglect of differential overlap removes the CNDO constraint that two-electron integrals on the same center must be equal. Therefore, for atoms with s and p orbitals, five unique two-electron one-center integrals exist. (ZINDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;INDO/2&lt;/strong&gt; - identical to INDO/1 but parameterized for fewer elements (ZINDO)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries. (NDDO)&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Hamiltonian)</sci:value>
											</sci:arg>
											<sci:arg name="Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Multiplicity)</sci:value>
											</sci:arg>
											<sci:arg name="Spin State" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Spin State)</sci:value>
											</sci:arg>
											<sci:arg name="Charge" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between -10000 and 10000&quot;);parameter() &gt;=  -10000 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Settings File&quot;);
if (#tmpStr ne &quot;&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Settings File&apos; to &apos;&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(Charge)</sci:value>
											</sci:arg>
											<sci:arg name="Electronic" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
												<sci:member>SCF</sci:member>
												<sci:member>CI Scheme</sci:member>
												<sci:member>Solvation Scheme</sci:member>
											</sci:arg>
											<sci:arg name="SCF" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
												<sci:member>Convergence Scheme</sci:member>
												<sci:member>SCF Tolerance</sci:member>
												<sci:member>Maximum SCF Cycles</sci:member>
											</sci:arg>
											<sci:arg name="Convergence Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:legalval selected="true">Standard</sci:legalval>
												<sci:legalval>Pulay</sci:legalval>
												<sci:legalval>IIS</sci:legalval>
												<sci:legalval>Pulay/IIS</sci:legalval>
											</sci:arg>
											<sci:arg name="SCF Tolerance" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-10 and 10&quot;);parameter() &gt;=  1e-10 and parameter() &lt;= 10;</sci:validscript>
												<sci:value>0.00001</sci:value>
											</sci:arg>
											<sci:arg name="Maximum SCF Cycles" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 1000&quot;);parameter() &gt;=  1 and parameter() &lt;= 1000;</sci:validscript>
												<sci:value>200</sci:value>
											</sci:arg>
											<sci:arg name="CI Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>Number of Orbitals</sci:member>
												<sci:member>Requested Number of Virtual Orbitals</sci:member>
												<sci:member>Ignore Degenerate Orbitals</sci:member>
												<sci:member>Use Level Shifting</sci:member>
												<sci:member>Level Shift</sci:member>
												<sci:value>$(__CIScheme)</sci:value>
											</sci:arg>
											<sci:arg name="Number of Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 2&quot;);parameter() &gt;= 2;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Requested Number of Virtual Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1&quot;);parameter() &gt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Ignore Degenerate Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Use Level Shifting" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Level Shift" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 1000&quot;);parameter() &gt;=  0 and parameter() &lt;= 1000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Use Level Shifting&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Use Level Shifting&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Solvation Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;li&gt;&lt;strong&gt;SCRF&lt;/strong&gt; - Use the self-consistent reaction field method&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>SCRF Solvent</sci:member>
												<sci:member>COSMO Solvent</sci:member>
												<sci:member>Dielectric Constant</sci:member>
												<sci:value>$(Solvation Scheme)</sci:value>
											</sci:arg>
											<sci:arg name="SCRF Solvent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The SCRF solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;SCRF&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;SCRF&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(SCRF Solvent)</sci:value>
											</sci:arg>
											<sci:arg name="COSMO Solvent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(COSMO Solvent)</sci:value>
											</sci:arg>
											<sci:arg name="Dielectric Constant" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 10000&quot;);parameter() &gt;=  1 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;COSMO Solvent&quot;);
if (#tmpStr ne &quot;Customized&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;COSMO Solvent&apos; to &apos;Customized&apos;&quot;;
end if;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	if (#disableText ne &quot;&quot;) then #disableText .= &quot; and&quot;; end if;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(Dielectric Constant)</sci:value>
											</sci:arg>
											<sci:arg name="Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
												<sci:member>Vibrational Frequencies</sci:member>
												<sci:member>UV-Vis</sci:member>
												<sci:member>Localized Orbitals</sci:member>
												<sci:member>Propgen Descriptors</sci:member>
												<sci:member>Calculate Mulliken Charges</sci:member>
												<sci:member>Calculate ESP Charges</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Vibrational Frequencies" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
												<sci:member>Thermodynamics</sci:member>
												<sci:member>Minimum Temperature</sci:member>
												<sci:member>Maximum Temperature</sci:member>
												<sci:member>Temperature Step Size</sci:member>
												<sci:value>$(__Freq)</sci:value>
											</sci:arg>
											<sci:arg name="Thermodynamics" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Minimum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>700</sci:value>
											</sci:arg>
											<sci:arg name="Temperature Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 10 and 100&quot;);parameter() &gt;=  10 and parameter() &lt;= 100;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>50</sci:value>
											</sci:arg>
											<sci:arg name="UV-Vis" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;CI Scheme&quot;);
if (#tmpStr ne &quot;Full&quot; and #tmpStr ne &quot;CIS&quot; and #tmpStr ne &quot;CISD&quot; and #tmpStr ne &quot;PECI&quot; and #tmpStr ne &quot;Rumer CI&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;CI Scheme&apos; to &apos;Full&apos; or to &apos;CIS&apos; or to &apos;CISD&apos; or to &apos;PECI&apos; or to &apos;Rumer CI&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(__UVVis)</sci:value>
											</sci:arg>
											<sci:arg name="Localized Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Propgen Descriptors" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(__Propgen)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate Mulliken Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateMullikenCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate ESP Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateESPCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
												<sci:member>Settings File</sci:member>
												<sci:member>Keep Output Files</sci:member>
											</sci:arg>
											<sci:arg name="Settings File" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location of the settings file to use to override all other state parameters.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Output Files" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether to retain any results files from the server calculation. All files are stored in the location specified by the &lt;i&gt;Output Directory&lt;/i&gt;.&lt;/p&gt;</sci:help>
												<sci:member>Output Directory</sci:member>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Directory" type="DirectoryType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location where the files produced will be stored.&lt;/p&gt;&lt;/p&gt;To add files to an existing Materials Studio project set this to the project&apos;s &quot;Documents&quot; folder. If this is not specified results are stored in &lt;code&gt;$(JobDir)/Exports&lt;/code&gt;.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Keep Output Files&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Keep Output Files&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Calculates the total energy and binding energy of a structure using VAMP</sci:value>
												<sci:value>&lt;p&gt;Semiempirical methods such as VAMP compute the heat of formation at 298 K. This is in contrast to ab initio methods, which generally compute a total electronic energy. The heat of formation is determined from a combination of computed and parameterized data. The default unit of energy in VAMP is kilocalories per mole.&lt;/p&gt;&lt;p&gt;By comparing the total energies of different systems, you can compute a range of properties that have chemical significance, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Heats of reaction&lt;/li&gt;&lt;li&gt;Energy barriers&lt;/li&gt;&lt;li&gt;Conformational energy differences&lt;/li&gt;&lt;li&gt;Bond strengths&lt;/li&gt;&lt;li&gt;Adsorption energies&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The heat of formation computed by VAMP for a particular molecular geometry depends upon a number of computational parameters. When comparing energies, it is important that you use the same parameters for each system.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.0.0.14</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Nov 01 12:54:17 2012</sci:value>
											</sci:arg>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Energy Calculation (VAMP)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CALCULATORNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{2B922F65-C086-4c3e-9042-7E9DFED9B473}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -455</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>24</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Quantum Mechanics\Energy Calculation (VAMP)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#props := RPropertyNames (&apos;^MSVAMP_.*&apos;); 
FOR #i in 1 .. numvalues(#props) 
LOOP 
    rename(#props[#i], &apos;__MS_SavedProperty_&apos;.#props[#i]); 
END LOOP;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Save VAMP Properties</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -635</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@Task eq &apos;Energy&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>@Task eq &apos;Energy&apos;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -635</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>26</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Geometry Optimization (VAMP)" version="2">
											<sci:arg name="Maximum Force" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0.01 and 10&quot;);parameter() &gt;=  0.01 and parameter() &lt;= 10;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-4 and 1&quot;);parameter() &gt;=  1e-4 and parameter() &lt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.2</sci:value>
											</sci:arg>
											<sci:arg name="Generate Hessian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">Partial</sci:legalval>
												<sci:legalval>Exact</sci:legalval>
											</sci:arg>
											<sci:arg name="Optimize Internals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Energy" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
												<sci:member>Hamiltonian</sci:member>
												<sci:member>Multiplicity</sci:member>
												<sci:member>Spin State</sci:member>
												<sci:member>Charge</sci:member>
												<sci:member>Electronic</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Hamiltonian)</sci:value>
											</sci:arg>
											<sci:arg name="Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Multiplicity)</sci:value>
											</sci:arg>
											<sci:arg name="Spin State" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Spin State)</sci:value>
											</sci:arg>
											<sci:arg name="Charge" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between -10000 and 10000&quot;);parameter() &gt;=  -10000 and parameter() &lt;= 10000;</sci:validscript>
												<sci:value>$(Charge)</sci:value>
											</sci:arg>
											<sci:arg name="Electronic" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
												<sci:member>SCF</sci:member>
												<sci:member>CI Scheme</sci:member>
												<sci:member>Solvation Scheme</sci:member>
											</sci:arg>
											<sci:arg name="SCF" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
												<sci:member>Convergence Scheme</sci:member>
												<sci:member>SCF Tolerance</sci:member>
												<sci:member>Maximum SCF Cycles</sci:member>
											</sci:arg>
											<sci:arg name="Convergence Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:legalval>Standard</sci:legalval>
												<sci:legalval>Pulay</sci:legalval>
												<sci:legalval>IIS</sci:legalval>
												<sci:legalval selected="true">Pulay/IIS</sci:legalval>
											</sci:arg>
											<sci:arg name="SCF Tolerance" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-10 and 10&quot;);parameter() &gt;=  1e-10 and parameter() &lt;= 10;</sci:validscript>
												<sci:value>2e-4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum SCF Cycles" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 1000&quot;);parameter() &gt;=  1 and parameter() &lt;= 1000;</sci:validscript>
												<sci:value>500</sci:value>
											</sci:arg>
											<sci:arg name="CI Scheme" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>Number of Orbitals</sci:member>
												<sci:member>Requested Number of Virtual Orbitals</sci:member>
												<sci:member>Ignore Degenerate Orbitals</sci:member>
												<sci:member>Use Level Shifting</sci:member>
												<sci:member>Level Shift</sci:member>
												<sci:value>$(__CIScheme)</sci:value>
											</sci:arg>
											<sci:arg name="Number of Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 2&quot;);parameter() &gt;= 2;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Requested Number of Virtual Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1&quot;);parameter() &gt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Ignore Degenerate Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Use Level Shifting" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Level Shift" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 1000&quot;);parameter() &gt;=  0 and parameter() &lt;= 1000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Use Level Shifting&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Use Level Shifting&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Solvation Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>COSMO Solvent</sci:member>
												<sci:member>Dielectric Constant</sci:member>
												<sci:value>$(Solvation Scheme)</sci:value>
											</sci:arg>
											<sci:arg name="COSMO Solvent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(COSMO Solvent)</sci:value>
											</sci:arg>
											<sci:arg name="Dielectric Constant" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 10000&quot;);parameter() &gt;=  1 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;COSMO Solvent&quot;);
if (#tmpStr ne &quot;Customized&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;COSMO Solvent&apos; to &apos;Customized&apos;&quot;;
end if;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	if (#disableText ne &quot;&quot;) then #disableText .= &quot; and&quot;; end if;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(Dielectric Constant)</sci:value>
											</sci:arg>
											<sci:arg name="Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
												<sci:member>Vibrational Frequencies</sci:member>
												<sci:member>UV-Vis</sci:member>
												<sci:member>Localized Orbitals</sci:member>
												<sci:member>Propgen Descriptors</sci:member>
												<sci:member>Calculate Mulliken Charges</sci:member>
												<sci:member>Calculate ESP Charges</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Vibrational Frequencies" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
												<sci:member>Thermodynamics</sci:member>
												<sci:member>Minimum Temperature</sci:member>
												<sci:member>Maximum Temperature</sci:member>
												<sci:member>Temperature Step Size</sci:member>
												<sci:value>$(__Freq)</sci:value>
											</sci:arg>
											<sci:arg name="Thermodynamics" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Minimum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>700</sci:value>
											</sci:arg>
											<sci:arg name="Temperature Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 10 and 100&quot;);parameter() &gt;=  10 and parameter() &lt;= 100;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>50</sci:value>
											</sci:arg>
											<sci:arg name="UV-Vis" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;CI Scheme&quot;);
if (#tmpStr ne &quot;Full&quot; and #tmpStr ne &quot;CIS&quot; and #tmpStr ne &quot;CISD&quot; and #tmpStr ne &quot;PECI&quot; and #tmpStr ne &quot;Rumer CI&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;CI Scheme&apos; to &apos;Full&apos; or to &apos;CIS&apos; or to &apos;CISD&apos; or to &apos;PECI&apos; or to &apos;Rumer CI&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(__UVVis)</sci:value>
											</sci:arg>
											<sci:arg name="Localized Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Propgen Descriptors" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(__Propgen)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate Mulliken Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateMullikenCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate ESP Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateESPCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
												<sci:member>Settings File</sci:member>
												<sci:member>Keep Output Files</sci:member>
											</sci:arg>
											<sci:arg name="Settings File" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location of the settings file to use to override all other state parameters.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Output Files" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Specify whether to retain any results files from the server calculation. All files are stored in the location specified by the &lt;i&gt;Output Directory&lt;/i&gt;.&lt;/p&gt;</sci:help>
												<sci:member>Output Directory</sci:member>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Directory" type="DirectoryType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location where the files produced will be stored.&lt;/p&gt;&lt;/p&gt;To add files to an existing Materials Studio project set this to the project&apos;s &quot;Documents&quot; folder. If this is not specified results are stored in &lt;code&gt;$(JobDir)/Exports&lt;/code&gt;.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Keep Output Files&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Keep Output Files&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Refines the geometry of a structure to minimize its energy using VAMP</sci:value>
												<sci:value>&lt;p&gt;After a structure is built, it usually needs to be refined to bring it to a stable geometry. The refinement process is known as optimization, and is an iterative procedure in which the coordinates of the atoms are adjusted so that the energy of the structure is brought to a stationary point, i.e., one in which the forces on the atoms are zero.&lt;/p&gt;&lt;p&gt;You can request an energy minimization, a search for a relative minimum on the energy hypersurface. The geometry corresponding to this structure should have a close resemblance to an actual physical structure of the system at equilibrium. You can also perform an optimization on a transition state.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.0.0.14</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Nov 01 12:54:17 2012</sci:value>
											</sci:arg>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CALCULATORNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{FDBEAFBC-E7DD-4f77-9E91-A70DC304F57D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -815</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>28</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Quantum Mechanics\Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>VAMP Calculation</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.9.0.30</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/coreutils</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Settings Mapper" version="2">
															<sci:arg name="CUT_HERE_MAPPER" type="StringType" required="false" visibility="visible" multi="false" uimpl="false"/>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="__MS_Module" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>VAMP</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Module_Task" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>GeometryOptimization</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Out_Document" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Structure</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Intermediate_Files" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>sdf</sci:value>
															</sci:arg>
															<sci:arg name="OrbitalEigenvectors" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Computes FrontierOrbitals.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="CreateEnergyEvolutionChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts of energy over the calculation and the change in energy and gradient norm over the calculation cycle.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_ForceConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Force</sci:value>
															</sci:arg>
															<sci:arg name="_MaximumDisplacement" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_GenerateHessian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Generate Hessian</sci:value>
															</sci:arg>
															<sci:arg name="_OptimizeInternals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
																<sci:value>Optimize Internals</sci:value>
															</sci:arg>
															<sci:arg name="_Energy" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Hamiltonian</sci:member>
																<sci:member>_Multiplicity</sci:member>
																<sci:member>_SpinPolarization</sci:member>
																<sci:member>_Charge</sci:member>
																<sci:member>_Electronic</sci:member>
																<sci:value>Energy</sci:value>
															</sci:arg>
															<sci:arg name="_Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Hamiltonian</sci:value>
															</sci:arg>
															<sci:arg name="_Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Multiplicity</sci:value>
															</sci:arg>
															<sci:arg name="_SpinPolarization" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Spin State</sci:value>
															</sci:arg>
															<sci:arg name="_Charge" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
																<sci:value>Charge</sci:value>
															</sci:arg>
															<sci:arg name="_Electronic" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
																<sci:member>_SCF</sci:member>
																<sci:member>_CIScheme</sci:member>
																<sci:member>_SolvationScheme</sci:member>
																<sci:value>Electronic</sci:value>
															</sci:arg>
															<sci:arg name="_SCF" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
																<sci:member>_ConvergenceScheme</sci:member>
																<sci:member>_SCFConvergence</sci:member>
																<sci:member>_MaxSCFCycles</sci:member>
																<sci:value>SCF</sci:value>
															</sci:arg>
															<sci:arg name="_ConvergenceScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Convergence Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_SCFConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>SCF Tolerance</sci:value>
															</sci:arg>
															<sci:arg name="_MaxSCFCycles" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
																<sci:value>Maximum SCF Cycles</sci:value>
															</sci:arg>
															<sci:arg name="_CIScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:member>_CINumOrbitals</sci:member>
																<sci:member>_CIRequestedNumVirtOrbitals</sci:member>
																<sci:member>_IgnoreDegenerateMOs</sci:member>
																<sci:member>_UseLevelShifting</sci:member>
																<sci:member>_LevelShift</sci:member>
																<sci:value>CI Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CINumOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Number of Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_CIRequestedNumVirtOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
																<sci:value>Requested Number of Virtual Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_IgnoreDegenerateMOs" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Ignore Degenerate Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_UseLevelShifting" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
																<sci:value>Use Level Shifting</sci:value>
															</sci:arg>
															<sci:arg name="_LevelShift" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
																<sci:value>Level Shift</sci:value>
															</sci:arg>
															<sci:arg name="_SolvationScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &quot;COSMO&quot; is not  available for  &lt;i&gt;Hamiltonian&lt;/i&gt; &quot;PM6&quot;.&lt;/p&gt;</sci:help>
																<sci:member>_CosmoSolvent</sci:member>
																<sci:member>_SolventDielectric</sci:member>
																<sci:value>Solvation Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CosmoSolvent" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>COSMO Solvent</sci:value>
															</sci:arg>
															<sci:arg name="_SolventDielectric" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
																<sci:value>Dielectric Constant</sci:value>
															</sci:arg>
															<sci:arg name="_Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Frequency</sci:member>
																<sci:member>_UV_VIS</sci:member>
																<sci:member>CreateUVChart</sci:member>
																<sci:member>_LocalizedOrbitals</sci:member>
																<sci:member>_Propgen</sci:member>
																<sci:member>_Mulliken</sci:member>
																<sci:member>_ESPcharges</sci:member>
																<sci:value>Properties</sci:value>
															</sci:arg>
															<sci:arg name="_Frequency" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
																<sci:member>_Thermodynamics</sci:member>
																<sci:member>CreateThermodynamicsChart</sci:member>
																<sci:member>_MinTemp</sci:member>
																<sci:member>_MaxTemp</sci:member>
																<sci:member>_StepTemp</sci:member>
																<sci:value>Vibrational Frequencies</sci:value>
															</sci:arg>
															<sci:arg name="_Thermodynamics" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
																<sci:value>Thermodynamics</sci:value>
															</sci:arg>
															<sci:arg name="CreateThermodynamicsChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts for enthalpy, entropy, and heat capacity as functions of temperature.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_MinTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Minimum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_MaxTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_StepTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Temperature Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_UV_VIS" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
																<sci:value>UV-Vis</sci:value>
															</sci:arg>
															<sci:arg name="CreateUVChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates a UV spectrum.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_LocalizedOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Localized Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_Propgen" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Propgen Descriptors</sci:value>
															</sci:arg>
															<sci:arg name="_Mulliken" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate Mulliken Charges</sci:value>
															</sci:arg>
															<sci:arg name="_ESPcharges" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate ESP Charges</sci:value>
															</sci:arg>
															<sci:arg name="_Advanced" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
																<sci:value>Advanced</sci:value>
															</sci:arg>
															<sci:arg name="PropertyMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>OrbitalEigenvectors,CreateEnergyEvolutionChart,_ForceConvergence,_MaximumDisplacement,_GenerateHessian,_OptimizeInternals,_Hamiltonian,_Multiplicity,_SpinPolarization,_Charge,_ConvergenceScheme,_SCFConvergence,_MaxSCFCycles,_CIScheme,_CINumOrbitals,_CIRequestedNumVirtOrbitals,_IgnoreDegenerateMOs,_UseLevelShifting,_LevelShift,_SolvationScheme,_CosmoSolvent,_SolventDielectric,_Frequency,_Thermodynamics,CreateThermodynamicsChart,_MinTemp,_MaxTemp,_StepTemp,_UV_VIS,CreateUVChart,_LocalizedOrbitals,_Propgen,_Mulliken,_ESPcharges</sci:value>
															</sci:arg>
															<sci:arg name="EnumValMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>COSMO Solvent=Carbon Tetrachloride;Carbon tetrachloride;Diethyl Ether;Diethyl ether;Dimethyl Sulfoxide;Dimethyl sulfoxide;Methylene Chloride;Methylene chloride;n-Hexane;n-hexane;n-Hexadecane;n-hexadecane,CI Scheme=Rumer CI;RumerCI</sci:value>
															</sci:arg>
															<sci:arg name="ParamDependencies" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>_CINumOrbitals,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_CIRequestedNumVirtOrbitals,Parameter(_CIScheme),Rumer CI,eq;_IgnoreDegenerateMOs,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_UseLevelShifting,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_LevelShift,Parameter(_UseLevelShifting),True,eq;_CosmoSolvent,Parameter(_SolvationScheme),COSMO,eq;_SolventDielectric,Parameter(_CosmoSolvent),Customized,eq,Parameter(_SolvationScheme),COSMO,eq,&amp;&amp;;_SolvationScheme,Parameter(_Hamiltonian),MNDO/C,eq,Parameter(_Hamiltonian),AM1*,eq,||,Parameter(_Hamiltonian),AM1,eq,||,Parameter(_Hamiltonian),PM3,eq,||,Parameter(_Hamiltonian),MNDO/d,eq,||,Parameter(_Hamiltonian),MNDO,eq,||;_Thermodynamics,Parameter(_Frequency),True,eq;CreateThermodynamicsChart,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MinTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MaxTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_StepTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_UV_VIS,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;CreateUVChart,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||,Parameter(_UV_VIS),True,eq,&amp;&amp;;Output Directory,Parameter(Keep Output Files),True,eq</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Outputs_Definition" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Task Report;Report;Convergence Criteria Met;Converged;Total Energy;TotalEnergy;Enthalpy;Enthalpy;Entropy;Entropy;Heat Capacity;HeatCapacity;Energy Chart;EnergyChart;Convergence Chart;ConvergenceChart;Thermodynamics Chart;Thermodynamics;UV-Vis Chart;UVVis;Structure;Structure;Trajectory;Trajectory</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Extra_Outputs_Def" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Electronic Energy;ELECTRONIC ENERGY;Repulsive Energy;REPULSIVE ENERGY;Ionization Potential;IONIZATION POTENTIAL;HOMO Energy;HOMO;LUMO Energy;LUMO;Heat Of Formation;HEAT OF FORMATION;Zero Point Energy;ZPE;Total Dipole;TOTAL DIPOL;Dipole Moment;DIPOL;Quadrupole Moment;QUADPOL;Octupole Moment;OCTUPOL;ESP Charge;VESPA;Mulliken Charge;MULLIKEN CHARGES;Coulson Charge;COULSON CHARGES;Atomic Densities HOMO;ATOMIC DENSITIES HOMO;Atomic Densities LUMO;ATOMIC DENSITIES LUMO;Mean Polarizability;MEANPOL;Molecular Point Group;POINT-GROUP;Surface Area;MOLAREA;Electronic Levels;ELECTRONIC LEVELS;Propgen Descriptors;PROPGEN DESCRIPTORS</sci:value>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Halt</sci:value>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{37392346-E16E-4C97-ADFC-FCF74F17C7CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jul 28 10:50:24 2011</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Settings Mapper</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Settings Mapper</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Exec Core" version="2">
															<sci:arg name="Task Execution" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Execution Script File</sci:member>
																<sci:member>Module Name</sci:member>
																<sci:member>Task Name</sci:member>
																<sci:member>Task Run Method</sci:member>
																<sci:member>Settings File</sci:member>
															</sci:arg>
															<sci:arg name="Execution Script File" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Name of the execution script file, without extension, to be used by this component. The script needs to be stored in apps/scitegic/materials/lang/perl/ComponentModules/Core/Impl directory. If parameter value is not specified a GenericExec script will be used by default, which is appropriate for components with the following characteristic:
&lt;ul&gt;
&lt;li&gt;component produces 1 output record for each input record (1 in - 1 out)&lt;/li&gt; 
&lt;li&gt;task doesn&apos;t require any special preparation&lt;/li&gt;
&lt;li&gt;task is executed like: Modules-&gt;$(Module Name)-&gt;$(Task Name)-&gt;$(Task Run Method)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>VampExec</sci:value>
															</sci:arg>
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="Task Name" type="ExpressionType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds task name, or task name in quotes, for ex: &quot;Dynamics&quot;. For generated components this should always be __MS_Module_Task.</sci:help>
																<sci:value>__MS_Module_Task</sci:value>
															</sci:arg>
															<sci:arg name="Task Run Method" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds name of a method called to execute a task, or method name in quotes, for ex: &quot;Pawley&quot;. If value is not specified, &apos;Run&apos; will be is used by default. For generated components with custom execution method, this should always be __MS_Module_Exec.</sci:help>
															</sci:arg>
															<sci:arg name="Settings File" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>URL of a settings file to be used instead of UI parameters. For generated components this should always be $(Settings File). If value is not specified, settings files won&apos;t be used.</sci:help>
																<sci:value>$(Settings File)</sci:value>
															</sci:arg>
															<sci:arg name="Export Result Files" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export result files produced by task run. For generated components this should always be $(Keep Output Files), when such parameter is exposed on their UI and blank otherwise. When parameter value doesn&apos;t evaluate to True the result files are only available in Project/Documents directory on the server.</sci:help>
																<sci:member>Export Intermediate Files</sci:member>
																<sci:member>Intermediate Files to Export</sci:member>
																<sci:member>Root Output Directory</sci:member>
																<sci:value>$(Keep Output Files)</sci:value>
															</sci:arg>
															<sci:arg name="Export Intermediate Files" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export intermediate files. For generated components which has appropriate UI parameter this should always be &lt;i&gt;$(Keep Intermediate Files)&lt;/i&gt;, and blank otherwise. If value is not specified &lt;i&gt;True&lt;/i&gt; is used by default, but intermediate files are only exported if Intermediate Files to Export list is not empty. No intermediate files are exported if Export Result Files doesn&apos;t evaluate to &lt;i&gt;True&lt;/i&gt;.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Intermediate Files to Export" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds semicolon separated list of file extensions to export, or list in quotes like: &quot;arc;grd;cosmo&quot;. No intermediate files will be exported if list is empty or Export Intermediate Files or Export Result Files doesn&apos;t evaluate to True. For generated components which need to keep intermediates, this shuld always be set to __MS_Intermediate_Files.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>__MS_Intermediate_Files</sci:value>
															</sci:arg>
															<sci:arg name="Root Output Directory" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>URL of root directory for result files export. If not specified this will be $(JobDir)/Exports/$(RunId). For generated components this should be set to &lt;i&gt;$(Output Directory)&lt;/i&gt; when such a parameter is exposed on their UI. The parameter is only used if Export Result Files evaluates to &lt;i&gt;True&lt;/i&gt;.
</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>$(Output Directory)</sci:value>
															</sci:arg>
															<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Properties to Produce</sci:member>
																<sci:member>Get Result Document from Keys</sci:member>
																<sci:member>Generated Properties</sci:member>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys which to be export as properties, or list in quotes, like: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, all result key-value pairs will be exported. For generated components the value should be set to &lt;i&gt;__MS_Outputs_Definition&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;
Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;. To block export of all result key-values, provide empty list, like &quot;&quot;.
</sci:help>
																<sci:value>__MS_Outputs_Definition</sci:value>
															</sci:arg>
															<sci:arg name="Get Result Document from Keys" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys to be scanned for document to attach to output data record, or list in quotes like: &quot;Key1; Key2&quot;. Document from first key found will be used. If value is not specified, &quot;Structure;Trajectory&quot; will be used by default. For generated components this should always be set to __MS_Out_Document.</sci:help>
																<sci:value>__MS_Out_Document</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_Output_Properties</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Exec Core</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Aug 09 10:07:06 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Exec Core</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>CALCULATORNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{A25EE466-7063-4655-964D-556DA80569AF}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>390 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Exec Core</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Subprotocol" version="2">
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Preparation</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																		<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.9.0.30</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/coreutils</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>8</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>__MS_DSD_NumProc := 1;

if @&apos;Number of Parallel Threads&apos; is defined And RMatch(@&apos;Number of Parallel Threads&apos;, &quot;^\\d+$&quot;) then
	__MS_DSD_NumProc := @&apos;Number of Parallel Threads&apos;;		
end if;

/* reduce number of cores if it exceeds CPUCoresTotal */
if __MS_CPUCoresTotal is defined And __MS_DSD_NumProc &gt; __MS_CPUCoresTotal then
	__MS_DSD_NumProc := __MS_CPUCoresTotal;
	WarningText := &quot;Requested number of parallel threads was reduced to &quot; + __MS_DSD_NumProc +
				 &quot; as it exceeded CPUCoresTotal defined in Pipeline Pilot Server Administration Portal.&quot;;
end if;
</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Preparation</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																				<sci:value>__MS_QueueType,__MS_DSD_NumProc,__MS_BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Set Environment Variables</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>SUBPROTOCOLNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>378 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.48</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																						<sci:value>__MS_DSD_NumProc</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>MPI Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>9</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_QueueType)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_DSD_NumProc)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_QueueType is defined then
	@__MS_QueueType := __MS_QueueType;
end if;

__MS_QueueType is defined
</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Queued?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>666 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1 then
	@__MS_DSD_NumProc := __MS_DSD_NumProc;
end if;

__MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>MPI Run?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>4</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -820</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>5</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:connectid from="1" to="2" type="true"/>
																					<sci:connectid from="2" to="0" type="true"/>
																					<sci:connectid from="2" to="4" type="false"/>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="5" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>License Wait Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>378 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>10</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_BIOVIA_LIC_WAIT_TIMEOUT)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set Environment Variable</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot; then
	@__MS_BIOVIA_LIC_WAIT_TIMEOUT := __MS_BIOVIA_LIC_WAIT_TIMEOUT;
end if;

__MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot;

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Use License Wait?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.PropertyFunctions.1">
																						<sci:component name="No-op" version="2">
																							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																								<sci:legalval selected="true">LeaveData</sci:legalval>
																								<sci:legalval>ClearData</sci:legalval>
																								<sci:legalval>DeleteData</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the action to perform</sci:help>
																								<sci:value>PassDataToPort</sci:value>
																							</sci:arg>
																							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the port to pass data to</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>No-op</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Evaluate Expression</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>None</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>6.0.1.1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>6</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
																							</sci:arg>
																						</sci:component>
																					</sci:data>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="6" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:connectid from="9" to="10" type="true"/>
																		</sci:protocol>
																	</sci:data>
																	<sci:connectid from="2" to="1" type="true"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Perl MaterialsScript (on Server)" version="2">
																	<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;MaterialsScript (Perl) script to execute.  The component provides &lt;i&gt;templated&lt;/i&gt; script, which must be replaced.&lt;/p&gt;

&lt;p&gt;Any Pipeline Pilot Perl (on Server) component must execute the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;In addition, a MaterialsScript component provides a method GetMaterialsDocument($data) which can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt;
</sci:help>
																		<sci:value>use ComponentModules::Core::CoreExecute;</sci:value>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:value>25</sci:value>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>For internal use only.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Comment</sci:help>
																		<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Usage</sci:help>
																		<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Execute &amp; generate properties</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol ShowComment</sci:help>
																		<sci:value>true</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Add Protocol Comment Here</sci:help>
																		<sci:value>Add Protocol Comment Here</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>SubProtocol</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>390 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Executes MaterialsScript for each record</sci:value>
																		<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Unprocessed data records</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>8.4.5.24</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Make Shortcut by Default</sci:legalval>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/materials</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>6</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Container Connection" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="WebExports" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;p/&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval>ComponentTakesInput</sci:legalval>
																				<sci:legalval>ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="MaterialsSystem" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>For internal use only.</sci:help>
																				<sci:value>$(MaterialsSystem)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>EmptyProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/materials</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue Mar 22 15:31:46 2011</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>A top-level component for building protocols.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>The user should customize this description and usage to describe 
the functioning of their derived protocol.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Container Connection</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>ComponentNode</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{08334F2A-00CB-4A37-503F-8483A2E5178D}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Manage connections to the Materials Studio container</sci:value>
																				<sci:value>This is an internal component, used by other components in the Materials Collection.  It shouldn&apos;t be used on its own.</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>8.4.5.20</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Made Link Into Copy</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Modified</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Materials\Utilities\Internals\MatServer\Container Connection</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol/>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																				<sci:member>Parallel Processing Options Batch Size</sci:member>
																				<sci:member>Parallel Processing Options Server</sci:member>
																				<sci:member>Parallel Processing Options Preserve Order</sci:member>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:value>25</sci:value>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																				<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																				<sci:member>Parallel Processing Options Server Processes</sci:member>
																				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Subprotocol 1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>COMPONENTNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -455</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>6.1.0.21</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/core</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue May 01 14:06:30 2007</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.ComponentPerlPlugin.1">
																				<sci:component name="Perl (on Server)" version="2">
																					<sci:arg name="Script" type="StringType" required="true" visibility="visible" multi="false">
																						<sci:help>&lt;p&gt;Perl script to execute.  Pipeline Pilot executes the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The usual Perl scoping rules apply to variables.  To pass a variable between the three required subroutines use package level variables, e.g., &lt;code&gt;$::variable&lt;/code&gt; or &lt;code&gt;my $variable&lt;/code&gt; declared outside the subroutines.
&lt;/p&gt;

&lt;p&gt;
The &lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onFinalize&lt;/i&gt; subroutines both receive the &lt;code&gt;pilot::Context Perl&lt;/code&gt; object as the only argument.  The &lt;i&gt;onProcess&lt;/i&gt; subroutine receives the &lt;code&gt;pilot::Context&lt;/code&gt; and &lt;code&gt;pilot::DataRecord&lt;/code&gt; Perl objects as its two arguments.
&lt;/p&gt;

&lt;p&gt;
pilot::Context provides access to globals and parameters.  A common way to get these is via a Perl hash reference.  For example, to get a &lt;i&gt;Source&lt;/i&gt; parameter value use
&lt;/p&gt;

&lt;pre&gt;
my $parametersHashRef = $context-&gt;getComponentParameters()-&gt;getHashRef();
my $source = $parametersHashRef-&gt;{&quot;Source&quot;};
&lt;/pre&gt;

&lt;p&gt;
To obtain the value of a global property called &lt;i&gt;Old&lt;/i&gt; and set a new global property called &lt;i&gt;New&lt;/i&gt; use
&lt;/p&gt;

&lt;pre&gt;
my $globalsHashRef = $context-&gt;getGlobalProperties()-&gt;getHashRef();
my $value = $globalsHashRef-&gt;{&quot;Old&quot;};
$globalsHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
Top level properties in a data record are accessed similarly.
&lt;/p&gt;

&lt;pre&gt;
my $node = $data-&gt;getRoot();
my $propertiesHashRef = $node-&gt;getProperties()-&gt;getHashRef();
my $value = $propertiesHashRef-&gt;{&quot;Old&quot;};
$propertiesHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must return one of the following component state values:
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
To explicitly route a data record to a port use
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::PassPort);
&lt;/pre&gt;

&lt;p&gt;
or
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::FailPort);
&lt;/pre&gt;

&lt;p&gt;
Data records can also be terminated internally by routing to &lt;code&gt;$pilot::NoPort&lt;/code&gt;.
&lt;/p&gt;</sci:help>
																						<sci:value>$(Script)</sci:value>
																					</sci:arg>
																					<sci:arg name="Use Package" type="StringType" required="false" visibility="visible" multi="false" implbase="{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}">
																						<sci:help>The name of an application package that contains Perl modules referenced by this component. By defining this package name, a package-specific module may be referenced with the &apos;use modulename;&apos; syntax.</sci:help>
																						<sci:value>scitegic/materials</sci:value>
																					</sci:arg>
																					<sci:arg name="Rebuild In RTC" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;
The Perl component functions by creating an instance of a Perl interpreter and
passing the supplied Perl script to the interpreter for execution. The
creation of the Perl interpreter occurs one time, while script execution
occurs once for initialization and finalization subroutines and once 
for each data record processed by the component.
&lt;/p&gt;
&lt;p&gt;
However, in the context of a Run To Completion (RTC) subprtocols, the Perl 
component would normally be re-instantiated for each data record, 
in common with other components in an RTC subprotocol. This implies the
re-creation of the Perl interpreter for each data record, which can be
relatively time consuming, particularly for Perl scripts which
themselves perform a rapid operation per data record.
&lt;/p&gt;
&lt;p&gt;
So, to avoid significant differences in performance timings between RTC
and non-RTC contexts, the Perl component&apos;s default behavior is to &lt;i&gt;keep&lt;/i&gt;
the same instance of the Perl interpreter throughout its life cycle. This
is indicated by the False setting of the &lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
However, there are some circumstances where Perl script or 3rd party modules
are not written in a way that allows them to safely re-use the same interpreter in this way. So if you see unexpected behavior from a Perl
component in a Run To Completion subprotocol, switch the &lt;em&gt;Rebuild In RTC&lt;/em&gt;
parameter to True to see if that resolves the issue.
&lt;/p&gt;
&lt;p&gt;
If that fixes the problem, and the Perl cannot be re-cast to 
handle the persistent interpreter,
you may need to trade performance for stability.
&lt;/p&gt;</sci:help>
																						<sci:legalval>True</sci:legalval>
																						<sci:legalval selected="true">False</sci:legalval>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/integration</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Fri Feb 05 11:55:51 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Perl (on Server)</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>COMPONENTNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The component this component is based upon.</sci:help>
																						<sci:value>Plug In</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Executes Perl code on the server</sci:value>
																						<sci:value>&lt;p&gt;Allows a Perl script to manipulate a data record&apos;s property list, the global
property list, and component behavior. The &lt;em&gt;Script&lt;/em&gt; parameter contains
the script that implements the component behavior, encoded in Perl. The following
subroutines must be defined in this text parameter (all three methods need to
be declared in the main scope): &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;onInitialize: &lt;/em&gt;Invoked once before the any data records
    arrive. This method receives one argument, a pilot::Context object. Also,
    it must return a component state, one of $pilot::ReadyForInputData, $pilot::DoneProcessingData, $pilot::ReadyForNewData or $pilot::ReadyForInputThenNewData. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onProcess&lt;/em&gt;: Called once per data record. This method
    receives two arguments, a pilot::Context and a pilot::DataRecord object and
    return a component state. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onFinalize&lt;/em&gt;: Called when no more data records are available.
    This method receives one argument, a pilot::Context object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must
return one of the following component state values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Any script outside of the subroutines is executed just prior to calling
    onInitialize.&lt;/li&gt;
	&lt;li&gt;The optional &lt;em&gt;Use Package&lt;/em&gt; parameter is used to identify a package
      that holds one or more Perl modules that are referenced by the component.
      In this way, much or all of a component&apos;s functionality can be maintained
      in a package module. This facilitates component upgrading, by centralizing
    the code.&lt;/li&gt;
    &lt;li&gt;The Perl include path for the library must be declared in the package.conf
      file for the named package.&lt;/li&gt;
    &lt;li&gt;Perl&apos;s &lt;em&gt;strict&lt;/em&gt; and &lt;em&gt;warnings&lt;/em&gt; directives can be very useful
      when writing scripts. To detect warnings, you need to create a handler
      to manage them, since by default, Perl sends them to STDERR, which is not
    easily accessible from within Pipeline Pilot. 
	&lt;p&gt;For example, the following
    script treats warnings as errors:&lt;/p&gt;
	&lt;p&gt;&lt;code&gt;use warnings;&lt;br /&gt;
	$SIG{__WARN__} = sub {die @_;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt; If you see unexpected or erroneous behavior when using this component
in a Run To Completion subprotocol, please look at the help text for the
&lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter, which is in the Implementation tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>6.0.1.4</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The original path within the database of this component.</sci:help>
																						<sci:value>Components\Database and Application Integration\Application Integration\Programmatic Integration\Perl (on Server)</sci:value>
																					</sci:arg>
																				</sci:component>
																			</sci:data>
																		</sci:protocol>
																	</sci:data>
																	<sci:version iVal="1"/>
																</sci:protocol>
															</sci:data>
															<sci:connectid from="8" to="6" type="true"/>
															<sci:version iVal="2"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract SD properties" version="2">
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="SDF Document Property" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds SDF document URL, for ex: __MS_SDF_URL.</sci:help>
																<sci:value>__MS_SDF_URL</sci:value>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of SDF attributes to be export as properties, or list in quotes, for ex: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, no properties will be exported. For generated components the value should be set to __MS_Extra_Outputs_Def. Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;.
</sci:help>
																<sci:value>__MS_Extra_Outputs_Def</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_SDProperties, __MS_SDFDocumentName,__IsSDFPresent</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract SD properties</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8BF08A69-552B-4A5B-9007-7C9C7BF1ED68}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>690 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 27 10:36:46 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract SD properties</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract Vibrational Data" version="2">
															<sci:arg name="Output Type" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of output file from which vibrational mode information will be extracted.</sci:help>
																<sci:legalval selected="true">VAMP</sci:legalval>
																<sci:legalval>DMol3</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="SDF Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds list of generated SDF propeties. For genereated components this should be __MS_Generated_SDF_Properties,</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract Vibrational Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0ED898BB-A171-4B01-95D8-2E5473B1D8A1}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>990 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Extracts vibrational data from VAMP or DMol3 output</sci:value>
																<sci:value>Extracts vibrational data from the output file created by a VAMP or DMol3 calculation. The file URL must be contained in either the MSVAMP_TaskReport (for VAMP output) or MSDMol3_TaskReport (for DMol3 output) property on the input data record. If vibrational information is contained in the output file then frequencies and intensities are added to the data record as array properties. </sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Jul 26 13:07:08 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract Vibrational Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Clear Internal Data" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_Failed</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Clear Internal Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1B241797-6411-49AE-9CB1-2E8C2C0FC316}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>2190 -185</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Clears any internal data</sci:value>
																<sci:value>&lt;p&gt;Clears internal data such as internal properties and nodes.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.2.500</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jul 26 10:03:17 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Clear Internal Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1290 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="MS Mark As Failure" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Mark As Failure</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{5A9C91F6-BF88-425B-A04E-9915868E06F4}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1590 -275</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.18</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Mar 10 10:27:01 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\MS Mark As Failure</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1890 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="4" to="0" type="true"/>
													<sci:connectid from="4" to="5" type="false"/>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="0" to="5" type="false"/>
													<sci:connectid from="1" to="2" type="true"/>
													<sci:connectid from="1" to="5" type="false"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="5" type="false"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="6" to="7" type="true"/>
													<sci:connectid from="7" to="3" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>HashDestroy(@__OutputPropertiesTable);</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Cleanup</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -995</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>29</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Geometry Optimization (VAMP)" version="2">
											<sci:arg name="Maximum Force" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0.01 and 10&quot;);parameter() &gt;=  0.01 and parameter() &lt;= 10;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-4 and 1&quot;);parameter() &gt;=  1e-4 and parameter() &lt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.2</sci:value>
											</sci:arg>
											<sci:arg name="Generate Hessian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">Partial</sci:legalval>
												<sci:legalval>Exact</sci:legalval>
											</sci:arg>
											<sci:arg name="Optimize Internals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Energy" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
												<sci:member>Hamiltonian</sci:member>
												<sci:member>Multiplicity</sci:member>
												<sci:member>Spin State</sci:member>
												<sci:member>Charge</sci:member>
												<sci:member>Electronic</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Hamiltonian)</sci:value>
											</sci:arg>
											<sci:arg name="Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Multiplicity)</sci:value>
											</sci:arg>
											<sci:arg name="Spin State" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Spin State)</sci:value>
											</sci:arg>
											<sci:arg name="Charge" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between -10000 and 10000&quot;);parameter() &gt;=  -10000 and parameter() &lt;= 10000;</sci:validscript>
												<sci:value>$(Charge)</sci:value>
											</sci:arg>
											<sci:arg name="Electronic" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
												<sci:member>SCF</sci:member>
												<sci:member>CI Scheme</sci:member>
												<sci:member>Solvation Scheme</sci:member>
											</sci:arg>
											<sci:arg name="SCF" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
												<sci:member>Convergence Scheme</sci:member>
												<sci:member>SCF Tolerance</sci:member>
												<sci:member>Maximum SCF Cycles</sci:member>
											</sci:arg>
											<sci:arg name="Convergence Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:legalval>Standard</sci:legalval>
												<sci:legalval>Pulay</sci:legalval>
												<sci:legalval>IIS</sci:legalval>
												<sci:legalval selected="true">Pulay/IIS</sci:legalval>
											</sci:arg>
											<sci:arg name="SCF Tolerance" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-10 and 10&quot;);parameter() &gt;=  1e-10 and parameter() &lt;= 10;</sci:validscript>
												<sci:value>2e-4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum SCF Cycles" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 1000&quot;);parameter() &gt;=  1 and parameter() &lt;= 1000;</sci:validscript>
												<sci:value>500</sci:value>
											</sci:arg>
											<sci:arg name="CI Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>Number of Orbitals</sci:member>
												<sci:member>Requested Number of Virtual Orbitals</sci:member>
												<sci:member>Ignore Degenerate Orbitals</sci:member>
												<sci:member>Use Level Shifting</sci:member>
												<sci:member>Level Shift</sci:member>
												<sci:value>$(__CIScheme)</sci:value>
											</sci:arg>
											<sci:arg name="Number of Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 2&quot;);parameter() &gt;= 2;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Requested Number of Virtual Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1&quot;);parameter() &gt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Ignore Degenerate Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Use Level Shifting" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Level Shift" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 1000&quot;);parameter() &gt;=  0 and parameter() &lt;= 1000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Use Level Shifting&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Use Level Shifting&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Solvation Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>COSMO Solvent</sci:member>
												<sci:member>Dielectric Constant</sci:member>
												<sci:value>$(Solvation Scheme)</sci:value>
											</sci:arg>
											<sci:arg name="COSMO Solvent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(COSMO Solvent)</sci:value>
											</sci:arg>
											<sci:arg name="Dielectric Constant" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 10000&quot;);parameter() &gt;=  1 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;COSMO Solvent&quot;);
if (#tmpStr ne &quot;Customized&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;COSMO Solvent&apos; to &apos;Customized&apos;&quot;;
end if;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	if (#disableText ne &quot;&quot;) then #disableText .= &quot; and&quot;; end if;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(Dielectric Constant)</sci:value>
											</sci:arg>
											<sci:arg name="Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
												<sci:member>Vibrational Frequencies</sci:member>
												<sci:member>UV-Vis</sci:member>
												<sci:member>Localized Orbitals</sci:member>
												<sci:member>Propgen Descriptors</sci:member>
												<sci:member>Calculate Mulliken Charges</sci:member>
												<sci:member>Calculate ESP Charges</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Vibrational Frequencies" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
												<sci:member>Thermodynamics</sci:member>
												<sci:member>Minimum Temperature</sci:member>
												<sci:member>Maximum Temperature</sci:member>
												<sci:member>Temperature Step Size</sci:member>
												<sci:value>$(__Freq)</sci:value>
											</sci:arg>
											<sci:arg name="Thermodynamics" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Minimum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>700</sci:value>
											</sci:arg>
											<sci:arg name="Temperature Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 10 and 100&quot;);parameter() &gt;=  10 and parameter() &lt;= 100;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>50</sci:value>
											</sci:arg>
											<sci:arg name="UV-Vis" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;CI Scheme&quot;);
if (#tmpStr ne &quot;Full&quot; and #tmpStr ne &quot;CIS&quot; and #tmpStr ne &quot;CISD&quot; and #tmpStr ne &quot;PECI&quot; and #tmpStr ne &quot;Rumer CI&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;CI Scheme&apos; to &apos;Full&apos; or to &apos;CIS&apos; or to &apos;CISD&apos; or to &apos;PECI&apos; or to &apos;Rumer CI&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(__UVVis)</sci:value>
											</sci:arg>
											<sci:arg name="Localized Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Propgen Descriptors" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(__Propgen)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate Mulliken Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateMullikenCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate ESP Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateESPCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
												<sci:member>Settings File</sci:member>
												<sci:member>Keep Output Files</sci:member>
											</sci:arg>
											<sci:arg name="Settings File" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location of the settings file to use to override all other state parameters.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Output Files" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Specify whether to retain any results files from the server calculation. All files are stored in the location specified by the &lt;i&gt;Output Directory&lt;/i&gt;.&lt;/p&gt;</sci:help>
												<sci:member>Output Directory</sci:member>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Directory" type="DirectoryType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location where the files produced will be stored.&lt;/p&gt;&lt;/p&gt;To add files to an existing Materials Studio project set this to the project&apos;s &quot;Documents&quot; folder. If this is not specified results are stored in &lt;code&gt;$(JobDir)/Exports&lt;/code&gt;.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Keep Output Files&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Keep Output Files&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Refines the geometry of a structure to minimize its energy using VAMP</sci:value>
												<sci:value>&lt;p&gt;After a structure is built, it usually needs to be refined to bring it to a stable geometry. The refinement process is known as optimization, and is an iterative procedure in which the coordinates of the atoms are adjusted so that the energy of the structure is brought to a stationary point, i.e., one in which the forces on the atoms are zero.&lt;/p&gt;&lt;p&gt;You can request an energy minimization, a search for a relative minimum on the energy hypersurface. The geometry corresponding to this structure should have a close resemblance to an actual physical structure of the system at equilibrium. You can also perform an optimization on a transition state.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.0.0.14</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Nov 01 12:54:17 2012</sci:value>
											</sci:arg>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CALCULATORNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{FDBEAFBC-E7DD-4f77-9E91-A70DC304F57D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>990 -995</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>31</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Quantum Mechanics\Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>VAMP Calculation</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.9.0.30</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/coreutils</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Settings Mapper" version="2">
															<sci:arg name="CUT_HERE_MAPPER" type="StringType" required="false" visibility="visible" multi="false" uimpl="false"/>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="__MS_Module" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>VAMP</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Module_Task" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>GeometryOptimization</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Out_Document" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Structure</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Intermediate_Files" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>sdf</sci:value>
															</sci:arg>
															<sci:arg name="OrbitalEigenvectors" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Computes FrontierOrbitals.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="CreateEnergyEvolutionChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts of energy over the calculation and the change in energy and gradient norm over the calculation cycle.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_ForceConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Force</sci:value>
															</sci:arg>
															<sci:arg name="_MaximumDisplacement" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_GenerateHessian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Generate Hessian</sci:value>
															</sci:arg>
															<sci:arg name="_OptimizeInternals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
																<sci:value>Optimize Internals</sci:value>
															</sci:arg>
															<sci:arg name="_Energy" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Hamiltonian</sci:member>
																<sci:member>_Multiplicity</sci:member>
																<sci:member>_SpinPolarization</sci:member>
																<sci:member>_Charge</sci:member>
																<sci:member>_Electronic</sci:member>
																<sci:value>Energy</sci:value>
															</sci:arg>
															<sci:arg name="_Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Hamiltonian</sci:value>
															</sci:arg>
															<sci:arg name="_Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Multiplicity</sci:value>
															</sci:arg>
															<sci:arg name="_SpinPolarization" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Spin State</sci:value>
															</sci:arg>
															<sci:arg name="_Charge" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
																<sci:value>Charge</sci:value>
															</sci:arg>
															<sci:arg name="_Electronic" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
																<sci:member>_SCF</sci:member>
																<sci:member>_CIScheme</sci:member>
																<sci:member>_SolvationScheme</sci:member>
																<sci:value>Electronic</sci:value>
															</sci:arg>
															<sci:arg name="_SCF" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
																<sci:member>_ConvergenceScheme</sci:member>
																<sci:member>_SCFConvergence</sci:member>
																<sci:member>_MaxSCFCycles</sci:member>
																<sci:value>SCF</sci:value>
															</sci:arg>
															<sci:arg name="_ConvergenceScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Convergence Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_SCFConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>SCF Tolerance</sci:value>
															</sci:arg>
															<sci:arg name="_MaxSCFCycles" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
																<sci:value>Maximum SCF Cycles</sci:value>
															</sci:arg>
															<sci:arg name="_CIScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:member>_CINumOrbitals</sci:member>
																<sci:member>_CIRequestedNumVirtOrbitals</sci:member>
																<sci:member>_IgnoreDegenerateMOs</sci:member>
																<sci:member>_UseLevelShifting</sci:member>
																<sci:member>_LevelShift</sci:member>
																<sci:value>CI Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CINumOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Number of Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_CIRequestedNumVirtOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
																<sci:value>Requested Number of Virtual Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_IgnoreDegenerateMOs" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Ignore Degenerate Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_UseLevelShifting" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
																<sci:value>Use Level Shifting</sci:value>
															</sci:arg>
															<sci:arg name="_LevelShift" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
																<sci:value>Level Shift</sci:value>
															</sci:arg>
															<sci:arg name="_SolvationScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &quot;COSMO&quot; is not  available for  &lt;i&gt;Hamiltonian&lt;/i&gt; &quot;PM6&quot;.&lt;/p&gt;</sci:help>
																<sci:member>_CosmoSolvent</sci:member>
																<sci:member>_SolventDielectric</sci:member>
																<sci:value>Solvation Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CosmoSolvent" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>COSMO Solvent</sci:value>
															</sci:arg>
															<sci:arg name="_SolventDielectric" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
																<sci:value>Dielectric Constant</sci:value>
															</sci:arg>
															<sci:arg name="_Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Frequency</sci:member>
																<sci:member>_UV_VIS</sci:member>
																<sci:member>CreateUVChart</sci:member>
																<sci:member>_LocalizedOrbitals</sci:member>
																<sci:member>_Propgen</sci:member>
																<sci:member>_Mulliken</sci:member>
																<sci:member>_ESPcharges</sci:member>
																<sci:value>Properties</sci:value>
															</sci:arg>
															<sci:arg name="_Frequency" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
																<sci:member>_Thermodynamics</sci:member>
																<sci:member>CreateThermodynamicsChart</sci:member>
																<sci:member>_MinTemp</sci:member>
																<sci:member>_MaxTemp</sci:member>
																<sci:member>_StepTemp</sci:member>
																<sci:value>Vibrational Frequencies</sci:value>
															</sci:arg>
															<sci:arg name="_Thermodynamics" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
																<sci:value>Thermodynamics</sci:value>
															</sci:arg>
															<sci:arg name="CreateThermodynamicsChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts for enthalpy, entropy, and heat capacity as functions of temperature.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_MinTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Minimum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_MaxTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_StepTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Temperature Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_UV_VIS" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
																<sci:value>UV-Vis</sci:value>
															</sci:arg>
															<sci:arg name="CreateUVChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates a UV spectrum.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_LocalizedOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Localized Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_Propgen" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Propgen Descriptors</sci:value>
															</sci:arg>
															<sci:arg name="_Mulliken" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate Mulliken Charges</sci:value>
															</sci:arg>
															<sci:arg name="_ESPcharges" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate ESP Charges</sci:value>
															</sci:arg>
															<sci:arg name="_Advanced" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
																<sci:value>Advanced</sci:value>
															</sci:arg>
															<sci:arg name="PropertyMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>OrbitalEigenvectors,CreateEnergyEvolutionChart,_ForceConvergence,_MaximumDisplacement,_GenerateHessian,_OptimizeInternals,_Hamiltonian,_Multiplicity,_SpinPolarization,_Charge,_ConvergenceScheme,_SCFConvergence,_MaxSCFCycles,_CIScheme,_CINumOrbitals,_CIRequestedNumVirtOrbitals,_IgnoreDegenerateMOs,_UseLevelShifting,_LevelShift,_SolvationScheme,_CosmoSolvent,_SolventDielectric,_Frequency,_Thermodynamics,CreateThermodynamicsChart,_MinTemp,_MaxTemp,_StepTemp,_UV_VIS,CreateUVChart,_LocalizedOrbitals,_Propgen,_Mulliken,_ESPcharges</sci:value>
															</sci:arg>
															<sci:arg name="EnumValMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>COSMO Solvent=Carbon Tetrachloride;Carbon tetrachloride;Diethyl Ether;Diethyl ether;Dimethyl Sulfoxide;Dimethyl sulfoxide;Methylene Chloride;Methylene chloride;n-Hexane;n-hexane;n-Hexadecane;n-hexadecane,CI Scheme=Rumer CI;RumerCI</sci:value>
															</sci:arg>
															<sci:arg name="ParamDependencies" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>_CINumOrbitals,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_CIRequestedNumVirtOrbitals,Parameter(_CIScheme),Rumer CI,eq;_IgnoreDegenerateMOs,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_UseLevelShifting,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_LevelShift,Parameter(_UseLevelShifting),True,eq;_CosmoSolvent,Parameter(_SolvationScheme),COSMO,eq;_SolventDielectric,Parameter(_CosmoSolvent),Customized,eq,Parameter(_SolvationScheme),COSMO,eq,&amp;&amp;;_SolvationScheme,Parameter(_Hamiltonian),MNDO/C,eq,Parameter(_Hamiltonian),AM1*,eq,||,Parameter(_Hamiltonian),AM1,eq,||,Parameter(_Hamiltonian),PM3,eq,||,Parameter(_Hamiltonian),MNDO/d,eq,||,Parameter(_Hamiltonian),MNDO,eq,||;_Thermodynamics,Parameter(_Frequency),True,eq;CreateThermodynamicsChart,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MinTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MaxTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_StepTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_UV_VIS,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;CreateUVChart,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||,Parameter(_UV_VIS),True,eq,&amp;&amp;;Output Directory,Parameter(Keep Output Files),True,eq</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Outputs_Definition" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Task Report;Report;Convergence Criteria Met;Converged;Total Energy;TotalEnergy;Enthalpy;Enthalpy;Entropy;Entropy;Heat Capacity;HeatCapacity;Energy Chart;EnergyChart;Convergence Chart;ConvergenceChart;Thermodynamics Chart;Thermodynamics;UV-Vis Chart;UVVis;Structure;Structure;Trajectory;Trajectory</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Extra_Outputs_Def" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Electronic Energy;ELECTRONIC ENERGY;Repulsive Energy;REPULSIVE ENERGY;Ionization Potential;IONIZATION POTENTIAL;HOMO Energy;HOMO;LUMO Energy;LUMO;Heat Of Formation;HEAT OF FORMATION;Zero Point Energy;ZPE;Total Dipole;TOTAL DIPOL;Dipole Moment;DIPOL;Quadrupole Moment;QUADPOL;Octupole Moment;OCTUPOL;ESP Charge;VESPA;Mulliken Charge;MULLIKEN CHARGES;Coulson Charge;COULSON CHARGES;Atomic Densities HOMO;ATOMIC DENSITIES HOMO;Atomic Densities LUMO;ATOMIC DENSITIES LUMO;Mean Polarizability;MEANPOL;Molecular Point Group;POINT-GROUP;Surface Area;MOLAREA;Electronic Levels;ELECTRONIC LEVELS;Propgen Descriptors;PROPGEN DESCRIPTORS</sci:value>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Halt</sci:value>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{37392346-E16E-4C97-ADFC-FCF74F17C7CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jul 28 10:50:24 2011</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Settings Mapper</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Settings Mapper</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Exec Core" version="2">
															<sci:arg name="Task Execution" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Execution Script File</sci:member>
																<sci:member>Module Name</sci:member>
																<sci:member>Task Name</sci:member>
																<sci:member>Task Run Method</sci:member>
																<sci:member>Settings File</sci:member>
															</sci:arg>
															<sci:arg name="Execution Script File" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Name of the execution script file, without extension, to be used by this component. The script needs to be stored in apps/scitegic/materials/lang/perl/ComponentModules/Core/Impl directory. If parameter value is not specified a GenericExec script will be used by default, which is appropriate for components with the following characteristic:
&lt;ul&gt;
&lt;li&gt;component produces 1 output record for each input record (1 in - 1 out)&lt;/li&gt; 
&lt;li&gt;task doesn&apos;t require any special preparation&lt;/li&gt;
&lt;li&gt;task is executed like: Modules-&gt;$(Module Name)-&gt;$(Task Name)-&gt;$(Task Run Method)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>VampExec</sci:value>
															</sci:arg>
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="Task Name" type="ExpressionType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds task name, or task name in quotes, for ex: &quot;Dynamics&quot;. For generated components this should always be __MS_Module_Task.</sci:help>
																<sci:value>__MS_Module_Task</sci:value>
															</sci:arg>
															<sci:arg name="Task Run Method" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds name of a method called to execute a task, or method name in quotes, for ex: &quot;Pawley&quot;. If value is not specified, &apos;Run&apos; will be is used by default. For generated components with custom execution method, this should always be __MS_Module_Exec.</sci:help>
															</sci:arg>
															<sci:arg name="Settings File" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>URL of a settings file to be used instead of UI parameters. For generated components this should always be $(Settings File). If value is not specified, settings files won&apos;t be used.</sci:help>
																<sci:value>$(Settings File)</sci:value>
															</sci:arg>
															<sci:arg name="Export Result Files" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export result files produced by task run. For generated components this should always be $(Keep Output Files), when such parameter is exposed on their UI and blank otherwise. When parameter value doesn&apos;t evaluate to True the result files are only available in Project/Documents directory on the server.</sci:help>
																<sci:member>Export Intermediate Files</sci:member>
																<sci:member>Intermediate Files to Export</sci:member>
																<sci:member>Root Output Directory</sci:member>
																<sci:value>$(Keep Output Files)</sci:value>
															</sci:arg>
															<sci:arg name="Export Intermediate Files" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export intermediate files. For generated components which has appropriate UI parameter this should always be &lt;i&gt;$(Keep Intermediate Files)&lt;/i&gt;, and blank otherwise. If value is not specified &lt;i&gt;True&lt;/i&gt; is used by default, but intermediate files are only exported if Intermediate Files to Export list is not empty. No intermediate files are exported if Export Result Files doesn&apos;t evaluate to &lt;i&gt;True&lt;/i&gt;.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Intermediate Files to Export" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds semicolon separated list of file extensions to export, or list in quotes like: &quot;arc;grd;cosmo&quot;. No intermediate files will be exported if list is empty or Export Intermediate Files or Export Result Files doesn&apos;t evaluate to True. For generated components which need to keep intermediates, this shuld always be set to __MS_Intermediate_Files.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>__MS_Intermediate_Files</sci:value>
															</sci:arg>
															<sci:arg name="Root Output Directory" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>URL of root directory for result files export. If not specified this will be $(JobDir)/Exports/$(RunId). For generated components this should be set to &lt;i&gt;$(Output Directory)&lt;/i&gt; when such a parameter is exposed on their UI. The parameter is only used if Export Result Files evaluates to &lt;i&gt;True&lt;/i&gt;.
</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>$(Output Directory)</sci:value>
															</sci:arg>
															<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Properties to Produce</sci:member>
																<sci:member>Get Result Document from Keys</sci:member>
																<sci:member>Generated Properties</sci:member>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys which to be export as properties, or list in quotes, like: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, all result key-value pairs will be exported. For generated components the value should be set to &lt;i&gt;__MS_Outputs_Definition&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;
Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;. To block export of all result key-values, provide empty list, like &quot;&quot;.
</sci:help>
																<sci:value>__MS_Outputs_Definition</sci:value>
															</sci:arg>
															<sci:arg name="Get Result Document from Keys" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys to be scanned for document to attach to output data record, or list in quotes like: &quot;Key1; Key2&quot;. Document from first key found will be used. If value is not specified, &quot;Structure;Trajectory&quot; will be used by default. For generated components this should always be set to __MS_Out_Document.</sci:help>
																<sci:value>__MS_Out_Document</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_Output_Properties</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Exec Core</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Aug 09 10:07:06 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Exec Core</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>CALCULATORNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{A25EE466-7063-4655-964D-556DA80569AF}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>390 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Exec Core</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Subprotocol" version="2">
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Preparation</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																		<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.9.0.30</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/coreutils</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>8</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>__MS_DSD_NumProc := 1;

if @&apos;Number of Parallel Threads&apos; is defined And RMatch(@&apos;Number of Parallel Threads&apos;, &quot;^\\d+$&quot;) then
	__MS_DSD_NumProc := @&apos;Number of Parallel Threads&apos;;		
end if;

/* reduce number of cores if it exceeds CPUCoresTotal */
if __MS_CPUCoresTotal is defined And __MS_DSD_NumProc &gt; __MS_CPUCoresTotal then
	__MS_DSD_NumProc := __MS_CPUCoresTotal;
	WarningText := &quot;Requested number of parallel threads was reduced to &quot; + __MS_DSD_NumProc +
				 &quot; as it exceeded CPUCoresTotal defined in Pipeline Pilot Server Administration Portal.&quot;;
end if;
</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Preparation</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																				<sci:value>__MS_QueueType,__MS_DSD_NumProc,__MS_BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Set Environment Variables</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>SUBPROTOCOLNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>378 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.48</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																						<sci:value>__MS_DSD_NumProc</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>MPI Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>9</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_QueueType)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_DSD_NumProc)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_QueueType is defined then
	@__MS_QueueType := __MS_QueueType;
end if;

__MS_QueueType is defined
</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Queued?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>666 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1 then
	@__MS_DSD_NumProc := __MS_DSD_NumProc;
end if;

__MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>MPI Run?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>4</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -820</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>5</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:connectid from="1" to="2" type="true"/>
																					<sci:connectid from="2" to="0" type="true"/>
																					<sci:connectid from="2" to="4" type="false"/>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="5" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>License Wait Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>378 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>10</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_BIOVIA_LIC_WAIT_TIMEOUT)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set Environment Variable</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot; then
	@__MS_BIOVIA_LIC_WAIT_TIMEOUT := __MS_BIOVIA_LIC_WAIT_TIMEOUT;
end if;

__MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot;

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Use License Wait?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.PropertyFunctions.1">
																						<sci:component name="No-op" version="2">
																							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																								<sci:legalval selected="true">LeaveData</sci:legalval>
																								<sci:legalval>ClearData</sci:legalval>
																								<sci:legalval>DeleteData</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the action to perform</sci:help>
																								<sci:value>PassDataToPort</sci:value>
																							</sci:arg>
																							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the port to pass data to</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>No-op</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Evaluate Expression</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>None</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>6.0.1.1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>6</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
																							</sci:arg>
																						</sci:component>
																					</sci:data>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="6" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:connectid from="9" to="10" type="true"/>
																		</sci:protocol>
																	</sci:data>
																	<sci:connectid from="2" to="1" type="true"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Perl MaterialsScript (on Server)" version="2">
																	<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;MaterialsScript (Perl) script to execute.  The component provides &lt;i&gt;templated&lt;/i&gt; script, which must be replaced.&lt;/p&gt;

&lt;p&gt;Any Pipeline Pilot Perl (on Server) component must execute the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;In addition, a MaterialsScript component provides a method GetMaterialsDocument($data) which can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt;
</sci:help>
																		<sci:value>use ComponentModules::Core::CoreExecute;</sci:value>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:value>25</sci:value>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>For internal use only.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Comment</sci:help>
																		<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Usage</sci:help>
																		<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Execute &amp; generate properties</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol ShowComment</sci:help>
																		<sci:value>true</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Add Protocol Comment Here</sci:help>
																		<sci:value>Add Protocol Comment Here</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>SubProtocol</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>390 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Executes MaterialsScript for each record</sci:value>
																		<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Unprocessed data records</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>8.4.5.24</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Make Shortcut by Default</sci:legalval>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/materials</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>6</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Container Connection" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="WebExports" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;p/&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval>ComponentTakesInput</sci:legalval>
																				<sci:legalval>ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="MaterialsSystem" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>For internal use only.</sci:help>
																				<sci:value>$(MaterialsSystem)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>EmptyProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/materials</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue Mar 22 15:31:46 2011</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>A top-level component for building protocols.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>The user should customize this description and usage to describe 
the functioning of their derived protocol.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Container Connection</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>ComponentNode</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{08334F2A-00CB-4A37-503F-8483A2E5178D}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Manage connections to the Materials Studio container</sci:value>
																				<sci:value>This is an internal component, used by other components in the Materials Collection.  It shouldn&apos;t be used on its own.</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>8.4.5.20</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Made Link Into Copy</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Modified</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Materials\Utilities\Internals\MatServer\Container Connection</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol/>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																				<sci:member>Parallel Processing Options Batch Size</sci:member>
																				<sci:member>Parallel Processing Options Server</sci:member>
																				<sci:member>Parallel Processing Options Preserve Order</sci:member>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:value>25</sci:value>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																				<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																				<sci:member>Parallel Processing Options Server Processes</sci:member>
																				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Subprotocol 1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>COMPONENTNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -455</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>6.1.0.21</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/core</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue May 01 14:06:30 2007</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.ComponentPerlPlugin.1">
																				<sci:component name="Perl (on Server)" version="2">
																					<sci:arg name="Script" type="StringType" required="true" visibility="visible" multi="false">
																						<sci:help>&lt;p&gt;Perl script to execute.  Pipeline Pilot executes the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The usual Perl scoping rules apply to variables.  To pass a variable between the three required subroutines use package level variables, e.g., &lt;code&gt;$::variable&lt;/code&gt; or &lt;code&gt;my $variable&lt;/code&gt; declared outside the subroutines.
&lt;/p&gt;

&lt;p&gt;
The &lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onFinalize&lt;/i&gt; subroutines both receive the &lt;code&gt;pilot::Context Perl&lt;/code&gt; object as the only argument.  The &lt;i&gt;onProcess&lt;/i&gt; subroutine receives the &lt;code&gt;pilot::Context&lt;/code&gt; and &lt;code&gt;pilot::DataRecord&lt;/code&gt; Perl objects as its two arguments.
&lt;/p&gt;

&lt;p&gt;
pilot::Context provides access to globals and parameters.  A common way to get these is via a Perl hash reference.  For example, to get a &lt;i&gt;Source&lt;/i&gt; parameter value use
&lt;/p&gt;

&lt;pre&gt;
my $parametersHashRef = $context-&gt;getComponentParameters()-&gt;getHashRef();
my $source = $parametersHashRef-&gt;{&quot;Source&quot;};
&lt;/pre&gt;

&lt;p&gt;
To obtain the value of a global property called &lt;i&gt;Old&lt;/i&gt; and set a new global property called &lt;i&gt;New&lt;/i&gt; use
&lt;/p&gt;

&lt;pre&gt;
my $globalsHashRef = $context-&gt;getGlobalProperties()-&gt;getHashRef();
my $value = $globalsHashRef-&gt;{&quot;Old&quot;};
$globalsHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
Top level properties in a data record are accessed similarly.
&lt;/p&gt;

&lt;pre&gt;
my $node = $data-&gt;getRoot();
my $propertiesHashRef = $node-&gt;getProperties()-&gt;getHashRef();
my $value = $propertiesHashRef-&gt;{&quot;Old&quot;};
$propertiesHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must return one of the following component state values:
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
To explicitly route a data record to a port use
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::PassPort);
&lt;/pre&gt;

&lt;p&gt;
or
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::FailPort);
&lt;/pre&gt;

&lt;p&gt;
Data records can also be terminated internally by routing to &lt;code&gt;$pilot::NoPort&lt;/code&gt;.
&lt;/p&gt;</sci:help>
																						<sci:value>$(Script)</sci:value>
																					</sci:arg>
																					<sci:arg name="Use Package" type="StringType" required="false" visibility="visible" multi="false" implbase="{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}">
																						<sci:help>The name of an application package that contains Perl modules referenced by this component. By defining this package name, a package-specific module may be referenced with the &apos;use modulename;&apos; syntax.</sci:help>
																						<sci:value>scitegic/materials</sci:value>
																					</sci:arg>
																					<sci:arg name="Rebuild In RTC" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;
The Perl component functions by creating an instance of a Perl interpreter and
passing the supplied Perl script to the interpreter for execution. The
creation of the Perl interpreter occurs one time, while script execution
occurs once for initialization and finalization subroutines and once 
for each data record processed by the component.
&lt;/p&gt;
&lt;p&gt;
However, in the context of a Run To Completion (RTC) subprtocols, the Perl 
component would normally be re-instantiated for each data record, 
in common with other components in an RTC subprotocol. This implies the
re-creation of the Perl interpreter for each data record, which can be
relatively time consuming, particularly for Perl scripts which
themselves perform a rapid operation per data record.
&lt;/p&gt;
&lt;p&gt;
So, to avoid significant differences in performance timings between RTC
and non-RTC contexts, the Perl component&apos;s default behavior is to &lt;i&gt;keep&lt;/i&gt;
the same instance of the Perl interpreter throughout its life cycle. This
is indicated by the False setting of the &lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
However, there are some circumstances where Perl script or 3rd party modules
are not written in a way that allows them to safely re-use the same interpreter in this way. So if you see unexpected behavior from a Perl
component in a Run To Completion subprotocol, switch the &lt;em&gt;Rebuild In RTC&lt;/em&gt;
parameter to True to see if that resolves the issue.
&lt;/p&gt;
&lt;p&gt;
If that fixes the problem, and the Perl cannot be re-cast to 
handle the persistent interpreter,
you may need to trade performance for stability.
&lt;/p&gt;</sci:help>
																						<sci:legalval>True</sci:legalval>
																						<sci:legalval selected="true">False</sci:legalval>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/integration</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Fri Feb 05 11:55:51 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Perl (on Server)</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>COMPONENTNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The component this component is based upon.</sci:help>
																						<sci:value>Plug In</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Executes Perl code on the server</sci:value>
																						<sci:value>&lt;p&gt;Allows a Perl script to manipulate a data record&apos;s property list, the global
property list, and component behavior. The &lt;em&gt;Script&lt;/em&gt; parameter contains
the script that implements the component behavior, encoded in Perl. The following
subroutines must be defined in this text parameter (all three methods need to
be declared in the main scope): &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;onInitialize: &lt;/em&gt;Invoked once before the any data records
    arrive. This method receives one argument, a pilot::Context object. Also,
    it must return a component state, one of $pilot::ReadyForInputData, $pilot::DoneProcessingData, $pilot::ReadyForNewData or $pilot::ReadyForInputThenNewData. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onProcess&lt;/em&gt;: Called once per data record. This method
    receives two arguments, a pilot::Context and a pilot::DataRecord object and
    return a component state. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onFinalize&lt;/em&gt;: Called when no more data records are available.
    This method receives one argument, a pilot::Context object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must
return one of the following component state values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Any script outside of the subroutines is executed just prior to calling
    onInitialize.&lt;/li&gt;
	&lt;li&gt;The optional &lt;em&gt;Use Package&lt;/em&gt; parameter is used to identify a package
      that holds one or more Perl modules that are referenced by the component.
      In this way, much or all of a component&apos;s functionality can be maintained
      in a package module. This facilitates component upgrading, by centralizing
    the code.&lt;/li&gt;
    &lt;li&gt;The Perl include path for the library must be declared in the package.conf
      file for the named package.&lt;/li&gt;
    &lt;li&gt;Perl&apos;s &lt;em&gt;strict&lt;/em&gt; and &lt;em&gt;warnings&lt;/em&gt; directives can be very useful
      when writing scripts. To detect warnings, you need to create a handler
      to manage them, since by default, Perl sends them to STDERR, which is not
    easily accessible from within Pipeline Pilot. 
	&lt;p&gt;For example, the following
    script treats warnings as errors:&lt;/p&gt;
	&lt;p&gt;&lt;code&gt;use warnings;&lt;br /&gt;
	$SIG{__WARN__} = sub {die @_;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt; If you see unexpected or erroneous behavior when using this component
in a Run To Completion subprotocol, please look at the help text for the
&lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter, which is in the Implementation tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>6.0.1.4</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The original path within the database of this component.</sci:help>
																						<sci:value>Components\Database and Application Integration\Application Integration\Programmatic Integration\Perl (on Server)</sci:value>
																					</sci:arg>
																				</sci:component>
																			</sci:data>
																		</sci:protocol>
																	</sci:data>
																	<sci:version iVal="1"/>
																</sci:protocol>
															</sci:data>
															<sci:connectid from="8" to="6" type="true"/>
															<sci:version iVal="2"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract SD properties" version="2">
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="SDF Document Property" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds SDF document URL, for ex: __MS_SDF_URL.</sci:help>
																<sci:value>__MS_SDF_URL</sci:value>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of SDF attributes to be export as properties, or list in quotes, for ex: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, no properties will be exported. For generated components the value should be set to __MS_Extra_Outputs_Def. Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;.
</sci:help>
																<sci:value>__MS_Extra_Outputs_Def</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_SDProperties, __MS_SDFDocumentName,__IsSDFPresent</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract SD properties</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8BF08A69-552B-4A5B-9007-7C9C7BF1ED68}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>690 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 27 10:36:46 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract SD properties</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract Vibrational Data" version="2">
															<sci:arg name="Output Type" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of output file from which vibrational mode information will be extracted.</sci:help>
																<sci:legalval selected="true">VAMP</sci:legalval>
																<sci:legalval>DMol3</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="SDF Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds list of generated SDF propeties. For genereated components this should be __MS_Generated_SDF_Properties,</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract Vibrational Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0ED898BB-A171-4B01-95D8-2E5473B1D8A1}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>990 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Extracts vibrational data from VAMP or DMol3 output</sci:value>
																<sci:value>Extracts vibrational data from the output file created by a VAMP or DMol3 calculation. The file URL must be contained in either the MSVAMP_TaskReport (for VAMP output) or MSDMol3_TaskReport (for DMol3 output) property on the input data record. If vibrational information is contained in the output file then frequencies and intensities are added to the data record as array properties. </sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Jul 26 13:07:08 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract Vibrational Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Clear Internal Data" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_Failed</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Clear Internal Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1B241797-6411-49AE-9CB1-2E8C2C0FC316}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>2190 -185</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Clears any internal data</sci:value>
																<sci:value>&lt;p&gt;Clears internal data such as internal properties and nodes.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.2.500</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jul 26 10:03:17 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Clear Internal Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1290 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="MS Mark As Failure" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Mark As Failure</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{5A9C91F6-BF88-425B-A04E-9915868E06F4}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1590 -275</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.18</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Mar 10 10:27:01 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\MS Mark As Failure</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1890 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="4" to="0" type="true"/>
													<sci:connectid from="4" to="5" type="false"/>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="0" to="5" type="false"/>
													<sci:connectid from="1" to="2" type="true"/>
													<sci:connectid from="1" to="5" type="false"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="5" type="false"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="6" to="7" type="true"/>
													<sci:connectid from="7" to="3" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>__MS_Failed := 1;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Mark as Failed</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2490 -1085</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>27</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Geometry Optimization (VAMP)" version="2">
											<sci:arg name="Maximum Force" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0.01 and 10&quot;);parameter() &gt;=  0.01 and parameter() &lt;= 10;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-4 and 1&quot;);parameter() &gt;=  1e-4 and parameter() &lt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.2</sci:value>
											</sci:arg>
											<sci:arg name="Generate Hessian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">Partial</sci:legalval>
												<sci:legalval>Exact</sci:legalval>
											</sci:arg>
											<sci:arg name="Optimize Internals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Energy" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
												<sci:member>Hamiltonian</sci:member>
												<sci:member>Multiplicity</sci:member>
												<sci:member>Spin State</sci:member>
												<sci:member>Charge</sci:member>
												<sci:member>Electronic</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Hamiltonian)</sci:value>
											</sci:arg>
											<sci:arg name="Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Multiplicity)</sci:value>
											</sci:arg>
											<sci:arg name="Spin State" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>RHF</sci:value>
											</sci:arg>
											<sci:arg name="Charge" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between -10000 and 10000&quot;);parameter() &gt;=  -10000 and parameter() &lt;= 10000;</sci:validscript>
												<sci:value>$(Charge)</sci:value>
											</sci:arg>
											<sci:arg name="Electronic" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
												<sci:member>SCF</sci:member>
												<sci:member>CI Scheme</sci:member>
												<sci:member>Solvation Scheme</sci:member>
											</sci:arg>
											<sci:arg name="SCF" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
												<sci:member>Convergence Scheme</sci:member>
												<sci:member>SCF Tolerance</sci:member>
												<sci:member>Maximum SCF Cycles</sci:member>
											</sci:arg>
											<sci:arg name="Convergence Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:legalval>Standard</sci:legalval>
												<sci:legalval>Pulay</sci:legalval>
												<sci:legalval>IIS</sci:legalval>
												<sci:legalval selected="true">Pulay/IIS</sci:legalval>
											</sci:arg>
											<sci:arg name="SCF Tolerance" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-10 and 10&quot;);parameter() &gt;=  1e-10 and parameter() &lt;= 10;</sci:validscript>
												<sci:value>2e-4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum SCF Cycles" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 1000&quot;);parameter() &gt;=  1 and parameter() &lt;= 1000;</sci:validscript>
												<sci:value>750</sci:value>
											</sci:arg>
											<sci:arg name="CI Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>Number of Orbitals</sci:member>
												<sci:member>Requested Number of Virtual Orbitals</sci:member>
												<sci:member>Ignore Degenerate Orbitals</sci:member>
												<sci:member>Use Level Shifting</sci:member>
												<sci:member>Level Shift</sci:member>
												<sci:value>$(__CIScheme)</sci:value>
											</sci:arg>
											<sci:arg name="Number of Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 2&quot;);parameter() &gt;= 2;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Requested Number of Virtual Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1&quot;);parameter() &gt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Ignore Degenerate Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Use Level Shifting" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Level Shift" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 1000&quot;);parameter() &gt;=  0 and parameter() &lt;= 1000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Use Level Shifting&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Use Level Shifting&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Solvation Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>COSMO Solvent</sci:member>
												<sci:member>Dielectric Constant</sci:member>
												<sci:value>$(Solvation Scheme)</sci:value>
											</sci:arg>
											<sci:arg name="COSMO Solvent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(COSMO Solvent)</sci:value>
											</sci:arg>
											<sci:arg name="Dielectric Constant" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 10000&quot;);parameter() &gt;=  1 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;COSMO Solvent&quot;);
if (#tmpStr ne &quot;Customized&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;COSMO Solvent&apos; to &apos;Customized&apos;&quot;;
end if;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	if (#disableText ne &quot;&quot;) then #disableText .= &quot; and&quot;; end if;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(Dielectric Constant)</sci:value>
											</sci:arg>
											<sci:arg name="Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
												<sci:member>Vibrational Frequencies</sci:member>
												<sci:member>UV-Vis</sci:member>
												<sci:member>Localized Orbitals</sci:member>
												<sci:member>Propgen Descriptors</sci:member>
												<sci:member>Calculate Mulliken Charges</sci:member>
												<sci:member>Calculate ESP Charges</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Vibrational Frequencies" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
												<sci:member>Thermodynamics</sci:member>
												<sci:member>Minimum Temperature</sci:member>
												<sci:member>Maximum Temperature</sci:member>
												<sci:member>Temperature Step Size</sci:member>
												<sci:value>$(__Freq)</sci:value>
											</sci:arg>
											<sci:arg name="Thermodynamics" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Minimum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>700</sci:value>
											</sci:arg>
											<sci:arg name="Temperature Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 10 and 100&quot;);parameter() &gt;=  10 and parameter() &lt;= 100;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>50</sci:value>
											</sci:arg>
											<sci:arg name="UV-Vis" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;CI Scheme&quot;);
if (#tmpStr ne &quot;Full&quot; and #tmpStr ne &quot;CIS&quot; and #tmpStr ne &quot;CISD&quot; and #tmpStr ne &quot;PECI&quot; and #tmpStr ne &quot;Rumer CI&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;CI Scheme&apos; to &apos;Full&apos; or to &apos;CIS&apos; or to &apos;CISD&apos; or to &apos;PECI&apos; or to &apos;Rumer CI&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(__UVVis)</sci:value>
											</sci:arg>
											<sci:arg name="Localized Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Propgen Descriptors" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(__Propgen)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate Mulliken Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateMullikenCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate ESP Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateESPCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
												<sci:member>Settings File</sci:member>
												<sci:member>Keep Output Files</sci:member>
											</sci:arg>
											<sci:arg name="Settings File" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location of the settings file to use to override all other state parameters.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Output Files" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Specify whether to retain any results files from the server calculation. All files are stored in the location specified by the &lt;i&gt;Output Directory&lt;/i&gt;.&lt;/p&gt;</sci:help>
												<sci:member>Output Directory</sci:member>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Directory" type="DirectoryType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location where the files produced will be stored.&lt;/p&gt;&lt;/p&gt;To add files to an existing Materials Studio project set this to the project&apos;s &quot;Documents&quot; folder. If this is not specified results are stored in &lt;code&gt;$(JobDir)/Exports&lt;/code&gt;.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Keep Output Files&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Keep Output Files&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Refines the geometry of a structure to minimize its energy using VAMP</sci:value>
												<sci:value>&lt;p&gt;After a structure is built, it usually needs to be refined to bring it to a stable geometry. The refinement process is known as optimization, and is an iterative procedure in which the coordinates of the atoms are adjusted so that the energy of the structure is brought to a stationary point, i.e., one in which the forces on the atoms are zero.&lt;/p&gt;&lt;p&gt;You can request an energy minimization, a search for a relative minimum on the energy hypersurface. The geometry corresponding to this structure should have a close resemblance to an actual physical structure of the system at equilibrium. You can also perform an optimization on a transition state.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.0.0.14</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Nov 01 12:54:17 2012</sci:value>
											</sci:arg>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CALCULATORNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{FDBEAFBC-E7DD-4f77-9E91-A70DC304F57D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1290 -1175</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>30</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Quantum Mechanics\Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>VAMP Calculation</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.9.0.30</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/coreutils</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Settings Mapper" version="2">
															<sci:arg name="CUT_HERE_MAPPER" type="StringType" required="false" visibility="visible" multi="false" uimpl="false"/>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="__MS_Module" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>VAMP</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Module_Task" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>GeometryOptimization</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Out_Document" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Structure</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Intermediate_Files" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>sdf</sci:value>
															</sci:arg>
															<sci:arg name="OrbitalEigenvectors" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Computes FrontierOrbitals.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="CreateEnergyEvolutionChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts of energy over the calculation and the change in energy and gradient norm over the calculation cycle.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_ForceConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Force</sci:value>
															</sci:arg>
															<sci:arg name="_MaximumDisplacement" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_GenerateHessian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Generate Hessian</sci:value>
															</sci:arg>
															<sci:arg name="_OptimizeInternals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
																<sci:value>Optimize Internals</sci:value>
															</sci:arg>
															<sci:arg name="_Energy" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Hamiltonian</sci:member>
																<sci:member>_Multiplicity</sci:member>
																<sci:member>_SpinPolarization</sci:member>
																<sci:member>_Charge</sci:member>
																<sci:member>_Electronic</sci:member>
																<sci:value>Energy</sci:value>
															</sci:arg>
															<sci:arg name="_Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Hamiltonian</sci:value>
															</sci:arg>
															<sci:arg name="_Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Multiplicity</sci:value>
															</sci:arg>
															<sci:arg name="_SpinPolarization" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Spin State</sci:value>
															</sci:arg>
															<sci:arg name="_Charge" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
																<sci:value>Charge</sci:value>
															</sci:arg>
															<sci:arg name="_Electronic" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
																<sci:member>_SCF</sci:member>
																<sci:member>_CIScheme</sci:member>
																<sci:member>_SolvationScheme</sci:member>
																<sci:value>Electronic</sci:value>
															</sci:arg>
															<sci:arg name="_SCF" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
																<sci:member>_ConvergenceScheme</sci:member>
																<sci:member>_SCFConvergence</sci:member>
																<sci:member>_MaxSCFCycles</sci:member>
																<sci:value>SCF</sci:value>
															</sci:arg>
															<sci:arg name="_ConvergenceScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Convergence Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_SCFConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>SCF Tolerance</sci:value>
															</sci:arg>
															<sci:arg name="_MaxSCFCycles" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
																<sci:value>Maximum SCF Cycles</sci:value>
															</sci:arg>
															<sci:arg name="_CIScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:member>_CINumOrbitals</sci:member>
																<sci:member>_CIRequestedNumVirtOrbitals</sci:member>
																<sci:member>_IgnoreDegenerateMOs</sci:member>
																<sci:member>_UseLevelShifting</sci:member>
																<sci:member>_LevelShift</sci:member>
																<sci:value>CI Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CINumOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Number of Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_CIRequestedNumVirtOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
																<sci:value>Requested Number of Virtual Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_IgnoreDegenerateMOs" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Ignore Degenerate Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_UseLevelShifting" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
																<sci:value>Use Level Shifting</sci:value>
															</sci:arg>
															<sci:arg name="_LevelShift" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
																<sci:value>Level Shift</sci:value>
															</sci:arg>
															<sci:arg name="_SolvationScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &quot;COSMO&quot; is not  available for  &lt;i&gt;Hamiltonian&lt;/i&gt; &quot;PM6&quot;.&lt;/p&gt;</sci:help>
																<sci:member>_CosmoSolvent</sci:member>
																<sci:member>_SolventDielectric</sci:member>
																<sci:value>Solvation Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CosmoSolvent" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>COSMO Solvent</sci:value>
															</sci:arg>
															<sci:arg name="_SolventDielectric" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
																<sci:value>Dielectric Constant</sci:value>
															</sci:arg>
															<sci:arg name="_Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Frequency</sci:member>
																<sci:member>_UV_VIS</sci:member>
																<sci:member>CreateUVChart</sci:member>
																<sci:member>_LocalizedOrbitals</sci:member>
																<sci:member>_Propgen</sci:member>
																<sci:member>_Mulliken</sci:member>
																<sci:member>_ESPcharges</sci:member>
																<sci:value>Properties</sci:value>
															</sci:arg>
															<sci:arg name="_Frequency" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
																<sci:member>_Thermodynamics</sci:member>
																<sci:member>CreateThermodynamicsChart</sci:member>
																<sci:member>_MinTemp</sci:member>
																<sci:member>_MaxTemp</sci:member>
																<sci:member>_StepTemp</sci:member>
																<sci:value>Vibrational Frequencies</sci:value>
															</sci:arg>
															<sci:arg name="_Thermodynamics" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
																<sci:value>Thermodynamics</sci:value>
															</sci:arg>
															<sci:arg name="CreateThermodynamicsChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts for enthalpy, entropy, and heat capacity as functions of temperature.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_MinTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Minimum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_MaxTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_StepTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Temperature Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_UV_VIS" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
																<sci:value>UV-Vis</sci:value>
															</sci:arg>
															<sci:arg name="CreateUVChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates a UV spectrum.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_LocalizedOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Localized Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_Propgen" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Propgen Descriptors</sci:value>
															</sci:arg>
															<sci:arg name="_Mulliken" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate Mulliken Charges</sci:value>
															</sci:arg>
															<sci:arg name="_ESPcharges" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate ESP Charges</sci:value>
															</sci:arg>
															<sci:arg name="_Advanced" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
																<sci:value>Advanced</sci:value>
															</sci:arg>
															<sci:arg name="PropertyMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>OrbitalEigenvectors,CreateEnergyEvolutionChart,_ForceConvergence,_MaximumDisplacement,_GenerateHessian,_OptimizeInternals,_Hamiltonian,_Multiplicity,_SpinPolarization,_Charge,_ConvergenceScheme,_SCFConvergence,_MaxSCFCycles,_CIScheme,_CINumOrbitals,_CIRequestedNumVirtOrbitals,_IgnoreDegenerateMOs,_UseLevelShifting,_LevelShift,_SolvationScheme,_CosmoSolvent,_SolventDielectric,_Frequency,_Thermodynamics,CreateThermodynamicsChart,_MinTemp,_MaxTemp,_StepTemp,_UV_VIS,CreateUVChart,_LocalizedOrbitals,_Propgen,_Mulliken,_ESPcharges</sci:value>
															</sci:arg>
															<sci:arg name="EnumValMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>COSMO Solvent=Carbon Tetrachloride;Carbon tetrachloride;Diethyl Ether;Diethyl ether;Dimethyl Sulfoxide;Dimethyl sulfoxide;Methylene Chloride;Methylene chloride;n-Hexane;n-hexane;n-Hexadecane;n-hexadecane,CI Scheme=Rumer CI;RumerCI</sci:value>
															</sci:arg>
															<sci:arg name="ParamDependencies" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>_CINumOrbitals,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_CIRequestedNumVirtOrbitals,Parameter(_CIScheme),Rumer CI,eq;_IgnoreDegenerateMOs,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_UseLevelShifting,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_LevelShift,Parameter(_UseLevelShifting),True,eq;_CosmoSolvent,Parameter(_SolvationScheme),COSMO,eq;_SolventDielectric,Parameter(_CosmoSolvent),Customized,eq,Parameter(_SolvationScheme),COSMO,eq,&amp;&amp;;_SolvationScheme,Parameter(_Hamiltonian),MNDO/C,eq,Parameter(_Hamiltonian),AM1*,eq,||,Parameter(_Hamiltonian),AM1,eq,||,Parameter(_Hamiltonian),PM3,eq,||,Parameter(_Hamiltonian),MNDO/d,eq,||,Parameter(_Hamiltonian),MNDO,eq,||;_Thermodynamics,Parameter(_Frequency),True,eq;CreateThermodynamicsChart,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MinTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MaxTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_StepTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_UV_VIS,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;CreateUVChart,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||,Parameter(_UV_VIS),True,eq,&amp;&amp;;Output Directory,Parameter(Keep Output Files),True,eq</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Outputs_Definition" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Task Report;Report;Convergence Criteria Met;Converged;Total Energy;TotalEnergy;Enthalpy;Enthalpy;Entropy;Entropy;Heat Capacity;HeatCapacity;Energy Chart;EnergyChart;Convergence Chart;ConvergenceChart;Thermodynamics Chart;Thermodynamics;UV-Vis Chart;UVVis;Structure;Structure;Trajectory;Trajectory</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Extra_Outputs_Def" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Electronic Energy;ELECTRONIC ENERGY;Repulsive Energy;REPULSIVE ENERGY;Ionization Potential;IONIZATION POTENTIAL;HOMO Energy;HOMO;LUMO Energy;LUMO;Heat Of Formation;HEAT OF FORMATION;Zero Point Energy;ZPE;Total Dipole;TOTAL DIPOL;Dipole Moment;DIPOL;Quadrupole Moment;QUADPOL;Octupole Moment;OCTUPOL;ESP Charge;VESPA;Mulliken Charge;MULLIKEN CHARGES;Coulson Charge;COULSON CHARGES;Atomic Densities HOMO;ATOMIC DENSITIES HOMO;Atomic Densities LUMO;ATOMIC DENSITIES LUMO;Mean Polarizability;MEANPOL;Molecular Point Group;POINT-GROUP;Surface Area;MOLAREA;Electronic Levels;ELECTRONIC LEVELS;Propgen Descriptors;PROPGEN DESCRIPTORS</sci:value>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Halt</sci:value>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{37392346-E16E-4C97-ADFC-FCF74F17C7CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jul 28 10:50:24 2011</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Settings Mapper</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Settings Mapper</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Exec Core" version="2">
															<sci:arg name="Task Execution" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Execution Script File</sci:member>
																<sci:member>Module Name</sci:member>
																<sci:member>Task Name</sci:member>
																<sci:member>Task Run Method</sci:member>
																<sci:member>Settings File</sci:member>
															</sci:arg>
															<sci:arg name="Execution Script File" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Name of the execution script file, without extension, to be used by this component. The script needs to be stored in apps/scitegic/materials/lang/perl/ComponentModules/Core/Impl directory. If parameter value is not specified a GenericExec script will be used by default, which is appropriate for components with the following characteristic:
&lt;ul&gt;
&lt;li&gt;component produces 1 output record for each input record (1 in - 1 out)&lt;/li&gt; 
&lt;li&gt;task doesn&apos;t require any special preparation&lt;/li&gt;
&lt;li&gt;task is executed like: Modules-&gt;$(Module Name)-&gt;$(Task Name)-&gt;$(Task Run Method)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>VampExec</sci:value>
															</sci:arg>
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="Task Name" type="ExpressionType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds task name, or task name in quotes, for ex: &quot;Dynamics&quot;. For generated components this should always be __MS_Module_Task.</sci:help>
																<sci:value>__MS_Module_Task</sci:value>
															</sci:arg>
															<sci:arg name="Task Run Method" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds name of a method called to execute a task, or method name in quotes, for ex: &quot;Pawley&quot;. If value is not specified, &apos;Run&apos; will be is used by default. For generated components with custom execution method, this should always be __MS_Module_Exec.</sci:help>
															</sci:arg>
															<sci:arg name="Settings File" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>URL of a settings file to be used instead of UI parameters. For generated components this should always be $(Settings File). If value is not specified, settings files won&apos;t be used.</sci:help>
																<sci:value>$(Settings File)</sci:value>
															</sci:arg>
															<sci:arg name="Export Result Files" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export result files produced by task run. For generated components this should always be $(Keep Output Files), when such parameter is exposed on their UI and blank otherwise. When parameter value doesn&apos;t evaluate to True the result files are only available in Project/Documents directory on the server.</sci:help>
																<sci:member>Export Intermediate Files</sci:member>
																<sci:member>Intermediate Files to Export</sci:member>
																<sci:member>Root Output Directory</sci:member>
																<sci:value>$(Keep Output Files)</sci:value>
															</sci:arg>
															<sci:arg name="Export Intermediate Files" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export intermediate files. For generated components which has appropriate UI parameter this should always be &lt;i&gt;$(Keep Intermediate Files)&lt;/i&gt;, and blank otherwise. If value is not specified &lt;i&gt;True&lt;/i&gt; is used by default, but intermediate files are only exported if Intermediate Files to Export list is not empty. No intermediate files are exported if Export Result Files doesn&apos;t evaluate to &lt;i&gt;True&lt;/i&gt;.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Intermediate Files to Export" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds semicolon separated list of file extensions to export, or list in quotes like: &quot;arc;grd;cosmo&quot;. No intermediate files will be exported if list is empty or Export Intermediate Files or Export Result Files doesn&apos;t evaluate to True. For generated components which need to keep intermediates, this shuld always be set to __MS_Intermediate_Files.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>__MS_Intermediate_Files</sci:value>
															</sci:arg>
															<sci:arg name="Root Output Directory" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>URL of root directory for result files export. If not specified this will be $(JobDir)/Exports/$(RunId). For generated components this should be set to &lt;i&gt;$(Output Directory)&lt;/i&gt; when such a parameter is exposed on their UI. The parameter is only used if Export Result Files evaluates to &lt;i&gt;True&lt;/i&gt;.
</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>$(Output Directory)</sci:value>
															</sci:arg>
															<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Properties to Produce</sci:member>
																<sci:member>Get Result Document from Keys</sci:member>
																<sci:member>Generated Properties</sci:member>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys which to be export as properties, or list in quotes, like: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, all result key-value pairs will be exported. For generated components the value should be set to &lt;i&gt;__MS_Outputs_Definition&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;
Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;. To block export of all result key-values, provide empty list, like &quot;&quot;.
</sci:help>
																<sci:value>__MS_Outputs_Definition</sci:value>
															</sci:arg>
															<sci:arg name="Get Result Document from Keys" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys to be scanned for document to attach to output data record, or list in quotes like: &quot;Key1; Key2&quot;. Document from first key found will be used. If value is not specified, &quot;Structure;Trajectory&quot; will be used by default. For generated components this should always be set to __MS_Out_Document.</sci:help>
																<sci:value>__MS_Out_Document</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_Output_Properties</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Exec Core</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Aug 09 10:07:06 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Exec Core</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>CALCULATORNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{A25EE466-7063-4655-964D-556DA80569AF}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>390 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Exec Core</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Subprotocol" version="2">
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Preparation</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																		<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.9.0.30</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/coreutils</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>8</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>__MS_DSD_NumProc := 1;

if @&apos;Number of Parallel Threads&apos; is defined And RMatch(@&apos;Number of Parallel Threads&apos;, &quot;^\\d+$&quot;) then
	__MS_DSD_NumProc := @&apos;Number of Parallel Threads&apos;;		
end if;

/* reduce number of cores if it exceeds CPUCoresTotal */
if __MS_CPUCoresTotal is defined And __MS_DSD_NumProc &gt; __MS_CPUCoresTotal then
	__MS_DSD_NumProc := __MS_CPUCoresTotal;
	WarningText := &quot;Requested number of parallel threads was reduced to &quot; + __MS_DSD_NumProc +
				 &quot; as it exceeded CPUCoresTotal defined in Pipeline Pilot Server Administration Portal.&quot;;
end if;
</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Preparation</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																				<sci:value>__MS_QueueType,__MS_DSD_NumProc,__MS_BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Set Environment Variables</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>SUBPROTOCOLNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>378 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.48</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																						<sci:value>__MS_DSD_NumProc</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>MPI Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>9</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_QueueType)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_DSD_NumProc)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_QueueType is defined then
	@__MS_QueueType := __MS_QueueType;
end if;

__MS_QueueType is defined
</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Queued?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>666 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1 then
	@__MS_DSD_NumProc := __MS_DSD_NumProc;
end if;

__MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>MPI Run?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>4</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -820</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>5</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:connectid from="1" to="2" type="true"/>
																					<sci:connectid from="2" to="0" type="true"/>
																					<sci:connectid from="2" to="4" type="false"/>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="5" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>License Wait Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>378 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>10</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_BIOVIA_LIC_WAIT_TIMEOUT)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set Environment Variable</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot; then
	@__MS_BIOVIA_LIC_WAIT_TIMEOUT := __MS_BIOVIA_LIC_WAIT_TIMEOUT;
end if;

__MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot;

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Use License Wait?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.PropertyFunctions.1">
																						<sci:component name="No-op" version="2">
																							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																								<sci:legalval selected="true">LeaveData</sci:legalval>
																								<sci:legalval>ClearData</sci:legalval>
																								<sci:legalval>DeleteData</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the action to perform</sci:help>
																								<sci:value>PassDataToPort</sci:value>
																							</sci:arg>
																							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the port to pass data to</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>No-op</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Evaluate Expression</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>None</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>6.0.1.1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>6</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
																							</sci:arg>
																						</sci:component>
																					</sci:data>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="6" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:connectid from="9" to="10" type="true"/>
																		</sci:protocol>
																	</sci:data>
																	<sci:connectid from="2" to="1" type="true"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Perl MaterialsScript (on Server)" version="2">
																	<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;MaterialsScript (Perl) script to execute.  The component provides &lt;i&gt;templated&lt;/i&gt; script, which must be replaced.&lt;/p&gt;

&lt;p&gt;Any Pipeline Pilot Perl (on Server) component must execute the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;In addition, a MaterialsScript component provides a method GetMaterialsDocument($data) which can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt;
</sci:help>
																		<sci:value>use ComponentModules::Core::CoreExecute;</sci:value>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:value>25</sci:value>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>For internal use only.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Comment</sci:help>
																		<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Usage</sci:help>
																		<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Execute &amp; generate properties</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol ShowComment</sci:help>
																		<sci:value>true</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Add Protocol Comment Here</sci:help>
																		<sci:value>Add Protocol Comment Here</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>SubProtocol</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>390 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Executes MaterialsScript for each record</sci:value>
																		<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Unprocessed data records</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>8.4.5.24</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Make Shortcut by Default</sci:legalval>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/materials</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>6</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Container Connection" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="WebExports" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;p/&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval>ComponentTakesInput</sci:legalval>
																				<sci:legalval>ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="MaterialsSystem" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>For internal use only.</sci:help>
																				<sci:value>$(MaterialsSystem)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>EmptyProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/materials</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue Mar 22 15:31:46 2011</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>A top-level component for building protocols.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>The user should customize this description and usage to describe 
the functioning of their derived protocol.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Container Connection</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>ComponentNode</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{08334F2A-00CB-4A37-503F-8483A2E5178D}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Manage connections to the Materials Studio container</sci:value>
																				<sci:value>This is an internal component, used by other components in the Materials Collection.  It shouldn&apos;t be used on its own.</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>8.4.5.20</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Made Link Into Copy</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Modified</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Materials\Utilities\Internals\MatServer\Container Connection</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol/>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																				<sci:member>Parallel Processing Options Batch Size</sci:member>
																				<sci:member>Parallel Processing Options Server</sci:member>
																				<sci:member>Parallel Processing Options Preserve Order</sci:member>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:value>25</sci:value>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																				<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																				<sci:member>Parallel Processing Options Server Processes</sci:member>
																				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Subprotocol 1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>COMPONENTNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -455</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>6.1.0.21</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/core</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue May 01 14:06:30 2007</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.ComponentPerlPlugin.1">
																				<sci:component name="Perl (on Server)" version="2">
																					<sci:arg name="Script" type="StringType" required="true" visibility="visible" multi="false">
																						<sci:help>&lt;p&gt;Perl script to execute.  Pipeline Pilot executes the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The usual Perl scoping rules apply to variables.  To pass a variable between the three required subroutines use package level variables, e.g., &lt;code&gt;$::variable&lt;/code&gt; or &lt;code&gt;my $variable&lt;/code&gt; declared outside the subroutines.
&lt;/p&gt;

&lt;p&gt;
The &lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onFinalize&lt;/i&gt; subroutines both receive the &lt;code&gt;pilot::Context Perl&lt;/code&gt; object as the only argument.  The &lt;i&gt;onProcess&lt;/i&gt; subroutine receives the &lt;code&gt;pilot::Context&lt;/code&gt; and &lt;code&gt;pilot::DataRecord&lt;/code&gt; Perl objects as its two arguments.
&lt;/p&gt;

&lt;p&gt;
pilot::Context provides access to globals and parameters.  A common way to get these is via a Perl hash reference.  For example, to get a &lt;i&gt;Source&lt;/i&gt; parameter value use
&lt;/p&gt;

&lt;pre&gt;
my $parametersHashRef = $context-&gt;getComponentParameters()-&gt;getHashRef();
my $source = $parametersHashRef-&gt;{&quot;Source&quot;};
&lt;/pre&gt;

&lt;p&gt;
To obtain the value of a global property called &lt;i&gt;Old&lt;/i&gt; and set a new global property called &lt;i&gt;New&lt;/i&gt; use
&lt;/p&gt;

&lt;pre&gt;
my $globalsHashRef = $context-&gt;getGlobalProperties()-&gt;getHashRef();
my $value = $globalsHashRef-&gt;{&quot;Old&quot;};
$globalsHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
Top level properties in a data record are accessed similarly.
&lt;/p&gt;

&lt;pre&gt;
my $node = $data-&gt;getRoot();
my $propertiesHashRef = $node-&gt;getProperties()-&gt;getHashRef();
my $value = $propertiesHashRef-&gt;{&quot;Old&quot;};
$propertiesHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must return one of the following component state values:
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
To explicitly route a data record to a port use
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::PassPort);
&lt;/pre&gt;

&lt;p&gt;
or
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::FailPort);
&lt;/pre&gt;

&lt;p&gt;
Data records can also be terminated internally by routing to &lt;code&gt;$pilot::NoPort&lt;/code&gt;.
&lt;/p&gt;</sci:help>
																						<sci:value>$(Script)</sci:value>
																					</sci:arg>
																					<sci:arg name="Use Package" type="StringType" required="false" visibility="visible" multi="false" implbase="{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}">
																						<sci:help>The name of an application package that contains Perl modules referenced by this component. By defining this package name, a package-specific module may be referenced with the &apos;use modulename;&apos; syntax.</sci:help>
																						<sci:value>scitegic/materials</sci:value>
																					</sci:arg>
																					<sci:arg name="Rebuild In RTC" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;
The Perl component functions by creating an instance of a Perl interpreter and
passing the supplied Perl script to the interpreter for execution. The
creation of the Perl interpreter occurs one time, while script execution
occurs once for initialization and finalization subroutines and once 
for each data record processed by the component.
&lt;/p&gt;
&lt;p&gt;
However, in the context of a Run To Completion (RTC) subprtocols, the Perl 
component would normally be re-instantiated for each data record, 
in common with other components in an RTC subprotocol. This implies the
re-creation of the Perl interpreter for each data record, which can be
relatively time consuming, particularly for Perl scripts which
themselves perform a rapid operation per data record.
&lt;/p&gt;
&lt;p&gt;
So, to avoid significant differences in performance timings between RTC
and non-RTC contexts, the Perl component&apos;s default behavior is to &lt;i&gt;keep&lt;/i&gt;
the same instance of the Perl interpreter throughout its life cycle. This
is indicated by the False setting of the &lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
However, there are some circumstances where Perl script or 3rd party modules
are not written in a way that allows them to safely re-use the same interpreter in this way. So if you see unexpected behavior from a Perl
component in a Run To Completion subprotocol, switch the &lt;em&gt;Rebuild In RTC&lt;/em&gt;
parameter to True to see if that resolves the issue.
&lt;/p&gt;
&lt;p&gt;
If that fixes the problem, and the Perl cannot be re-cast to 
handle the persistent interpreter,
you may need to trade performance for stability.
&lt;/p&gt;</sci:help>
																						<sci:legalval>True</sci:legalval>
																						<sci:legalval selected="true">False</sci:legalval>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/integration</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Fri Feb 05 11:55:51 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Perl (on Server)</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>COMPONENTNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The component this component is based upon.</sci:help>
																						<sci:value>Plug In</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Executes Perl code on the server</sci:value>
																						<sci:value>&lt;p&gt;Allows a Perl script to manipulate a data record&apos;s property list, the global
property list, and component behavior. The &lt;em&gt;Script&lt;/em&gt; parameter contains
the script that implements the component behavior, encoded in Perl. The following
subroutines must be defined in this text parameter (all three methods need to
be declared in the main scope): &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;onInitialize: &lt;/em&gt;Invoked once before the any data records
    arrive. This method receives one argument, a pilot::Context object. Also,
    it must return a component state, one of $pilot::ReadyForInputData, $pilot::DoneProcessingData, $pilot::ReadyForNewData or $pilot::ReadyForInputThenNewData. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onProcess&lt;/em&gt;: Called once per data record. This method
    receives two arguments, a pilot::Context and a pilot::DataRecord object and
    return a component state. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onFinalize&lt;/em&gt;: Called when no more data records are available.
    This method receives one argument, a pilot::Context object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must
return one of the following component state values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Any script outside of the subroutines is executed just prior to calling
    onInitialize.&lt;/li&gt;
	&lt;li&gt;The optional &lt;em&gt;Use Package&lt;/em&gt; parameter is used to identify a package
      that holds one or more Perl modules that are referenced by the component.
      In this way, much or all of a component&apos;s functionality can be maintained
      in a package module. This facilitates component upgrading, by centralizing
    the code.&lt;/li&gt;
    &lt;li&gt;The Perl include path for the library must be declared in the package.conf
      file for the named package.&lt;/li&gt;
    &lt;li&gt;Perl&apos;s &lt;em&gt;strict&lt;/em&gt; and &lt;em&gt;warnings&lt;/em&gt; directives can be very useful
      when writing scripts. To detect warnings, you need to create a handler
      to manage them, since by default, Perl sends them to STDERR, which is not
    easily accessible from within Pipeline Pilot. 
	&lt;p&gt;For example, the following
    script treats warnings as errors:&lt;/p&gt;
	&lt;p&gt;&lt;code&gt;use warnings;&lt;br /&gt;
	$SIG{__WARN__} = sub {die @_;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt; If you see unexpected or erroneous behavior when using this component
in a Run To Completion subprotocol, please look at the help text for the
&lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter, which is in the Implementation tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>6.0.1.4</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The original path within the database of this component.</sci:help>
																						<sci:value>Components\Database and Application Integration\Application Integration\Programmatic Integration\Perl (on Server)</sci:value>
																					</sci:arg>
																				</sci:component>
																			</sci:data>
																		</sci:protocol>
																	</sci:data>
																	<sci:version iVal="1"/>
																</sci:protocol>
															</sci:data>
															<sci:connectid from="8" to="6" type="true"/>
															<sci:version iVal="2"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract SD properties" version="2">
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="SDF Document Property" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds SDF document URL, for ex: __MS_SDF_URL.</sci:help>
																<sci:value>__MS_SDF_URL</sci:value>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of SDF attributes to be export as properties, or list in quotes, for ex: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, no properties will be exported. For generated components the value should be set to __MS_Extra_Outputs_Def. Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;.
</sci:help>
																<sci:value>__MS_Extra_Outputs_Def</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_SDProperties, __MS_SDFDocumentName,__IsSDFPresent</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract SD properties</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8BF08A69-552B-4A5B-9007-7C9C7BF1ED68}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>690 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 27 10:36:46 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract SD properties</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract Vibrational Data" version="2">
															<sci:arg name="Output Type" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of output file from which vibrational mode information will be extracted.</sci:help>
																<sci:legalval selected="true">VAMP</sci:legalval>
																<sci:legalval>DMol3</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="SDF Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds list of generated SDF propeties. For genereated components this should be __MS_Generated_SDF_Properties,</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract Vibrational Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0ED898BB-A171-4B01-95D8-2E5473B1D8A1}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>990 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Extracts vibrational data from VAMP or DMol3 output</sci:value>
																<sci:value>Extracts vibrational data from the output file created by a VAMP or DMol3 calculation. The file URL must be contained in either the MSVAMP_TaskReport (for VAMP output) or MSDMol3_TaskReport (for DMol3 output) property on the input data record. If vibrational information is contained in the output file then frequencies and intensities are added to the data record as array properties. </sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Jul 26 13:07:08 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract Vibrational Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Clear Internal Data" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_Failed</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Clear Internal Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1B241797-6411-49AE-9CB1-2E8C2C0FC316}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>2190 -185</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Clears any internal data</sci:value>
																<sci:value>&lt;p&gt;Clears internal data such as internal properties and nodes.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.2.500</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jul 26 10:03:17 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Clear Internal Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1290 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="MS Mark As Failure" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Mark As Failure</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{5A9C91F6-BF88-425B-A04E-9915868E06F4}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1590 -275</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.18</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Mar 10 10:27:01 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\MS Mark As Failure</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1890 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="4" to="0" type="true"/>
													<sci:connectid from="4" to="5" type="false"/>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="0" to="5" type="false"/>
													<sci:connectid from="1" to="2" type="true"/>
													<sci:connectid from="1" to="5" type="false"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="5" type="false"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="6" to="7" type="true"/>
													<sci:connectid from="7" to="3" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>if not @&apos;Keep All Calculated&apos; then
	#props := RPropertyNames(&apos;^MSVAMP_.*&apos;);
	FOR #i in 1 .. numvalues(#props) 
	LOOP
		if not HashContains(@__OutputPropertiesTable, #props[#i]) then
			remove(#props[#i]);
		end if;
	END LOOP;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Remove Properties not Requested</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2790 -1321</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>21</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#props := RPropertyNames(&apos;^__MS_SavedProperty_MSVAMP_.*&apos;);
FOR #i in 1 .. numvalues(#props) 
LOOP
	#name := #props[#i];
	#originalName := RSubst(#name, &apos;__MS_SavedProperty_&apos;, &apos;&apos;);
	if Property(#originalName) is defined then
		remove(#name);
	else
		rename(#name, #originalName);
	end if;
END LOOP;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Restore Saved Properties</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>3090 -1321</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>22</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#ok := True;
if __MS_Failed is defined then
	#ok := (__MS_Failed = 0);
	remove(&apos;__MS_Failed&apos;);
end if;
#ok;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Calculation Succeeded?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>3390 -1321</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>23</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Geometry Optimization (VAMP)" version="2">
											<sci:arg name="Maximum Force" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0.01 and 10&quot;);parameter() &gt;=  0.01 and parameter() &lt;= 10;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-4 and 1&quot;);parameter() &gt;=  1e-4 and parameter() &lt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.2</sci:value>
											</sci:arg>
											<sci:arg name="Generate Hessian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">Partial</sci:legalval>
												<sci:legalval>Exact</sci:legalval>
											</sci:arg>
											<sci:arg name="Optimize Internals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Energy" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
												<sci:member>Hamiltonian</sci:member>
												<sci:member>Multiplicity</sci:member>
												<sci:member>Spin State</sci:member>
												<sci:member>Charge</sci:member>
												<sci:member>Electronic</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Hamiltonian)</sci:value>
											</sci:arg>
											<sci:arg name="Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Multiplicity)</sci:value>
											</sci:arg>
											<sci:arg name="Spin State" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>RHF</sci:value>
											</sci:arg>
											<sci:arg name="Charge" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between -10000 and 10000&quot;);parameter() &gt;=  -10000 and parameter() &lt;= 10000;</sci:validscript>
												<sci:value>$(Charge)</sci:value>
											</sci:arg>
											<sci:arg name="Electronic" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
												<sci:member>SCF</sci:member>
												<sci:member>CI Scheme</sci:member>
												<sci:member>Solvation Scheme</sci:member>
											</sci:arg>
											<sci:arg name="SCF" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
												<sci:member>Convergence Scheme</sci:member>
												<sci:member>SCF Tolerance</sci:member>
												<sci:member>Maximum SCF Cycles</sci:member>
											</sci:arg>
											<sci:arg name="Convergence Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:legalval>Standard</sci:legalval>
												<sci:legalval>Pulay</sci:legalval>
												<sci:legalval>IIS</sci:legalval>
												<sci:legalval selected="true">Pulay/IIS</sci:legalval>
											</sci:arg>
											<sci:arg name="SCF Tolerance" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-10 and 10&quot;);parameter() &gt;=  1e-10 and parameter() &lt;= 10;</sci:validscript>
												<sci:value>2e-4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum SCF Cycles" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 1000&quot;);parameter() &gt;=  1 and parameter() &lt;= 1000;</sci:validscript>
												<sci:value>750</sci:value>
											</sci:arg>
											<sci:arg name="CI Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>Number of Orbitals</sci:member>
												<sci:member>Requested Number of Virtual Orbitals</sci:member>
												<sci:member>Ignore Degenerate Orbitals</sci:member>
												<sci:member>Use Level Shifting</sci:member>
												<sci:member>Level Shift</sci:member>
												<sci:value>$(__CIScheme)</sci:value>
											</sci:arg>
											<sci:arg name="Number of Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 2&quot;);parameter() &gt;= 2;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Requested Number of Virtual Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1&quot;);parameter() &gt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Ignore Degenerate Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Use Level Shifting" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Level Shift" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 1000&quot;);parameter() &gt;=  0 and parameter() &lt;= 1000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Use Level Shifting&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Use Level Shifting&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Solvation Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>COSMO Solvent</sci:member>
												<sci:member>Dielectric Constant</sci:member>
												<sci:value>$(Solvation Scheme)</sci:value>
											</sci:arg>
											<sci:arg name="COSMO Solvent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(COSMO Solvent)</sci:value>
											</sci:arg>
											<sci:arg name="Dielectric Constant" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 10000&quot;);parameter() &gt;=  1 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;COSMO Solvent&quot;);
if (#tmpStr ne &quot;Customized&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;COSMO Solvent&apos; to &apos;Customized&apos;&quot;;
end if;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	if (#disableText ne &quot;&quot;) then #disableText .= &quot; and&quot;; end if;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(Dielectric Constant)</sci:value>
											</sci:arg>
											<sci:arg name="Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
												<sci:member>Vibrational Frequencies</sci:member>
												<sci:member>UV-Vis</sci:member>
												<sci:member>Localized Orbitals</sci:member>
												<sci:member>Propgen Descriptors</sci:member>
												<sci:member>Calculate Mulliken Charges</sci:member>
												<sci:member>Calculate ESP Charges</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Vibrational Frequencies" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
												<sci:member>Thermodynamics</sci:member>
												<sci:member>Minimum Temperature</sci:member>
												<sci:member>Maximum Temperature</sci:member>
												<sci:member>Temperature Step Size</sci:member>
												<sci:value>$(__Freq)</sci:value>
											</sci:arg>
											<sci:arg name="Thermodynamics" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Minimum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>700</sci:value>
											</sci:arg>
											<sci:arg name="Temperature Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 10 and 100&quot;);parameter() &gt;=  10 and parameter() &lt;= 100;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>50</sci:value>
											</sci:arg>
											<sci:arg name="UV-Vis" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;CI Scheme&quot;);
if (#tmpStr ne &quot;Full&quot; and #tmpStr ne &quot;CIS&quot; and #tmpStr ne &quot;CISD&quot; and #tmpStr ne &quot;PECI&quot; and #tmpStr ne &quot;Rumer CI&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;CI Scheme&apos; to &apos;Full&apos; or to &apos;CIS&apos; or to &apos;CISD&apos; or to &apos;PECI&apos; or to &apos;Rumer CI&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(__UVVis)</sci:value>
											</sci:arg>
											<sci:arg name="Localized Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Propgen Descriptors" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(__Propgen)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate Mulliken Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateMullikenCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate ESP Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateESPCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
												<sci:member>Settings File</sci:member>
												<sci:member>Keep Output Files</sci:member>
											</sci:arg>
											<sci:arg name="Settings File" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location of the settings file to use to override all other state parameters.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Output Files" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Specify whether to retain any results files from the server calculation. All files are stored in the location specified by the &lt;i&gt;Output Directory&lt;/i&gt;.&lt;/p&gt;</sci:help>
												<sci:member>Output Directory</sci:member>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Directory" type="DirectoryType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location where the files produced will be stored.&lt;/p&gt;&lt;/p&gt;To add files to an existing Materials Studio project set this to the project&apos;s &quot;Documents&quot; folder. If this is not specified results are stored in &lt;code&gt;$(JobDir)/Exports&lt;/code&gt;.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Keep Output Files&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Keep Output Files&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Refines the geometry of a structure to minimize its energy using VAMP</sci:value>
												<sci:value>&lt;p&gt;After a structure is built, it usually needs to be refined to bring it to a stable geometry. The refinement process is known as optimization, and is an iterative procedure in which the coordinates of the atoms are adjusted so that the energy of the structure is brought to a stationary point, i.e., one in which the forces on the atoms are zero.&lt;/p&gt;&lt;p&gt;You can request an energy minimization, a search for a relative minimum on the energy hypersurface. The geometry corresponding to this structure should have a close resemblance to an actual physical structure of the system at equilibrium. You can also perform an optimization on a transition state.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.0.0.14</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Nov 01 12:54:17 2012</sci:value>
											</sci:arg>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CALCULATORNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{FDBEAFBC-E7DD-4f77-9E91-A70DC304F57D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1590 -1355</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>32</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Quantum Mechanics\Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>VAMP Calculation</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.9.0.30</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/coreutils</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Settings Mapper" version="2">
															<sci:arg name="CUT_HERE_MAPPER" type="StringType" required="false" visibility="visible" multi="false" uimpl="false"/>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="__MS_Module" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>VAMP</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Module_Task" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>GeometryOptimization</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Out_Document" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Structure</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Intermediate_Files" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>sdf</sci:value>
															</sci:arg>
															<sci:arg name="OrbitalEigenvectors" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Computes FrontierOrbitals.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="CreateEnergyEvolutionChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts of energy over the calculation and the change in energy and gradient norm over the calculation cycle.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_ForceConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Force</sci:value>
															</sci:arg>
															<sci:arg name="_MaximumDisplacement" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_GenerateHessian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Generate Hessian</sci:value>
															</sci:arg>
															<sci:arg name="_OptimizeInternals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
																<sci:value>Optimize Internals</sci:value>
															</sci:arg>
															<sci:arg name="_Energy" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Hamiltonian</sci:member>
																<sci:member>_Multiplicity</sci:member>
																<sci:member>_SpinPolarization</sci:member>
																<sci:member>_Charge</sci:member>
																<sci:member>_Electronic</sci:member>
																<sci:value>Energy</sci:value>
															</sci:arg>
															<sci:arg name="_Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Hamiltonian</sci:value>
															</sci:arg>
															<sci:arg name="_Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Multiplicity</sci:value>
															</sci:arg>
															<sci:arg name="_SpinPolarization" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Spin State</sci:value>
															</sci:arg>
															<sci:arg name="_Charge" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
																<sci:value>Charge</sci:value>
															</sci:arg>
															<sci:arg name="_Electronic" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
																<sci:member>_SCF</sci:member>
																<sci:member>_CIScheme</sci:member>
																<sci:member>_SolvationScheme</sci:member>
																<sci:value>Electronic</sci:value>
															</sci:arg>
															<sci:arg name="_SCF" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
																<sci:member>_ConvergenceScheme</sci:member>
																<sci:member>_SCFConvergence</sci:member>
																<sci:member>_MaxSCFCycles</sci:member>
																<sci:value>SCF</sci:value>
															</sci:arg>
															<sci:arg name="_ConvergenceScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Convergence Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_SCFConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>SCF Tolerance</sci:value>
															</sci:arg>
															<sci:arg name="_MaxSCFCycles" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
																<sci:value>Maximum SCF Cycles</sci:value>
															</sci:arg>
															<sci:arg name="_CIScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:member>_CINumOrbitals</sci:member>
																<sci:member>_CIRequestedNumVirtOrbitals</sci:member>
																<sci:member>_IgnoreDegenerateMOs</sci:member>
																<sci:member>_UseLevelShifting</sci:member>
																<sci:member>_LevelShift</sci:member>
																<sci:value>CI Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CINumOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Number of Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_CIRequestedNumVirtOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
																<sci:value>Requested Number of Virtual Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_IgnoreDegenerateMOs" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Ignore Degenerate Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_UseLevelShifting" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
																<sci:value>Use Level Shifting</sci:value>
															</sci:arg>
															<sci:arg name="_LevelShift" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
																<sci:value>Level Shift</sci:value>
															</sci:arg>
															<sci:arg name="_SolvationScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &quot;COSMO&quot; is not  available for  &lt;i&gt;Hamiltonian&lt;/i&gt; &quot;PM6&quot;.&lt;/p&gt;</sci:help>
																<sci:member>_CosmoSolvent</sci:member>
																<sci:member>_SolventDielectric</sci:member>
																<sci:value>Solvation Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CosmoSolvent" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>COSMO Solvent</sci:value>
															</sci:arg>
															<sci:arg name="_SolventDielectric" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
																<sci:value>Dielectric Constant</sci:value>
															</sci:arg>
															<sci:arg name="_Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Frequency</sci:member>
																<sci:member>_UV_VIS</sci:member>
																<sci:member>CreateUVChart</sci:member>
																<sci:member>_LocalizedOrbitals</sci:member>
																<sci:member>_Propgen</sci:member>
																<sci:member>_Mulliken</sci:member>
																<sci:member>_ESPcharges</sci:member>
																<sci:value>Properties</sci:value>
															</sci:arg>
															<sci:arg name="_Frequency" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
																<sci:member>_Thermodynamics</sci:member>
																<sci:member>CreateThermodynamicsChart</sci:member>
																<sci:member>_MinTemp</sci:member>
																<sci:member>_MaxTemp</sci:member>
																<sci:member>_StepTemp</sci:member>
																<sci:value>Vibrational Frequencies</sci:value>
															</sci:arg>
															<sci:arg name="_Thermodynamics" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
																<sci:value>Thermodynamics</sci:value>
															</sci:arg>
															<sci:arg name="CreateThermodynamicsChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts for enthalpy, entropy, and heat capacity as functions of temperature.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_MinTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Minimum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_MaxTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_StepTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Temperature Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_UV_VIS" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
																<sci:value>UV-Vis</sci:value>
															</sci:arg>
															<sci:arg name="CreateUVChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates a UV spectrum.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_LocalizedOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Localized Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_Propgen" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Propgen Descriptors</sci:value>
															</sci:arg>
															<sci:arg name="_Mulliken" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate Mulliken Charges</sci:value>
															</sci:arg>
															<sci:arg name="_ESPcharges" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate ESP Charges</sci:value>
															</sci:arg>
															<sci:arg name="_Advanced" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
																<sci:value>Advanced</sci:value>
															</sci:arg>
															<sci:arg name="PropertyMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>OrbitalEigenvectors,CreateEnergyEvolutionChart,_ForceConvergence,_MaximumDisplacement,_GenerateHessian,_OptimizeInternals,_Hamiltonian,_Multiplicity,_SpinPolarization,_Charge,_ConvergenceScheme,_SCFConvergence,_MaxSCFCycles,_CIScheme,_CINumOrbitals,_CIRequestedNumVirtOrbitals,_IgnoreDegenerateMOs,_UseLevelShifting,_LevelShift,_SolvationScheme,_CosmoSolvent,_SolventDielectric,_Frequency,_Thermodynamics,CreateThermodynamicsChart,_MinTemp,_MaxTemp,_StepTemp,_UV_VIS,CreateUVChart,_LocalizedOrbitals,_Propgen,_Mulliken,_ESPcharges</sci:value>
															</sci:arg>
															<sci:arg name="EnumValMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>COSMO Solvent=Carbon Tetrachloride;Carbon tetrachloride;Diethyl Ether;Diethyl ether;Dimethyl Sulfoxide;Dimethyl sulfoxide;Methylene Chloride;Methylene chloride;n-Hexane;n-hexane;n-Hexadecane;n-hexadecane,CI Scheme=Rumer CI;RumerCI</sci:value>
															</sci:arg>
															<sci:arg name="ParamDependencies" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>_CINumOrbitals,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_CIRequestedNumVirtOrbitals,Parameter(_CIScheme),Rumer CI,eq;_IgnoreDegenerateMOs,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_UseLevelShifting,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_LevelShift,Parameter(_UseLevelShifting),True,eq;_CosmoSolvent,Parameter(_SolvationScheme),COSMO,eq;_SolventDielectric,Parameter(_CosmoSolvent),Customized,eq,Parameter(_SolvationScheme),COSMO,eq,&amp;&amp;;_SolvationScheme,Parameter(_Hamiltonian),MNDO/C,eq,Parameter(_Hamiltonian),AM1*,eq,||,Parameter(_Hamiltonian),AM1,eq,||,Parameter(_Hamiltonian),PM3,eq,||,Parameter(_Hamiltonian),MNDO/d,eq,||,Parameter(_Hamiltonian),MNDO,eq,||;_Thermodynamics,Parameter(_Frequency),True,eq;CreateThermodynamicsChart,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MinTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MaxTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_StepTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_UV_VIS,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;CreateUVChart,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||,Parameter(_UV_VIS),True,eq,&amp;&amp;;Output Directory,Parameter(Keep Output Files),True,eq</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Outputs_Definition" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Task Report;Report;Convergence Criteria Met;Converged;Total Energy;TotalEnergy;Enthalpy;Enthalpy;Entropy;Entropy;Heat Capacity;HeatCapacity;Energy Chart;EnergyChart;Convergence Chart;ConvergenceChart;Thermodynamics Chart;Thermodynamics;UV-Vis Chart;UVVis;Structure;Structure;Trajectory;Trajectory</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Extra_Outputs_Def" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Electronic Energy;ELECTRONIC ENERGY;Repulsive Energy;REPULSIVE ENERGY;Ionization Potential;IONIZATION POTENTIAL;HOMO Energy;HOMO;LUMO Energy;LUMO;Heat Of Formation;HEAT OF FORMATION;Zero Point Energy;ZPE;Total Dipole;TOTAL DIPOL;Dipole Moment;DIPOL;Quadrupole Moment;QUADPOL;Octupole Moment;OCTUPOL;ESP Charge;VESPA;Mulliken Charge;MULLIKEN CHARGES;Coulson Charge;COULSON CHARGES;Atomic Densities HOMO;ATOMIC DENSITIES HOMO;Atomic Densities LUMO;ATOMIC DENSITIES LUMO;Mean Polarizability;MEANPOL;Molecular Point Group;POINT-GROUP;Surface Area;MOLAREA;Electronic Levels;ELECTRONIC LEVELS;Propgen Descriptors;PROPGEN DESCRIPTORS</sci:value>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Halt</sci:value>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{37392346-E16E-4C97-ADFC-FCF74F17C7CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jul 28 10:50:24 2011</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Settings Mapper</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Settings Mapper</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Exec Core" version="2">
															<sci:arg name="Task Execution" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Execution Script File</sci:member>
																<sci:member>Module Name</sci:member>
																<sci:member>Task Name</sci:member>
																<sci:member>Task Run Method</sci:member>
																<sci:member>Settings File</sci:member>
															</sci:arg>
															<sci:arg name="Execution Script File" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Name of the execution script file, without extension, to be used by this component. The script needs to be stored in apps/scitegic/materials/lang/perl/ComponentModules/Core/Impl directory. If parameter value is not specified a GenericExec script will be used by default, which is appropriate for components with the following characteristic:
&lt;ul&gt;
&lt;li&gt;component produces 1 output record for each input record (1 in - 1 out)&lt;/li&gt; 
&lt;li&gt;task doesn&apos;t require any special preparation&lt;/li&gt;
&lt;li&gt;task is executed like: Modules-&gt;$(Module Name)-&gt;$(Task Name)-&gt;$(Task Run Method)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>VampExec</sci:value>
															</sci:arg>
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="Task Name" type="ExpressionType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds task name, or task name in quotes, for ex: &quot;Dynamics&quot;. For generated components this should always be __MS_Module_Task.</sci:help>
																<sci:value>__MS_Module_Task</sci:value>
															</sci:arg>
															<sci:arg name="Task Run Method" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds name of a method called to execute a task, or method name in quotes, for ex: &quot;Pawley&quot;. If value is not specified, &apos;Run&apos; will be is used by default. For generated components with custom execution method, this should always be __MS_Module_Exec.</sci:help>
															</sci:arg>
															<sci:arg name="Settings File" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>URL of a settings file to be used instead of UI parameters. For generated components this should always be $(Settings File). If value is not specified, settings files won&apos;t be used.</sci:help>
																<sci:value>$(Settings File)</sci:value>
															</sci:arg>
															<sci:arg name="Export Result Files" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export result files produced by task run. For generated components this should always be $(Keep Output Files), when such parameter is exposed on their UI and blank otherwise. When parameter value doesn&apos;t evaluate to True the result files are only available in Project/Documents directory on the server.</sci:help>
																<sci:member>Export Intermediate Files</sci:member>
																<sci:member>Intermediate Files to Export</sci:member>
																<sci:member>Root Output Directory</sci:member>
																<sci:value>$(Keep Output Files)</sci:value>
															</sci:arg>
															<sci:arg name="Export Intermediate Files" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export intermediate files. For generated components which has appropriate UI parameter this should always be &lt;i&gt;$(Keep Intermediate Files)&lt;/i&gt;, and blank otherwise. If value is not specified &lt;i&gt;True&lt;/i&gt; is used by default, but intermediate files are only exported if Intermediate Files to Export list is not empty. No intermediate files are exported if Export Result Files doesn&apos;t evaluate to &lt;i&gt;True&lt;/i&gt;.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Intermediate Files to Export" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds semicolon separated list of file extensions to export, or list in quotes like: &quot;arc;grd;cosmo&quot;. No intermediate files will be exported if list is empty or Export Intermediate Files or Export Result Files doesn&apos;t evaluate to True. For generated components which need to keep intermediates, this shuld always be set to __MS_Intermediate_Files.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>__MS_Intermediate_Files</sci:value>
															</sci:arg>
															<sci:arg name="Root Output Directory" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>URL of root directory for result files export. If not specified this will be $(JobDir)/Exports/$(RunId). For generated components this should be set to &lt;i&gt;$(Output Directory)&lt;/i&gt; when such a parameter is exposed on their UI. The parameter is only used if Export Result Files evaluates to &lt;i&gt;True&lt;/i&gt;.
</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>$(Output Directory)</sci:value>
															</sci:arg>
															<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Properties to Produce</sci:member>
																<sci:member>Get Result Document from Keys</sci:member>
																<sci:member>Generated Properties</sci:member>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys which to be export as properties, or list in quotes, like: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, all result key-value pairs will be exported. For generated components the value should be set to &lt;i&gt;__MS_Outputs_Definition&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;
Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;. To block export of all result key-values, provide empty list, like &quot;&quot;.
</sci:help>
																<sci:value>__MS_Outputs_Definition</sci:value>
															</sci:arg>
															<sci:arg name="Get Result Document from Keys" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys to be scanned for document to attach to output data record, or list in quotes like: &quot;Key1; Key2&quot;. Document from first key found will be used. If value is not specified, &quot;Structure;Trajectory&quot; will be used by default. For generated components this should always be set to __MS_Out_Document.</sci:help>
																<sci:value>__MS_Out_Document</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_Output_Properties</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Exec Core</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Aug 09 10:07:06 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Exec Core</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>CALCULATORNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{A25EE466-7063-4655-964D-556DA80569AF}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>390 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Exec Core</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Subprotocol" version="2">
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Preparation</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																		<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.9.0.30</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/coreutils</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>8</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>__MS_DSD_NumProc := 1;

if @&apos;Number of Parallel Threads&apos; is defined And RMatch(@&apos;Number of Parallel Threads&apos;, &quot;^\\d+$&quot;) then
	__MS_DSD_NumProc := @&apos;Number of Parallel Threads&apos;;		
end if;

/* reduce number of cores if it exceeds CPUCoresTotal */
if __MS_CPUCoresTotal is defined And __MS_DSD_NumProc &gt; __MS_CPUCoresTotal then
	__MS_DSD_NumProc := __MS_CPUCoresTotal;
	WarningText := &quot;Requested number of parallel threads was reduced to &quot; + __MS_DSD_NumProc +
				 &quot; as it exceeded CPUCoresTotal defined in Pipeline Pilot Server Administration Portal.&quot;;
end if;
</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Preparation</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																				<sci:value>__MS_QueueType,__MS_DSD_NumProc,__MS_BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Set Environment Variables</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>SUBPROTOCOLNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>378 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.48</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																						<sci:value>__MS_DSD_NumProc</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>MPI Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>9</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_QueueType)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_DSD_NumProc)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_QueueType is defined then
	@__MS_QueueType := __MS_QueueType;
end if;

__MS_QueueType is defined
</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Queued?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>666 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1 then
	@__MS_DSD_NumProc := __MS_DSD_NumProc;
end if;

__MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>MPI Run?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>4</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -820</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>5</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:connectid from="1" to="2" type="true"/>
																					<sci:connectid from="2" to="0" type="true"/>
																					<sci:connectid from="2" to="4" type="false"/>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="5" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>License Wait Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>378 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>10</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_BIOVIA_LIC_WAIT_TIMEOUT)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set Environment Variable</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot; then
	@__MS_BIOVIA_LIC_WAIT_TIMEOUT := __MS_BIOVIA_LIC_WAIT_TIMEOUT;
end if;

__MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot;

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Use License Wait?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.PropertyFunctions.1">
																						<sci:component name="No-op" version="2">
																							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																								<sci:legalval selected="true">LeaveData</sci:legalval>
																								<sci:legalval>ClearData</sci:legalval>
																								<sci:legalval>DeleteData</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the action to perform</sci:help>
																								<sci:value>PassDataToPort</sci:value>
																							</sci:arg>
																							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the port to pass data to</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>No-op</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Evaluate Expression</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>None</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>6.0.1.1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>6</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
																							</sci:arg>
																						</sci:component>
																					</sci:data>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="6" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:connectid from="9" to="10" type="true"/>
																		</sci:protocol>
																	</sci:data>
																	<sci:connectid from="2" to="1" type="true"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Perl MaterialsScript (on Server)" version="2">
																	<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;MaterialsScript (Perl) script to execute.  The component provides &lt;i&gt;templated&lt;/i&gt; script, which must be replaced.&lt;/p&gt;

&lt;p&gt;Any Pipeline Pilot Perl (on Server) component must execute the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;In addition, a MaterialsScript component provides a method GetMaterialsDocument($data) which can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt;
</sci:help>
																		<sci:value>use ComponentModules::Core::CoreExecute;</sci:value>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:value>25</sci:value>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>For internal use only.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Comment</sci:help>
																		<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Usage</sci:help>
																		<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Execute &amp; generate properties</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol ShowComment</sci:help>
																		<sci:value>true</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Add Protocol Comment Here</sci:help>
																		<sci:value>Add Protocol Comment Here</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>SubProtocol</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>390 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Executes MaterialsScript for each record</sci:value>
																		<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Unprocessed data records</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>8.4.5.24</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Make Shortcut by Default</sci:legalval>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/materials</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>6</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Container Connection" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="WebExports" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;p/&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval>ComponentTakesInput</sci:legalval>
																				<sci:legalval>ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="MaterialsSystem" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>For internal use only.</sci:help>
																				<sci:value>$(MaterialsSystem)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>EmptyProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/materials</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue Mar 22 15:31:46 2011</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>A top-level component for building protocols.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>The user should customize this description and usage to describe 
the functioning of their derived protocol.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Container Connection</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>ComponentNode</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{08334F2A-00CB-4A37-503F-8483A2E5178D}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Manage connections to the Materials Studio container</sci:value>
																				<sci:value>This is an internal component, used by other components in the Materials Collection.  It shouldn&apos;t be used on its own.</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>8.4.5.20</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Made Link Into Copy</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Modified</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Materials\Utilities\Internals\MatServer\Container Connection</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol/>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																				<sci:member>Parallel Processing Options Batch Size</sci:member>
																				<sci:member>Parallel Processing Options Server</sci:member>
																				<sci:member>Parallel Processing Options Preserve Order</sci:member>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:value>25</sci:value>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																				<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																				<sci:member>Parallel Processing Options Server Processes</sci:member>
																				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Subprotocol 1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>COMPONENTNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -455</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>6.1.0.21</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/core</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue May 01 14:06:30 2007</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.ComponentPerlPlugin.1">
																				<sci:component name="Perl (on Server)" version="2">
																					<sci:arg name="Script" type="StringType" required="true" visibility="visible" multi="false">
																						<sci:help>&lt;p&gt;Perl script to execute.  Pipeline Pilot executes the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The usual Perl scoping rules apply to variables.  To pass a variable between the three required subroutines use package level variables, e.g., &lt;code&gt;$::variable&lt;/code&gt; or &lt;code&gt;my $variable&lt;/code&gt; declared outside the subroutines.
&lt;/p&gt;

&lt;p&gt;
The &lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onFinalize&lt;/i&gt; subroutines both receive the &lt;code&gt;pilot::Context Perl&lt;/code&gt; object as the only argument.  The &lt;i&gt;onProcess&lt;/i&gt; subroutine receives the &lt;code&gt;pilot::Context&lt;/code&gt; and &lt;code&gt;pilot::DataRecord&lt;/code&gt; Perl objects as its two arguments.
&lt;/p&gt;

&lt;p&gt;
pilot::Context provides access to globals and parameters.  A common way to get these is via a Perl hash reference.  For example, to get a &lt;i&gt;Source&lt;/i&gt; parameter value use
&lt;/p&gt;

&lt;pre&gt;
my $parametersHashRef = $context-&gt;getComponentParameters()-&gt;getHashRef();
my $source = $parametersHashRef-&gt;{&quot;Source&quot;};
&lt;/pre&gt;

&lt;p&gt;
To obtain the value of a global property called &lt;i&gt;Old&lt;/i&gt; and set a new global property called &lt;i&gt;New&lt;/i&gt; use
&lt;/p&gt;

&lt;pre&gt;
my $globalsHashRef = $context-&gt;getGlobalProperties()-&gt;getHashRef();
my $value = $globalsHashRef-&gt;{&quot;Old&quot;};
$globalsHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
Top level properties in a data record are accessed similarly.
&lt;/p&gt;

&lt;pre&gt;
my $node = $data-&gt;getRoot();
my $propertiesHashRef = $node-&gt;getProperties()-&gt;getHashRef();
my $value = $propertiesHashRef-&gt;{&quot;Old&quot;};
$propertiesHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must return one of the following component state values:
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
To explicitly route a data record to a port use
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::PassPort);
&lt;/pre&gt;

&lt;p&gt;
or
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::FailPort);
&lt;/pre&gt;

&lt;p&gt;
Data records can also be terminated internally by routing to &lt;code&gt;$pilot::NoPort&lt;/code&gt;.
&lt;/p&gt;</sci:help>
																						<sci:value>$(Script)</sci:value>
																					</sci:arg>
																					<sci:arg name="Use Package" type="StringType" required="false" visibility="visible" multi="false" implbase="{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}">
																						<sci:help>The name of an application package that contains Perl modules referenced by this component. By defining this package name, a package-specific module may be referenced with the &apos;use modulename;&apos; syntax.</sci:help>
																						<sci:value>scitegic/materials</sci:value>
																					</sci:arg>
																					<sci:arg name="Rebuild In RTC" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;
The Perl component functions by creating an instance of a Perl interpreter and
passing the supplied Perl script to the interpreter for execution. The
creation of the Perl interpreter occurs one time, while script execution
occurs once for initialization and finalization subroutines and once 
for each data record processed by the component.
&lt;/p&gt;
&lt;p&gt;
However, in the context of a Run To Completion (RTC) subprtocols, the Perl 
component would normally be re-instantiated for each data record, 
in common with other components in an RTC subprotocol. This implies the
re-creation of the Perl interpreter for each data record, which can be
relatively time consuming, particularly for Perl scripts which
themselves perform a rapid operation per data record.
&lt;/p&gt;
&lt;p&gt;
So, to avoid significant differences in performance timings between RTC
and non-RTC contexts, the Perl component&apos;s default behavior is to &lt;i&gt;keep&lt;/i&gt;
the same instance of the Perl interpreter throughout its life cycle. This
is indicated by the False setting of the &lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
However, there are some circumstances where Perl script or 3rd party modules
are not written in a way that allows them to safely re-use the same interpreter in this way. So if you see unexpected behavior from a Perl
component in a Run To Completion subprotocol, switch the &lt;em&gt;Rebuild In RTC&lt;/em&gt;
parameter to True to see if that resolves the issue.
&lt;/p&gt;
&lt;p&gt;
If that fixes the problem, and the Perl cannot be re-cast to 
handle the persistent interpreter,
you may need to trade performance for stability.
&lt;/p&gt;</sci:help>
																						<sci:legalval>True</sci:legalval>
																						<sci:legalval selected="true">False</sci:legalval>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/integration</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Fri Feb 05 11:55:51 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Perl (on Server)</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>COMPONENTNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The component this component is based upon.</sci:help>
																						<sci:value>Plug In</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Executes Perl code on the server</sci:value>
																						<sci:value>&lt;p&gt;Allows a Perl script to manipulate a data record&apos;s property list, the global
property list, and component behavior. The &lt;em&gt;Script&lt;/em&gt; parameter contains
the script that implements the component behavior, encoded in Perl. The following
subroutines must be defined in this text parameter (all three methods need to
be declared in the main scope): &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;onInitialize: &lt;/em&gt;Invoked once before the any data records
    arrive. This method receives one argument, a pilot::Context object. Also,
    it must return a component state, one of $pilot::ReadyForInputData, $pilot::DoneProcessingData, $pilot::ReadyForNewData or $pilot::ReadyForInputThenNewData. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onProcess&lt;/em&gt;: Called once per data record. This method
    receives two arguments, a pilot::Context and a pilot::DataRecord object and
    return a component state. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onFinalize&lt;/em&gt;: Called when no more data records are available.
    This method receives one argument, a pilot::Context object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must
return one of the following component state values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Any script outside of the subroutines is executed just prior to calling
    onInitialize.&lt;/li&gt;
	&lt;li&gt;The optional &lt;em&gt;Use Package&lt;/em&gt; parameter is used to identify a package
      that holds one or more Perl modules that are referenced by the component.
      In this way, much or all of a component&apos;s functionality can be maintained
      in a package module. This facilitates component upgrading, by centralizing
    the code.&lt;/li&gt;
    &lt;li&gt;The Perl include path for the library must be declared in the package.conf
      file for the named package.&lt;/li&gt;
    &lt;li&gt;Perl&apos;s &lt;em&gt;strict&lt;/em&gt; and &lt;em&gt;warnings&lt;/em&gt; directives can be very useful
      when writing scripts. To detect warnings, you need to create a handler
      to manage them, since by default, Perl sends them to STDERR, which is not
    easily accessible from within Pipeline Pilot. 
	&lt;p&gt;For example, the following
    script treats warnings as errors:&lt;/p&gt;
	&lt;p&gt;&lt;code&gt;use warnings;&lt;br /&gt;
	$SIG{__WARN__} = sub {die @_;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt; If you see unexpected or erroneous behavior when using this component
in a Run To Completion subprotocol, please look at the help text for the
&lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter, which is in the Implementation tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>6.0.1.4</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The original path within the database of this component.</sci:help>
																						<sci:value>Components\Database and Application Integration\Application Integration\Programmatic Integration\Perl (on Server)</sci:value>
																					</sci:arg>
																				</sci:component>
																			</sci:data>
																		</sci:protocol>
																	</sci:data>
																	<sci:version iVal="1"/>
																</sci:protocol>
															</sci:data>
															<sci:connectid from="8" to="6" type="true"/>
															<sci:version iVal="2"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract SD properties" version="2">
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="SDF Document Property" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds SDF document URL, for ex: __MS_SDF_URL.</sci:help>
																<sci:value>__MS_SDF_URL</sci:value>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of SDF attributes to be export as properties, or list in quotes, for ex: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, no properties will be exported. For generated components the value should be set to __MS_Extra_Outputs_Def. Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;.
</sci:help>
																<sci:value>__MS_Extra_Outputs_Def</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_SDProperties, __MS_SDFDocumentName,__IsSDFPresent</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract SD properties</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8BF08A69-552B-4A5B-9007-7C9C7BF1ED68}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>690 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 27 10:36:46 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract SD properties</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract Vibrational Data" version="2">
															<sci:arg name="Output Type" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of output file from which vibrational mode information will be extracted.</sci:help>
																<sci:legalval selected="true">VAMP</sci:legalval>
																<sci:legalval>DMol3</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="SDF Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds list of generated SDF propeties. For genereated components this should be __MS_Generated_SDF_Properties,</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract Vibrational Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0ED898BB-A171-4B01-95D8-2E5473B1D8A1}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>990 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Extracts vibrational data from VAMP or DMol3 output</sci:value>
																<sci:value>Extracts vibrational data from the output file created by a VAMP or DMol3 calculation. The file URL must be contained in either the MSVAMP_TaskReport (for VAMP output) or MSDMol3_TaskReport (for DMol3 output) property on the input data record. If vibrational information is contained in the output file then frequencies and intensities are added to the data record as array properties. </sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Jul 26 13:07:08 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract Vibrational Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Clear Internal Data" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_Failed</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Clear Internal Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1B241797-6411-49AE-9CB1-2E8C2C0FC316}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>2190 -185</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Clears any internal data</sci:value>
																<sci:value>&lt;p&gt;Clears internal data such as internal properties and nodes.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.2.500</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jul 26 10:03:17 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Clear Internal Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1290 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="MS Mark As Failure" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Mark As Failure</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{5A9C91F6-BF88-425B-A04E-9915868E06F4}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1590 -275</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.18</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Mar 10 10:27:01 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\MS Mark As Failure</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1890 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="4" to="0" type="true"/>
													<sci:connectid from="4" to="5" type="false"/>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="0" to="5" type="false"/>
													<sci:connectid from="1" to="2" type="true"/>
													<sci:connectid from="1" to="5" type="false"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="5" type="false"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="6" to="7" type="true"/>
													<sci:connectid from="7" to="3" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Geometry Optimization (VAMP)" version="2">
											<sci:arg name="Maximum Force" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0.01 and 10&quot;);parameter() &gt;=  0.01 and parameter() &lt;= 10;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-4 and 1&quot;);parameter() &gt;=  1e-4 and parameter() &lt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.2</sci:value>
											</sci:arg>
											<sci:arg name="Generate Hessian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">Partial</sci:legalval>
												<sci:legalval>Exact</sci:legalval>
											</sci:arg>
											<sci:arg name="Optimize Internals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Energy" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
												<sci:member>Hamiltonian</sci:member>
												<sci:member>Multiplicity</sci:member>
												<sci:member>Spin State</sci:member>
												<sci:member>Charge</sci:member>
												<sci:member>Electronic</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Hamiltonian)</sci:value>
											</sci:arg>
											<sci:arg name="Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Multiplicity)</sci:value>
											</sci:arg>
											<sci:arg name="Spin State" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>A-UHF</sci:value>
											</sci:arg>
											<sci:arg name="Charge" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between -10000 and 10000&quot;);parameter() &gt;=  -10000 and parameter() &lt;= 10000;</sci:validscript>
												<sci:value>$(Charge)</sci:value>
											</sci:arg>
											<sci:arg name="Electronic" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
												<sci:member>SCF</sci:member>
												<sci:member>CI Scheme</sci:member>
												<sci:member>Solvation Scheme</sci:member>
											</sci:arg>
											<sci:arg name="SCF" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
												<sci:member>Convergence Scheme</sci:member>
												<sci:member>SCF Tolerance</sci:member>
												<sci:member>Maximum SCF Cycles</sci:member>
											</sci:arg>
											<sci:arg name="Convergence Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:legalval>Standard</sci:legalval>
												<sci:legalval>Pulay</sci:legalval>
												<sci:legalval>IIS</sci:legalval>
												<sci:legalval selected="true">Pulay/IIS</sci:legalval>
											</sci:arg>
											<sci:arg name="SCF Tolerance" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-10 and 10&quot;);parameter() &gt;=  1e-10 and parameter() &lt;= 10;</sci:validscript>
												<sci:value>2e-4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum SCF Cycles" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 1000&quot;);parameter() &gt;=  1 and parameter() &lt;= 1000;</sci:validscript>
												<sci:value>750</sci:value>
											</sci:arg>
											<sci:arg name="CI Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>Number of Orbitals</sci:member>
												<sci:member>Requested Number of Virtual Orbitals</sci:member>
												<sci:member>Ignore Degenerate Orbitals</sci:member>
												<sci:member>Use Level Shifting</sci:member>
												<sci:member>Level Shift</sci:member>
												<sci:value>$(__CIScheme)</sci:value>
											</sci:arg>
											<sci:arg name="Number of Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 2&quot;);parameter() &gt;= 2;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Requested Number of Virtual Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1&quot;);parameter() &gt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Ignore Degenerate Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Use Level Shifting" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Level Shift" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 1000&quot;);parameter() &gt;=  0 and parameter() &lt;= 1000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Use Level Shifting&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Use Level Shifting&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Solvation Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>COSMO Solvent</sci:member>
												<sci:member>Dielectric Constant</sci:member>
												<sci:value>$(Solvation Scheme)</sci:value>
											</sci:arg>
											<sci:arg name="COSMO Solvent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(COSMO Solvent)</sci:value>
											</sci:arg>
											<sci:arg name="Dielectric Constant" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 10000&quot;);parameter() &gt;=  1 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;COSMO Solvent&quot;);
if (#tmpStr ne &quot;Customized&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;COSMO Solvent&apos; to &apos;Customized&apos;&quot;;
end if;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	if (#disableText ne &quot;&quot;) then #disableText .= &quot; and&quot;; end if;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(Dielectric Constant)</sci:value>
											</sci:arg>
											<sci:arg name="Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
												<sci:member>Vibrational Frequencies</sci:member>
												<sci:member>UV-Vis</sci:member>
												<sci:member>Localized Orbitals</sci:member>
												<sci:member>Propgen Descriptors</sci:member>
												<sci:member>Calculate Mulliken Charges</sci:member>
												<sci:member>Calculate ESP Charges</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Vibrational Frequencies" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
												<sci:member>Thermodynamics</sci:member>
												<sci:member>Minimum Temperature</sci:member>
												<sci:member>Maximum Temperature</sci:member>
												<sci:member>Temperature Step Size</sci:member>
												<sci:value>$(__Freq)</sci:value>
											</sci:arg>
											<sci:arg name="Thermodynamics" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Minimum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>700</sci:value>
											</sci:arg>
											<sci:arg name="Temperature Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 10 and 100&quot;);parameter() &gt;=  10 and parameter() &lt;= 100;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>50</sci:value>
											</sci:arg>
											<sci:arg name="UV-Vis" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;CI Scheme&quot;);
if (#tmpStr ne &quot;Full&quot; and #tmpStr ne &quot;CIS&quot; and #tmpStr ne &quot;CISD&quot; and #tmpStr ne &quot;PECI&quot; and #tmpStr ne &quot;Rumer CI&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;CI Scheme&apos; to &apos;Full&apos; or to &apos;CIS&apos; or to &apos;CISD&apos; or to &apos;PECI&apos; or to &apos;Rumer CI&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(__UVVis)</sci:value>
											</sci:arg>
											<sci:arg name="Localized Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Propgen Descriptors" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(__Propgen)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate Mulliken Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateMullikenCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate ESP Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateESPCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
												<sci:member>Settings File</sci:member>
												<sci:member>Keep Output Files</sci:member>
											</sci:arg>
											<sci:arg name="Settings File" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location of the settings file to use to override all other state parameters.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Output Files" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Specify whether to retain any results files from the server calculation. All files are stored in the location specified by the &lt;i&gt;Output Directory&lt;/i&gt;.&lt;/p&gt;</sci:help>
												<sci:member>Output Directory</sci:member>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Directory" type="DirectoryType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location where the files produced will be stored.&lt;/p&gt;&lt;/p&gt;To add files to an existing Materials Studio project set this to the project&apos;s &quot;Documents&quot; folder. If this is not specified results are stored in &lt;code&gt;$(JobDir)/Exports&lt;/code&gt;.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Keep Output Files&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Keep Output Files&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Refines the geometry of a structure to minimize its energy using VAMP</sci:value>
												<sci:value>&lt;p&gt;After a structure is built, it usually needs to be refined to bring it to a stable geometry. The refinement process is known as optimization, and is an iterative procedure in which the coordinates of the atoms are adjusted so that the energy of the structure is brought to a stationary point, i.e., one in which the forces on the atoms are zero.&lt;/p&gt;&lt;p&gt;You can request an energy minimization, a search for a relative minimum on the energy hypersurface. The geometry corresponding to this structure should have a close resemblance to an actual physical structure of the system at equilibrium. You can also perform an optimization on a transition state.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.0.0.14</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Nov 01 12:54:17 2012</sci:value>
											</sci:arg>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CALCULATORNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{FDBEAFBC-E7DD-4f77-9E91-A70DC304F57D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1890 -1535</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>33</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Quantum Mechanics\Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>VAMP Calculation</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.9.0.30</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/coreutils</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Settings Mapper" version="2">
															<sci:arg name="CUT_HERE_MAPPER" type="StringType" required="false" visibility="visible" multi="false" uimpl="false"/>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="__MS_Module" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>VAMP</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Module_Task" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>GeometryOptimization</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Out_Document" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Structure</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Intermediate_Files" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>sdf</sci:value>
															</sci:arg>
															<sci:arg name="OrbitalEigenvectors" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Computes FrontierOrbitals.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="CreateEnergyEvolutionChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts of energy over the calculation and the change in energy and gradient norm over the calculation cycle.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_ForceConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Force</sci:value>
															</sci:arg>
															<sci:arg name="_MaximumDisplacement" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_GenerateHessian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Generate Hessian</sci:value>
															</sci:arg>
															<sci:arg name="_OptimizeInternals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
																<sci:value>Optimize Internals</sci:value>
															</sci:arg>
															<sci:arg name="_Energy" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Hamiltonian</sci:member>
																<sci:member>_Multiplicity</sci:member>
																<sci:member>_SpinPolarization</sci:member>
																<sci:member>_Charge</sci:member>
																<sci:member>_Electronic</sci:member>
																<sci:value>Energy</sci:value>
															</sci:arg>
															<sci:arg name="_Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Hamiltonian</sci:value>
															</sci:arg>
															<sci:arg name="_Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Multiplicity</sci:value>
															</sci:arg>
															<sci:arg name="_SpinPolarization" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Spin State</sci:value>
															</sci:arg>
															<sci:arg name="_Charge" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
																<sci:value>Charge</sci:value>
															</sci:arg>
															<sci:arg name="_Electronic" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
																<sci:member>_SCF</sci:member>
																<sci:member>_CIScheme</sci:member>
																<sci:member>_SolvationScheme</sci:member>
																<sci:value>Electronic</sci:value>
															</sci:arg>
															<sci:arg name="_SCF" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
																<sci:member>_ConvergenceScheme</sci:member>
																<sci:member>_SCFConvergence</sci:member>
																<sci:member>_MaxSCFCycles</sci:member>
																<sci:value>SCF</sci:value>
															</sci:arg>
															<sci:arg name="_ConvergenceScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Convergence Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_SCFConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>SCF Tolerance</sci:value>
															</sci:arg>
															<sci:arg name="_MaxSCFCycles" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
																<sci:value>Maximum SCF Cycles</sci:value>
															</sci:arg>
															<sci:arg name="_CIScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:member>_CINumOrbitals</sci:member>
																<sci:member>_CIRequestedNumVirtOrbitals</sci:member>
																<sci:member>_IgnoreDegenerateMOs</sci:member>
																<sci:member>_UseLevelShifting</sci:member>
																<sci:member>_LevelShift</sci:member>
																<sci:value>CI Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CINumOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Number of Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_CIRequestedNumVirtOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
																<sci:value>Requested Number of Virtual Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_IgnoreDegenerateMOs" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Ignore Degenerate Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_UseLevelShifting" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
																<sci:value>Use Level Shifting</sci:value>
															</sci:arg>
															<sci:arg name="_LevelShift" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
																<sci:value>Level Shift</sci:value>
															</sci:arg>
															<sci:arg name="_SolvationScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &quot;COSMO&quot; is not  available for  &lt;i&gt;Hamiltonian&lt;/i&gt; &quot;PM6&quot;.&lt;/p&gt;</sci:help>
																<sci:member>_CosmoSolvent</sci:member>
																<sci:member>_SolventDielectric</sci:member>
																<sci:value>Solvation Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CosmoSolvent" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>COSMO Solvent</sci:value>
															</sci:arg>
															<sci:arg name="_SolventDielectric" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
																<sci:value>Dielectric Constant</sci:value>
															</sci:arg>
															<sci:arg name="_Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Frequency</sci:member>
																<sci:member>_UV_VIS</sci:member>
																<sci:member>CreateUVChart</sci:member>
																<sci:member>_LocalizedOrbitals</sci:member>
																<sci:member>_Propgen</sci:member>
																<sci:member>_Mulliken</sci:member>
																<sci:member>_ESPcharges</sci:member>
																<sci:value>Properties</sci:value>
															</sci:arg>
															<sci:arg name="_Frequency" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
																<sci:member>_Thermodynamics</sci:member>
																<sci:member>CreateThermodynamicsChart</sci:member>
																<sci:member>_MinTemp</sci:member>
																<sci:member>_MaxTemp</sci:member>
																<sci:member>_StepTemp</sci:member>
																<sci:value>Vibrational Frequencies</sci:value>
															</sci:arg>
															<sci:arg name="_Thermodynamics" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
																<sci:value>Thermodynamics</sci:value>
															</sci:arg>
															<sci:arg name="CreateThermodynamicsChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts for enthalpy, entropy, and heat capacity as functions of temperature.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_MinTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Minimum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_MaxTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_StepTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Temperature Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_UV_VIS" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
																<sci:value>UV-Vis</sci:value>
															</sci:arg>
															<sci:arg name="CreateUVChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates a UV spectrum.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_LocalizedOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Localized Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_Propgen" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Propgen Descriptors</sci:value>
															</sci:arg>
															<sci:arg name="_Mulliken" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate Mulliken Charges</sci:value>
															</sci:arg>
															<sci:arg name="_ESPcharges" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate ESP Charges</sci:value>
															</sci:arg>
															<sci:arg name="_Advanced" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
																<sci:value>Advanced</sci:value>
															</sci:arg>
															<sci:arg name="PropertyMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>OrbitalEigenvectors,CreateEnergyEvolutionChart,_ForceConvergence,_MaximumDisplacement,_GenerateHessian,_OptimizeInternals,_Hamiltonian,_Multiplicity,_SpinPolarization,_Charge,_ConvergenceScheme,_SCFConvergence,_MaxSCFCycles,_CIScheme,_CINumOrbitals,_CIRequestedNumVirtOrbitals,_IgnoreDegenerateMOs,_UseLevelShifting,_LevelShift,_SolvationScheme,_CosmoSolvent,_SolventDielectric,_Frequency,_Thermodynamics,CreateThermodynamicsChart,_MinTemp,_MaxTemp,_StepTemp,_UV_VIS,CreateUVChart,_LocalizedOrbitals,_Propgen,_Mulliken,_ESPcharges</sci:value>
															</sci:arg>
															<sci:arg name="EnumValMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>COSMO Solvent=Carbon Tetrachloride;Carbon tetrachloride;Diethyl Ether;Diethyl ether;Dimethyl Sulfoxide;Dimethyl sulfoxide;Methylene Chloride;Methylene chloride;n-Hexane;n-hexane;n-Hexadecane;n-hexadecane,CI Scheme=Rumer CI;RumerCI</sci:value>
															</sci:arg>
															<sci:arg name="ParamDependencies" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>_CINumOrbitals,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_CIRequestedNumVirtOrbitals,Parameter(_CIScheme),Rumer CI,eq;_IgnoreDegenerateMOs,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_UseLevelShifting,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_LevelShift,Parameter(_UseLevelShifting),True,eq;_CosmoSolvent,Parameter(_SolvationScheme),COSMO,eq;_SolventDielectric,Parameter(_CosmoSolvent),Customized,eq,Parameter(_SolvationScheme),COSMO,eq,&amp;&amp;;_SolvationScheme,Parameter(_Hamiltonian),MNDO/C,eq,Parameter(_Hamiltonian),AM1*,eq,||,Parameter(_Hamiltonian),AM1,eq,||,Parameter(_Hamiltonian),PM3,eq,||,Parameter(_Hamiltonian),MNDO/d,eq,||,Parameter(_Hamiltonian),MNDO,eq,||;_Thermodynamics,Parameter(_Frequency),True,eq;CreateThermodynamicsChart,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MinTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MaxTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_StepTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_UV_VIS,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;CreateUVChart,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||,Parameter(_UV_VIS),True,eq,&amp;&amp;;Output Directory,Parameter(Keep Output Files),True,eq</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Outputs_Definition" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Task Report;Report;Convergence Criteria Met;Converged;Total Energy;TotalEnergy;Enthalpy;Enthalpy;Entropy;Entropy;Heat Capacity;HeatCapacity;Energy Chart;EnergyChart;Convergence Chart;ConvergenceChart;Thermodynamics Chart;Thermodynamics;UV-Vis Chart;UVVis;Structure;Structure;Trajectory;Trajectory</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Extra_Outputs_Def" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Electronic Energy;ELECTRONIC ENERGY;Repulsive Energy;REPULSIVE ENERGY;Ionization Potential;IONIZATION POTENTIAL;HOMO Energy;HOMO;LUMO Energy;LUMO;Heat Of Formation;HEAT OF FORMATION;Zero Point Energy;ZPE;Total Dipole;TOTAL DIPOL;Dipole Moment;DIPOL;Quadrupole Moment;QUADPOL;Octupole Moment;OCTUPOL;ESP Charge;VESPA;Mulliken Charge;MULLIKEN CHARGES;Coulson Charge;COULSON CHARGES;Atomic Densities HOMO;ATOMIC DENSITIES HOMO;Atomic Densities LUMO;ATOMIC DENSITIES LUMO;Mean Polarizability;MEANPOL;Molecular Point Group;POINT-GROUP;Surface Area;MOLAREA;Electronic Levels;ELECTRONIC LEVELS;Propgen Descriptors;PROPGEN DESCRIPTORS</sci:value>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Halt</sci:value>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{37392346-E16E-4C97-ADFC-FCF74F17C7CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jul 28 10:50:24 2011</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Settings Mapper</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Settings Mapper</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Exec Core" version="2">
															<sci:arg name="Task Execution" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Execution Script File</sci:member>
																<sci:member>Module Name</sci:member>
																<sci:member>Task Name</sci:member>
																<sci:member>Task Run Method</sci:member>
																<sci:member>Settings File</sci:member>
															</sci:arg>
															<sci:arg name="Execution Script File" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Name of the execution script file, without extension, to be used by this component. The script needs to be stored in apps/scitegic/materials/lang/perl/ComponentModules/Core/Impl directory. If parameter value is not specified a GenericExec script will be used by default, which is appropriate for components with the following characteristic:
&lt;ul&gt;
&lt;li&gt;component produces 1 output record for each input record (1 in - 1 out)&lt;/li&gt; 
&lt;li&gt;task doesn&apos;t require any special preparation&lt;/li&gt;
&lt;li&gt;task is executed like: Modules-&gt;$(Module Name)-&gt;$(Task Name)-&gt;$(Task Run Method)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>VampExec</sci:value>
															</sci:arg>
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="Task Name" type="ExpressionType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds task name, or task name in quotes, for ex: &quot;Dynamics&quot;. For generated components this should always be __MS_Module_Task.</sci:help>
																<sci:value>__MS_Module_Task</sci:value>
															</sci:arg>
															<sci:arg name="Task Run Method" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds name of a method called to execute a task, or method name in quotes, for ex: &quot;Pawley&quot;. If value is not specified, &apos;Run&apos; will be is used by default. For generated components with custom execution method, this should always be __MS_Module_Exec.</sci:help>
															</sci:arg>
															<sci:arg name="Settings File" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>URL of a settings file to be used instead of UI parameters. For generated components this should always be $(Settings File). If value is not specified, settings files won&apos;t be used.</sci:help>
																<sci:value>$(Settings File)</sci:value>
															</sci:arg>
															<sci:arg name="Export Result Files" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export result files produced by task run. For generated components this should always be $(Keep Output Files), when such parameter is exposed on their UI and blank otherwise. When parameter value doesn&apos;t evaluate to True the result files are only available in Project/Documents directory on the server.</sci:help>
																<sci:member>Export Intermediate Files</sci:member>
																<sci:member>Intermediate Files to Export</sci:member>
																<sci:member>Root Output Directory</sci:member>
																<sci:value>$(Keep Output Files)</sci:value>
															</sci:arg>
															<sci:arg name="Export Intermediate Files" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export intermediate files. For generated components which has appropriate UI parameter this should always be &lt;i&gt;$(Keep Intermediate Files)&lt;/i&gt;, and blank otherwise. If value is not specified &lt;i&gt;True&lt;/i&gt; is used by default, but intermediate files are only exported if Intermediate Files to Export list is not empty. No intermediate files are exported if Export Result Files doesn&apos;t evaluate to &lt;i&gt;True&lt;/i&gt;.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Intermediate Files to Export" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds semicolon separated list of file extensions to export, or list in quotes like: &quot;arc;grd;cosmo&quot;. No intermediate files will be exported if list is empty or Export Intermediate Files or Export Result Files doesn&apos;t evaluate to True. For generated components which need to keep intermediates, this shuld always be set to __MS_Intermediate_Files.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>__MS_Intermediate_Files</sci:value>
															</sci:arg>
															<sci:arg name="Root Output Directory" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>URL of root directory for result files export. If not specified this will be $(JobDir)/Exports/$(RunId). For generated components this should be set to &lt;i&gt;$(Output Directory)&lt;/i&gt; when such a parameter is exposed on their UI. The parameter is only used if Export Result Files evaluates to &lt;i&gt;True&lt;/i&gt;.
</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>$(Output Directory)</sci:value>
															</sci:arg>
															<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Properties to Produce</sci:member>
																<sci:member>Get Result Document from Keys</sci:member>
																<sci:member>Generated Properties</sci:member>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys which to be export as properties, or list in quotes, like: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, all result key-value pairs will be exported. For generated components the value should be set to &lt;i&gt;__MS_Outputs_Definition&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;
Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;. To block export of all result key-values, provide empty list, like &quot;&quot;.
</sci:help>
																<sci:value>__MS_Outputs_Definition</sci:value>
															</sci:arg>
															<sci:arg name="Get Result Document from Keys" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys to be scanned for document to attach to output data record, or list in quotes like: &quot;Key1; Key2&quot;. Document from first key found will be used. If value is not specified, &quot;Structure;Trajectory&quot; will be used by default. For generated components this should always be set to __MS_Out_Document.</sci:help>
																<sci:value>__MS_Out_Document</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_Output_Properties</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Exec Core</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Aug 09 10:07:06 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Exec Core</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>CALCULATORNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{A25EE466-7063-4655-964D-556DA80569AF}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>390 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Exec Core</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Subprotocol" version="2">
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Preparation</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																		<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.9.0.30</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/coreutils</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>8</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>__MS_DSD_NumProc := 1;

if @&apos;Number of Parallel Threads&apos; is defined And RMatch(@&apos;Number of Parallel Threads&apos;, &quot;^\\d+$&quot;) then
	__MS_DSD_NumProc := @&apos;Number of Parallel Threads&apos;;		
end if;

/* reduce number of cores if it exceeds CPUCoresTotal */
if __MS_CPUCoresTotal is defined And __MS_DSD_NumProc &gt; __MS_CPUCoresTotal then
	__MS_DSD_NumProc := __MS_CPUCoresTotal;
	WarningText := &quot;Requested number of parallel threads was reduced to &quot; + __MS_DSD_NumProc +
				 &quot; as it exceeded CPUCoresTotal defined in Pipeline Pilot Server Administration Portal.&quot;;
end if;
</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Preparation</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																				<sci:value>__MS_QueueType,__MS_DSD_NumProc,__MS_BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Set Environment Variables</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>SUBPROTOCOLNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>378 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.48</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																						<sci:value>__MS_DSD_NumProc</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>MPI Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>9</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_QueueType)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_DSD_NumProc)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_QueueType is defined then
	@__MS_QueueType := __MS_QueueType;
end if;

__MS_QueueType is defined
</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Queued?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>666 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1 then
	@__MS_DSD_NumProc := __MS_DSD_NumProc;
end if;

__MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>MPI Run?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>4</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -820</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>5</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:connectid from="1" to="2" type="true"/>
																					<sci:connectid from="2" to="0" type="true"/>
																					<sci:connectid from="2" to="4" type="false"/>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="5" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>License Wait Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>378 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>10</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_BIOVIA_LIC_WAIT_TIMEOUT)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set Environment Variable</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot; then
	@__MS_BIOVIA_LIC_WAIT_TIMEOUT := __MS_BIOVIA_LIC_WAIT_TIMEOUT;
end if;

__MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot;

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Use License Wait?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.PropertyFunctions.1">
																						<sci:component name="No-op" version="2">
																							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																								<sci:legalval selected="true">LeaveData</sci:legalval>
																								<sci:legalval>ClearData</sci:legalval>
																								<sci:legalval>DeleteData</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the action to perform</sci:help>
																								<sci:value>PassDataToPort</sci:value>
																							</sci:arg>
																							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the port to pass data to</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>No-op</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Evaluate Expression</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>None</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>6.0.1.1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>6</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
																							</sci:arg>
																						</sci:component>
																					</sci:data>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="6" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:connectid from="9" to="10" type="true"/>
																		</sci:protocol>
																	</sci:data>
																	<sci:connectid from="2" to="1" type="true"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Perl MaterialsScript (on Server)" version="2">
																	<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;MaterialsScript (Perl) script to execute.  The component provides &lt;i&gt;templated&lt;/i&gt; script, which must be replaced.&lt;/p&gt;

&lt;p&gt;Any Pipeline Pilot Perl (on Server) component must execute the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;In addition, a MaterialsScript component provides a method GetMaterialsDocument($data) which can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt;
</sci:help>
																		<sci:value>use ComponentModules::Core::CoreExecute;</sci:value>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:value>25</sci:value>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>For internal use only.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Comment</sci:help>
																		<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Usage</sci:help>
																		<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Execute &amp; generate properties</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol ShowComment</sci:help>
																		<sci:value>true</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Add Protocol Comment Here</sci:help>
																		<sci:value>Add Protocol Comment Here</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>SubProtocol</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>390 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Executes MaterialsScript for each record</sci:value>
																		<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Unprocessed data records</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>8.4.5.24</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Make Shortcut by Default</sci:legalval>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/materials</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>6</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Container Connection" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="WebExports" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;p/&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval>ComponentTakesInput</sci:legalval>
																				<sci:legalval>ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="MaterialsSystem" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>For internal use only.</sci:help>
																				<sci:value>$(MaterialsSystem)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>EmptyProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/materials</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue Mar 22 15:31:46 2011</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>A top-level component for building protocols.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>The user should customize this description and usage to describe 
the functioning of their derived protocol.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Container Connection</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>ComponentNode</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{08334F2A-00CB-4A37-503F-8483A2E5178D}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Manage connections to the Materials Studio container</sci:value>
																				<sci:value>This is an internal component, used by other components in the Materials Collection.  It shouldn&apos;t be used on its own.</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>8.4.5.20</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Made Link Into Copy</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Modified</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Materials\Utilities\Internals\MatServer\Container Connection</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol/>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																				<sci:member>Parallel Processing Options Batch Size</sci:member>
																				<sci:member>Parallel Processing Options Server</sci:member>
																				<sci:member>Parallel Processing Options Preserve Order</sci:member>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:value>25</sci:value>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																				<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																				<sci:member>Parallel Processing Options Server Processes</sci:member>
																				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Subprotocol 1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>COMPONENTNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -455</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>6.1.0.21</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/core</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue May 01 14:06:30 2007</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.ComponentPerlPlugin.1">
																				<sci:component name="Perl (on Server)" version="2">
																					<sci:arg name="Script" type="StringType" required="true" visibility="visible" multi="false">
																						<sci:help>&lt;p&gt;Perl script to execute.  Pipeline Pilot executes the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The usual Perl scoping rules apply to variables.  To pass a variable between the three required subroutines use package level variables, e.g., &lt;code&gt;$::variable&lt;/code&gt; or &lt;code&gt;my $variable&lt;/code&gt; declared outside the subroutines.
&lt;/p&gt;

&lt;p&gt;
The &lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onFinalize&lt;/i&gt; subroutines both receive the &lt;code&gt;pilot::Context Perl&lt;/code&gt; object as the only argument.  The &lt;i&gt;onProcess&lt;/i&gt; subroutine receives the &lt;code&gt;pilot::Context&lt;/code&gt; and &lt;code&gt;pilot::DataRecord&lt;/code&gt; Perl objects as its two arguments.
&lt;/p&gt;

&lt;p&gt;
pilot::Context provides access to globals and parameters.  A common way to get these is via a Perl hash reference.  For example, to get a &lt;i&gt;Source&lt;/i&gt; parameter value use
&lt;/p&gt;

&lt;pre&gt;
my $parametersHashRef = $context-&gt;getComponentParameters()-&gt;getHashRef();
my $source = $parametersHashRef-&gt;{&quot;Source&quot;};
&lt;/pre&gt;

&lt;p&gt;
To obtain the value of a global property called &lt;i&gt;Old&lt;/i&gt; and set a new global property called &lt;i&gt;New&lt;/i&gt; use
&lt;/p&gt;

&lt;pre&gt;
my $globalsHashRef = $context-&gt;getGlobalProperties()-&gt;getHashRef();
my $value = $globalsHashRef-&gt;{&quot;Old&quot;};
$globalsHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
Top level properties in a data record are accessed similarly.
&lt;/p&gt;

&lt;pre&gt;
my $node = $data-&gt;getRoot();
my $propertiesHashRef = $node-&gt;getProperties()-&gt;getHashRef();
my $value = $propertiesHashRef-&gt;{&quot;Old&quot;};
$propertiesHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must return one of the following component state values:
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
To explicitly route a data record to a port use
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::PassPort);
&lt;/pre&gt;

&lt;p&gt;
or
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::FailPort);
&lt;/pre&gt;

&lt;p&gt;
Data records can also be terminated internally by routing to &lt;code&gt;$pilot::NoPort&lt;/code&gt;.
&lt;/p&gt;</sci:help>
																						<sci:value>$(Script)</sci:value>
																					</sci:arg>
																					<sci:arg name="Use Package" type="StringType" required="false" visibility="visible" multi="false" implbase="{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}">
																						<sci:help>The name of an application package that contains Perl modules referenced by this component. By defining this package name, a package-specific module may be referenced with the &apos;use modulename;&apos; syntax.</sci:help>
																						<sci:value>scitegic/materials</sci:value>
																					</sci:arg>
																					<sci:arg name="Rebuild In RTC" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;
The Perl component functions by creating an instance of a Perl interpreter and
passing the supplied Perl script to the interpreter for execution. The
creation of the Perl interpreter occurs one time, while script execution
occurs once for initialization and finalization subroutines and once 
for each data record processed by the component.
&lt;/p&gt;
&lt;p&gt;
However, in the context of a Run To Completion (RTC) subprtocols, the Perl 
component would normally be re-instantiated for each data record, 
in common with other components in an RTC subprotocol. This implies the
re-creation of the Perl interpreter for each data record, which can be
relatively time consuming, particularly for Perl scripts which
themselves perform a rapid operation per data record.
&lt;/p&gt;
&lt;p&gt;
So, to avoid significant differences in performance timings between RTC
and non-RTC contexts, the Perl component&apos;s default behavior is to &lt;i&gt;keep&lt;/i&gt;
the same instance of the Perl interpreter throughout its life cycle. This
is indicated by the False setting of the &lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
However, there are some circumstances where Perl script or 3rd party modules
are not written in a way that allows them to safely re-use the same interpreter in this way. So if you see unexpected behavior from a Perl
component in a Run To Completion subprotocol, switch the &lt;em&gt;Rebuild In RTC&lt;/em&gt;
parameter to True to see if that resolves the issue.
&lt;/p&gt;
&lt;p&gt;
If that fixes the problem, and the Perl cannot be re-cast to 
handle the persistent interpreter,
you may need to trade performance for stability.
&lt;/p&gt;</sci:help>
																						<sci:legalval>True</sci:legalval>
																						<sci:legalval selected="true">False</sci:legalval>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/integration</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Fri Feb 05 11:55:51 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Perl (on Server)</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>COMPONENTNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The component this component is based upon.</sci:help>
																						<sci:value>Plug In</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Executes Perl code on the server</sci:value>
																						<sci:value>&lt;p&gt;Allows a Perl script to manipulate a data record&apos;s property list, the global
property list, and component behavior. The &lt;em&gt;Script&lt;/em&gt; parameter contains
the script that implements the component behavior, encoded in Perl. The following
subroutines must be defined in this text parameter (all three methods need to
be declared in the main scope): &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;onInitialize: &lt;/em&gt;Invoked once before the any data records
    arrive. This method receives one argument, a pilot::Context object. Also,
    it must return a component state, one of $pilot::ReadyForInputData, $pilot::DoneProcessingData, $pilot::ReadyForNewData or $pilot::ReadyForInputThenNewData. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onProcess&lt;/em&gt;: Called once per data record. This method
    receives two arguments, a pilot::Context and a pilot::DataRecord object and
    return a component state. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onFinalize&lt;/em&gt;: Called when no more data records are available.
    This method receives one argument, a pilot::Context object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must
return one of the following component state values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Any script outside of the subroutines is executed just prior to calling
    onInitialize.&lt;/li&gt;
	&lt;li&gt;The optional &lt;em&gt;Use Package&lt;/em&gt; parameter is used to identify a package
      that holds one or more Perl modules that are referenced by the component.
      In this way, much or all of a component&apos;s functionality can be maintained
      in a package module. This facilitates component upgrading, by centralizing
    the code.&lt;/li&gt;
    &lt;li&gt;The Perl include path for the library must be declared in the package.conf
      file for the named package.&lt;/li&gt;
    &lt;li&gt;Perl&apos;s &lt;em&gt;strict&lt;/em&gt; and &lt;em&gt;warnings&lt;/em&gt; directives can be very useful
      when writing scripts. To detect warnings, you need to create a handler
      to manage them, since by default, Perl sends them to STDERR, which is not
    easily accessible from within Pipeline Pilot. 
	&lt;p&gt;For example, the following
    script treats warnings as errors:&lt;/p&gt;
	&lt;p&gt;&lt;code&gt;use warnings;&lt;br /&gt;
	$SIG{__WARN__} = sub {die @_;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt; If you see unexpected or erroneous behavior when using this component
in a Run To Completion subprotocol, please look at the help text for the
&lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter, which is in the Implementation tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>6.0.1.4</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The original path within the database of this component.</sci:help>
																						<sci:value>Components\Database and Application Integration\Application Integration\Programmatic Integration\Perl (on Server)</sci:value>
																					</sci:arg>
																				</sci:component>
																			</sci:data>
																		</sci:protocol>
																	</sci:data>
																	<sci:version iVal="1"/>
																</sci:protocol>
															</sci:data>
															<sci:connectid from="8" to="6" type="true"/>
															<sci:version iVal="2"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract SD properties" version="2">
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="SDF Document Property" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds SDF document URL, for ex: __MS_SDF_URL.</sci:help>
																<sci:value>__MS_SDF_URL</sci:value>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of SDF attributes to be export as properties, or list in quotes, for ex: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, no properties will be exported. For generated components the value should be set to __MS_Extra_Outputs_Def. Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;.
</sci:help>
																<sci:value>__MS_Extra_Outputs_Def</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_SDProperties, __MS_SDFDocumentName,__IsSDFPresent</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract SD properties</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8BF08A69-552B-4A5B-9007-7C9C7BF1ED68}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>690 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 27 10:36:46 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract SD properties</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract Vibrational Data" version="2">
															<sci:arg name="Output Type" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of output file from which vibrational mode information will be extracted.</sci:help>
																<sci:legalval selected="true">VAMP</sci:legalval>
																<sci:legalval>DMol3</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="SDF Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds list of generated SDF propeties. For genereated components this should be __MS_Generated_SDF_Properties,</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract Vibrational Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0ED898BB-A171-4B01-95D8-2E5473B1D8A1}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>990 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Extracts vibrational data from VAMP or DMol3 output</sci:value>
																<sci:value>Extracts vibrational data from the output file created by a VAMP or DMol3 calculation. The file URL must be contained in either the MSVAMP_TaskReport (for VAMP output) or MSDMol3_TaskReport (for DMol3 output) property on the input data record. If vibrational information is contained in the output file then frequencies and intensities are added to the data record as array properties. </sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Jul 26 13:07:08 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract Vibrational Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Clear Internal Data" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_Failed</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Clear Internal Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1B241797-6411-49AE-9CB1-2E8C2C0FC316}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>2190 -185</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Clears any internal data</sci:value>
																<sci:value>&lt;p&gt;Clears internal data such as internal properties and nodes.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.2.500</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jul 26 10:03:17 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Clear Internal Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1290 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="MS Mark As Failure" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Mark As Failure</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{5A9C91F6-BF88-425B-A04E-9915868E06F4}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1590 -275</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.18</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Mar 10 10:27:01 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\MS Mark As Failure</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1890 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="4" to="0" type="true"/>
													<sci:connectid from="4" to="5" type="false"/>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="0" to="5" type="false"/>
													<sci:connectid from="1" to="2" type="true"/>
													<sci:connectid from="1" to="5" type="false"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="5" type="false"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="6" to="7" type="true"/>
													<sci:connectid from="7" to="3" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Geometry Optimization (VAMP)" version="2">
											<sci:arg name="Maximum Force" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0.01 and 10&quot;);parameter() &gt;=  0.01 and parameter() &lt;= 10;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-4 and 1&quot;);parameter() &gt;=  1e-4 and parameter() &lt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>0.2</sci:value>
											</sci:arg>
											<sci:arg name="Generate Hessian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">Partial</sci:legalval>
												<sci:legalval>Exact</sci:legalval>
											</sci:arg>
											<sci:arg name="Optimize Internals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Energy" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
												<sci:member>Hamiltonian</sci:member>
												<sci:member>Multiplicity</sci:member>
												<sci:member>Spin State</sci:member>
												<sci:member>Charge</sci:member>
												<sci:member>Electronic</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Hamiltonian)</sci:value>
											</sci:arg>
											<sci:arg name="Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>$(Multiplicity)</sci:value>
											</sci:arg>
											<sci:arg name="Spin State" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:value>A-UHF</sci:value>
											</sci:arg>
											<sci:arg name="Charge" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between -10000 and 10000&quot;);parameter() &gt;=  -10000 and parameter() &lt;= 10000;</sci:validscript>
												<sci:value>$(Charge)</sci:value>
											</sci:arg>
											<sci:arg name="Electronic" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
												<sci:member>SCF</sci:member>
												<sci:member>CI Scheme</sci:member>
												<sci:member>Solvation Scheme</sci:member>
											</sci:arg>
											<sci:arg name="SCF" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
												<sci:member>Convergence Scheme</sci:member>
												<sci:member>SCF Tolerance</sci:member>
												<sci:member>Maximum SCF Cycles</sci:member>
											</sci:arg>
											<sci:arg name="Convergence Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:legalval>Standard</sci:legalval>
												<sci:legalval>Pulay</sci:legalval>
												<sci:legalval>IIS</sci:legalval>
												<sci:legalval selected="true">Pulay/IIS</sci:legalval>
											</sci:arg>
											<sci:arg name="SCF Tolerance" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1e-10 and 10&quot;);parameter() &gt;=  1e-10 and parameter() &lt;= 10;</sci:validscript>
												<sci:value>2e-4</sci:value>
											</sci:arg>
											<sci:arg name="Maximum SCF Cycles" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 1000&quot;);parameter() &gt;=  1 and parameter() &lt;= 1000;</sci:validscript>
												<sci:value>750</sci:value>
											</sci:arg>
											<sci:arg name="CI Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>Number of Orbitals</sci:member>
												<sci:member>Requested Number of Virtual Orbitals</sci:member>
												<sci:member>Ignore Degenerate Orbitals</sci:member>
												<sci:member>Use Level Shifting</sci:member>
												<sci:member>Level Shift</sci:member>
												<sci:value>$(__CIScheme)</sci:value>
											</sci:arg>
											<sci:arg name="Number of Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 2&quot;);parameter() &gt;= 2;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Requested Number of Virtual Orbitals" type="LongType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Value should be greater than or equal to 1&quot;);parameter() &gt;= 1;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Ignore Degenerate Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Use Level Shifting" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;CI Scheme&apos; is equal to &apos;Rumer CI&apos; or &apos;PECI&apos; or &apos;CIS&apos; or &apos;Full&apos; or &apos;CISD&apos;&quot;;

if (not (Parameter(&apos;CI Scheme&apos;) eq &apos;Rumer CI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;PECI&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CIS&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;Full&apos; or Parameter(&apos;CI Scheme&apos;) eq &apos;CISD&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Level Shift" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 0 and 1000&quot;);parameter() &gt;=  0 and parameter() &lt;= 1000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Use Level Shifting&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Use Level Shifting&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Solvation Scheme" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:member>COSMO Solvent</sci:member>
												<sci:member>Dielectric Constant</sci:member>
												<sci:value>$(Solvation Scheme)</sci:value>
											</sci:arg>
											<sci:arg name="COSMO Solvent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(COSMO Solvent)</sci:value>
											</sci:arg>
											<sci:arg name="Dielectric Constant" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 1 and 10000&quot;);parameter() &gt;=  1 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;COSMO Solvent&quot;);
if (#tmpStr ne &quot;Customized&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;COSMO Solvent&apos; to &apos;Customized&apos;&quot;;
end if;

#tmpStr := Parameter(&quot;Solvation Scheme&quot;);
if (#tmpStr ne &quot;COSMO&quot;) then
	#isEnabled := 0;
	if (#disableText ne &quot;&quot;) then #disableText .= &quot; and&quot;; end if;
	#disableText .= &quot; change &apos;Solvation Scheme&apos; to &apos;COSMO&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(Dielectric Constant)</sci:value>
											</sci:arg>
											<sci:arg name="Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
												<sci:member>Vibrational Frequencies</sci:member>
												<sci:member>UV-Vis</sci:member>
												<sci:member>Localized Orbitals</sci:member>
												<sci:member>Propgen Descriptors</sci:member>
												<sci:member>Calculate Mulliken Charges</sci:member>
												<sci:member>Calculate ESP Charges</sci:member>
												<sci:enabledscript>#isEnabled := 1;
if (Parameter(&apos;Settings File&apos;) ne &apos;&apos;) then
	#isEnabled := 0;
	SetDisabledDetails(&quot;Parameter inactive when Settings File in use&quot;);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Vibrational Frequencies" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
												<sci:member>Thermodynamics</sci:member>
												<sci:member>Minimum Temperature</sci:member>
												<sci:member>Maximum Temperature</sci:member>
												<sci:member>Temperature Step Size</sci:member>
												<sci:value>$(__Freq)</sci:value>
											</sci:arg>
											<sci:arg name="Thermodynamics" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Minimum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Maximum Temperature" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 100 and 10000&quot;);parameter() &gt;=  100 and parameter() &lt;= 10000;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>700</sci:value>
											</sci:arg>
											<sci:arg name="Temperature Step Size" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
												<sci:validscript>SetInvalidDetails(&quot;Allowed value is between 10 and 100&quot;);parameter() &gt;=  10 and parameter() &lt;= 100;</sci:validscript>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Thermodynamics&apos; is equal to &apos;True&apos; and &apos;Vibrational Frequencies&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Thermodynamics&apos;) eq &apos;True&apos; and Parameter(&apos;Vibrational Frequencies&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>50</sci:value>
											</sci:arg>
											<sci:arg name="UV-Vis" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&quot;;

#tmpStr := Parameter(&quot;CI Scheme&quot;);
if (#tmpStr ne &quot;Full&quot; and #tmpStr ne &quot;CIS&quot; and #tmpStr ne &quot;CISD&quot; and #tmpStr ne &quot;PECI&quot; and #tmpStr ne &quot;Rumer CI&quot;) then
	#isEnabled := 0;
	#disableText .= &quot; change &apos;CI Scheme&apos; to &apos;Full&apos; or to &apos;CIS&apos; or to &apos;CISD&apos; or to &apos;PECI&apos; or to &apos;Rumer CI&apos;&quot;;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos;:&quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
												<sci:value>$(__UVVis)</sci:value>
											</sci:arg>
											<sci:arg name="Localized Orbitals" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Propgen Descriptors" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(__Propgen)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate Mulliken Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateMullikenCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Calculate ESP Charges" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
												<sci:value>$(_CalculateESPCharges)</sci:value>
											</sci:arg>
											<sci:arg name="Advanced" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
												<sci:member>Settings File</sci:member>
												<sci:member>Keep Output Files</sci:member>
											</sci:arg>
											<sci:arg name="Settings File" type="URLType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location of the settings file to use to override all other state parameters.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Output Files" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>&lt;p&gt;Specify whether to retain any results files from the server calculation. All files are stored in the location specified by the &lt;i&gt;Output Directory&lt;/i&gt;.&lt;/p&gt;</sci:help>
												<sci:member>Output Directory</sci:member>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Output Directory" type="DirectoryType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The location where the files produced will be stored.&lt;/p&gt;&lt;/p&gt;To add files to an existing Materials Studio project set this to the project&apos;s &quot;Documents&quot; folder. If this is not specified results are stored in &lt;code&gt;$(JobDir)/Exports&lt;/code&gt;.&lt;/p&gt;</sci:help>
												<sci:enabledscript>#isEnabled := 1;
#disableText := &quot;&apos;Keep Output Files&apos; is equal to &apos;True&apos;&quot;;

if (not (Parameter(&apos;Keep Output Files&apos;) eq &apos;True&apos;)) then
	#isEnabled := 0;
end if;

if (#isEnabled == 0) then
	SetDisabledDetails(&quot;To enable &apos;&quot;.ParameterName().&quot;&apos; ensure that: &quot;.#disableText);
end if;

#isEnabled;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval>Halt</sci:legalval>
												<sci:legalval selected="true">Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Refines the geometry of a structure to minimize its energy using VAMP</sci:value>
												<sci:value>&lt;p&gt;After a structure is built, it usually needs to be refined to bring it to a stable geometry. The refinement process is known as optimization, and is an iterative procedure in which the coordinates of the atoms are adjusted so that the energy of the structure is brought to a stationary point, i.e., one in which the forces on the atoms are zero.&lt;/p&gt;&lt;p&gt;You can request an energy minimization, a search for a relative minimum on the energy hypersurface. The geometry corresponding to this structure should have a close resemblance to an actual physical structure of the system at equilibrium. You can also perform an optimization on a transition state.&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>9.0.0.14</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Nov 01 12:54:17 2012</sci:value>
											</sci:arg>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>CALCULATORNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{FDBEAFBC-E7DD-4f77-9E91-A70DC304F57D}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2190 -1715</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>34</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Quantum Mechanics\Geometry Optimization (VAMP)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Subprotocol" version="2">
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
														<sci:member>RunToCompletion Categorize Using</sci:member>
														<sci:legalval selected="true">False</sci:legalval>
														<sci:legalval>True - For Each Data Record</sci:legalval>
														<sci:legalval>True - For Each Category</sci:legalval>
													</sci:arg>
													<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
														<sci:member>Parallel Processing Options Batch Size</sci:member>
														<sci:member>Parallel Processing Options Server</sci:member>
														<sci:member>Parallel Processing Options Preserve Order</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
														<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
														<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
														<sci:member>Parallel Processing Options Server Processes</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
														<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Run subprotocol on grid engine if available.</sci:help>
														<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
														<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
														<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
														<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
														<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval>Halt</sci:legalval>
														<sci:legalval selected="true">Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>VAMP Calculation</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ComponentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>790</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
														<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.9.0.30</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/coreutils</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Settings Mapper" version="2">
															<sci:arg name="CUT_HERE_MAPPER" type="StringType" required="false" visibility="visible" multi="false" uimpl="false"/>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="__MS_Module" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>VAMP</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Module_Task" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>GeometryOptimization</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Out_Document" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Structure</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Intermediate_Files" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>sdf</sci:value>
															</sci:arg>
															<sci:arg name="OrbitalEigenvectors" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Computes FrontierOrbitals.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="CreateEnergyEvolutionChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts of energy over the calculation and the change in energy and gradient norm over the calculation cycle.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_ForceConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence threshold for the maximum force change, in kcal/mol/&amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Force</sci:value>
															</sci:arg>
															<sci:arg name="_MaximumDisplacement" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum allowed change of any Cartesian coordinate, in &amp;Aring;.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_GenerateHessian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method for generating the initial Hessian matrix, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Partial&lt;/strong&gt; - the diagonal elements of the Hessian matrix are calculated for all internal parameters except bond lengths to hydrogen, for which estimated values are used.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Exact&lt;/strong&gt; - the entire Hessian matrix is calculated in the first optimization cycle. This is time-consuming, but may be worthwhile for very difficult optimizations where it is suspected that the final geometry is close to the initial coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Generate Hessian</sci:value>
															</sci:arg>
															<sci:arg name="_OptimizeInternals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether internal coordinates should be used for optimizing the structure, rather than Cartesian coordinates.&lt;/p&gt;&lt;p&gt;Usually, using internal coordinates is more efficient, so the calculation will converge more quickly. However, there are instances when an optimization may fail, for example due to bonds becoming linear, which may be resolved by optimizing in Cartesian space.&lt;/p&gt;</sci:help>
																<sci:value>Optimize Internals</sci:value>
															</sci:arg>
															<sci:arg name="_Energy" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Energy Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Hamiltonian</sci:member>
																<sci:member>_Multiplicity</sci:member>
																<sci:member>_SpinPolarization</sci:member>
																<sci:member>_Charge</sci:member>
																<sci:member>_Electronic</sci:member>
																<sci:value>Energy</sci:value>
															</sci:arg>
															<sci:arg name="_Hamiltonian" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The Hamiltonian to use for the calculation.&lt;/p&gt;&lt;p&gt;Only neglect of diatomic differential overlap (NDDO) Hamiltonians are available for geometry optimization. Zerner&apos;s intermediate neglect of differential overlap (ZINDO) Hamiltonians can not be used.&lt;/p&gt;&lt;p&gt;Options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;MNDO/C&lt;/strong&gt; - a MNDO method designed to be used with a perturbational theory correction for electron correlation. It performs well in situations when excited states are important.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO&lt;/strong&gt; - modified neglect of differential overlap, not recommended for use with hypervalent compounds because it uses only s and p atomic orbitals and does not reproduce hydrogen bonds&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1&lt;/strong&gt; - Austin model 1 is an s and p orbital-based MNDO-like method, with extra Gaussian potentials for the core-core repulsion energy to allow it to form hydrogen bonds. A good general method for organic compounds, peptides, etc., although it is not recommended for use with phosphorus and sulfur compounds.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM3&lt;/strong&gt; - parameterization model 3 is quantum mechanically identical to AM1, but more parameters were treated as variables during the parameterization and so it performs somewhat better than AM1 for heats of formation. PM3 also gives the correct geometries for hydrogen bonds. However, rotation barriers of partial Pi bonds are very low in PM3.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;AM1*&lt;/strong&gt; - similar to AM1, but elements P, S, and Cl have been reparameterized using an additional set of d orbitals in the basis set and two-center core-core parameters&lt;/li&gt;&lt;li&gt;&lt;strong&gt;MNDO/d&lt;/strong&gt; - performs significantly better than the other Hamiltonians for most phosphorus compounds, hypervalent compounds, and for the halogens&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PM6&lt;/strong&gt; - contains modified NDDO core-core interaction terms and a new, completely optimized set of atomic and diatomic parameters. 70 elements have been successfully parameterized allowing excellent description of main group and hypervalent compounds. Several long-standing faults in AM1 and PM3 have been corrected and significant improvements have been made in the prediction of geometries.&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Hamiltonian</sci:value>
															</sci:arg>
															<sci:arg name="_Multiplicity" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The multiplicity used to perform a calculation on a specific spin state, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Auto&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Singlet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Doublet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triplet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quartet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Quintet&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sextet&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Multiplicity</sci:value>
															</sci:arg>
															<sci:arg name="_SpinPolarization" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The exchange-correlation functional theory level, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;RHF&lt;/strong&gt; - restricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;UHF&lt;/strong&gt; - unrestricted Hartree-Fock&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A-UHF&lt;/strong&gt; - annihilated unrestricted Hartree-Fock (half-electron method)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ROHF&lt;/strong&gt; - restricted open-shell Hartree-Fock&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Spin State</sci:value>
															</sci:arg>
															<sci:arg name="_Charge" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The total charge on the unit cell.&lt;/p&gt;</sci:help>
																<sci:value>Charge</sci:value>
															</sci:arg>
															<sci:arg name="_Electronic" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Electronic Parameters&lt;/p&gt;</sci:help>
																<sci:member>_SCF</sci:member>
																<sci:member>_CIScheme</sci:member>
																<sci:member>_SolvationScheme</sci:member>
																<sci:value>Electronic</sci:value>
															</sci:arg>
															<sci:arg name="_SCF" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;SCF Parameters&lt;/p&gt;</sci:help>
																<sci:member>_ConvergenceScheme</sci:member>
																<sci:member>_SCFConvergence</sci:member>
																<sci:member>_MaxSCFCycles</sci:member>
																<sci:value>SCF</sci:value>
															</sci:arg>
															<sci:arg name="_ConvergenceScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The convergence scheme to be used in the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt; - if this fails after the maximum number of iterations, the level shift method and Pulay convergers are tried for further iterations.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay&lt;/strong&gt; - can give a very fast convergence, however, there are no simple rules to indicate when it is suitable&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IIS&lt;/strong&gt; - is the most reliable SCF converger, but can be slow to converge so &lt;i&gt;Maximum SCF Cycles&lt;/i&gt; may need to be increased&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pulay/IIS&lt;/strong&gt; - a combination of Pulay and IIS&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>Convergence Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_SCFConvergence" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The threshold to be used to determine whether an SCF calculation has converged, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Coarse&lt;/strong&gt; - 2 x 10&lt;sup&gt;-4&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt; - 10&lt;sup&gt;-5&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fine&lt;/strong&gt; - 5 x 10&lt;sup&gt;-7&lt;/sup&gt; eV atom&lt;sup&gt;-1&lt;/sup&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>SCF Tolerance</sci:value>
															</sci:arg>
															<sci:arg name="_MaxSCFCycles" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The maximum number of SCF iterations allowed for an energy calculation. The calculation will end after the specified number of iterations, even if the SCF has not converged.&lt;/p&gt;</sci:help>
																<sci:value>Maximum SCF Cycles</sci:value>
															</sci:arg>
															<sci:arg name="_CIScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The type of configuration interaction treatment for the calculation to perform, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No CI calculation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt; - All available permutations of the electrons in the specified molecular orbitals will be used&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CIS&lt;/strong&gt; - All single excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CISD&lt;/strong&gt; - All single and double excitations will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PECI&lt;/strong&gt; - All single and all double excitations in which a complete electron pair is promoted will be included&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Rumer CI&lt;/strong&gt; - Excitations drawn from Rumer diagrams (beyond the singlet level of excitation) will be included&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:member>_CINumOrbitals</sci:member>
																<sci:member>_CIRequestedNumVirtOrbitals</sci:member>
																<sci:member>_IgnoreDegenerateMOs</sci:member>
																<sci:member>_UseLevelShifting</sci:member>
																<sci:member>_LevelShift</sci:member>
																<sci:value>CI Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CINumOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of orbitals to include in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Number of Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_CIRequestedNumVirtOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The number of the orbitals which are virtual.&lt;/p&gt;</sci:help>
																<sci:value>Requested Number of Virtual Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_IgnoreDegenerateMOs" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether degenerate orbitals should be ignored in the configuration interaction calculation.&lt;/p&gt;</sci:help>
																<sci:value>Ignore Degenerate Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_UseLevelShifting" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the level shifting method should be used in the calculation.&lt;/p&gt;</sci:help>
																<sci:value>Use Level Shifting</sci:value>
															</sci:arg>
															<sci:arg name="_LevelShift" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The amount, in eV, by which to increase the energy of the virtual orbitals.&lt;/p&gt;</sci:help>
																<sci:value>Level Shift</sci:value>
															</sci:arg>
															<sci:arg name="_SolvationScheme" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The method to be used to simulate the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; - No solvent environment simulation will be performed&lt;/li&gt;&lt;li&gt;&lt;strong&gt;COSMO&lt;/strong&gt; - Use the conductor-like screening model&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &quot;COSMO&quot; is not  available for  &lt;i&gt;Hamiltonian&lt;/i&gt; &quot;PM6&quot;.&lt;/p&gt;</sci:help>
																<sci:member>_CosmoSolvent</sci:member>
																<sci:member>_SolventDielectric</sci:member>
																<sci:value>Solvation Scheme</sci:value>
															</sci:arg>
															<sci:arg name="_CosmoSolvent" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The COSMO solvent to be used as the solvent environment for the calculation, options are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Acetone&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Acetonitrile&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Benzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Carbon Tetrachloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Chloroform&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diethyl Ether&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Dimethyl Sulfoxide&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ethanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methanol&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Methylene Chloride&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;n-Hexadecane&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nitrobenzene&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pyridine&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Water&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Customized&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
																<sci:value>COSMO Solvent</sci:value>
															</sci:arg>
															<sci:arg name="_SolventDielectric" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The custom solvent dielectic constant.&lt;/p&gt;</sci:help>
																<sci:value>Dielectric Constant</sci:value>
															</sci:arg>
															<sci:arg name="_Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Properties Parameters&lt;/p&gt;</sci:help>
																<sci:member>_Frequency</sci:member>
																<sci:member>_UV_VIS</sci:member>
																<sci:member>CreateUVChart</sci:member>
																<sci:member>_LocalizedOrbitals</sci:member>
																<sci:member>_Propgen</sci:member>
																<sci:member>_Mulliken</sci:member>
																<sci:member>_ESPcharges</sci:member>
																<sci:value>Properties</sci:value>
															</sci:arg>
															<sci:arg name="_Frequency" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether to calculate vibrational frequencies.&lt;/p&gt;</sci:help>
																<sci:member>_Thermodynamics</sci:member>
																<sci:member>CreateThermodynamicsChart</sci:member>
																<sci:member>_MinTemp</sci:member>
																<sci:member>_MaxTemp</sci:member>
																<sci:member>_StepTemp</sci:member>
																<sci:value>Vibrational Frequencies</sci:value>
															</sci:arg>
															<sci:arg name="_Thermodynamics" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the enthalpy, entropy, and heat capacity should be computed across a specified temperature range and used to generate a chart.&lt;/p&gt;</sci:help>
																<sci:value>Thermodynamics</sci:value>
															</sci:arg>
															<sci:arg name="CreateThermodynamicsChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates charts for enthalpy, entropy, and heat capacity as functions of temperature.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_MinTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The lower limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Minimum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_MaxTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The upper limit of the temperature range for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Maximum Temperature</sci:value>
															</sci:arg>
															<sci:arg name="_StepTemp" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The size of the temperature steps for which thermodynamic properties will be computed, in K.&lt;/p&gt;</sci:help>
																<sci:value>Temperature Step Size</sci:value>
															</sci:arg>
															<sci:arg name="_UV_VIS" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the electronic states, energy (in eV and nm), multiplicity, and oscillator strength should be calculated and a UV-Vis spectrum generated.&lt;/p&gt;</sci:help>
																<sci:value>UV-Vis</sci:value>
															</sci:arg>
															<sci:arg name="CreateUVChart" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Creates a UV spectrum.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="_LocalizedOrbitals" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether the localized orbitals should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Localized Orbitals</sci:value>
															</sci:arg>
															<sci:arg name="_Propgen" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether PROPGEN descriptors should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Propgen Descriptors</sci:value>
															</sci:arg>
															<sci:arg name="_Mulliken" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether Mulliken charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate Mulliken Charges</sci:value>
															</sci:arg>
															<sci:arg name="_ESPcharges" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specify whether ESP charges should be calculated.&lt;/p&gt;</sci:help>
																<sci:value>Calculate ESP Charges</sci:value>
															</sci:arg>
															<sci:arg name="_Advanced" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Advanced Parameters&lt;/p&gt;</sci:help>
																<sci:value>Advanced</sci:value>
															</sci:arg>
															<sci:arg name="PropertyMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>OrbitalEigenvectors,CreateEnergyEvolutionChart,_ForceConvergence,_MaximumDisplacement,_GenerateHessian,_OptimizeInternals,_Hamiltonian,_Multiplicity,_SpinPolarization,_Charge,_ConvergenceScheme,_SCFConvergence,_MaxSCFCycles,_CIScheme,_CINumOrbitals,_CIRequestedNumVirtOrbitals,_IgnoreDegenerateMOs,_UseLevelShifting,_LevelShift,_SolvationScheme,_CosmoSolvent,_SolventDielectric,_Frequency,_Thermodynamics,CreateThermodynamicsChart,_MinTemp,_MaxTemp,_StepTemp,_UV_VIS,CreateUVChart,_LocalizedOrbitals,_Propgen,_Mulliken,_ESPcharges</sci:value>
															</sci:arg>
															<sci:arg name="EnumValMapping" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>COSMO Solvent=Carbon Tetrachloride;Carbon tetrachloride;Diethyl Ether;Diethyl ether;Dimethyl Sulfoxide;Dimethyl sulfoxide;Methylene Chloride;Methylene chloride;n-Hexane;n-hexane;n-Hexadecane;n-hexadecane,CI Scheme=Rumer CI;RumerCI</sci:value>
															</sci:arg>
															<sci:arg name="ParamDependencies" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>_CINumOrbitals,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_CIRequestedNumVirtOrbitals,Parameter(_CIScheme),Rumer CI,eq;_IgnoreDegenerateMOs,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_UseLevelShifting,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;_LevelShift,Parameter(_UseLevelShifting),True,eq;_CosmoSolvent,Parameter(_SolvationScheme),COSMO,eq;_SolventDielectric,Parameter(_CosmoSolvent),Customized,eq,Parameter(_SolvationScheme),COSMO,eq,&amp;&amp;;_SolvationScheme,Parameter(_Hamiltonian),MNDO/C,eq,Parameter(_Hamiltonian),AM1*,eq,||,Parameter(_Hamiltonian),AM1,eq,||,Parameter(_Hamiltonian),PM3,eq,||,Parameter(_Hamiltonian),MNDO/d,eq,||,Parameter(_Hamiltonian),MNDO,eq,||;_Thermodynamics,Parameter(_Frequency),True,eq;CreateThermodynamicsChart,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MinTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_MaxTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_StepTemp,Parameter(_Thermodynamics),True,eq,Parameter(_Frequency),True,eq,&amp;&amp;;_UV_VIS,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||;CreateUVChart,Parameter(_CIScheme),Rumer CI,eq,Parameter(_CIScheme),PECI,eq,||,Parameter(_CIScheme),CIS,eq,||,Parameter(_CIScheme),Full,eq,||,Parameter(_CIScheme),CISD,eq,||,Parameter(_UV_VIS),True,eq,&amp;&amp;;Output Directory,Parameter(Keep Output Files),True,eq</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Outputs_Definition" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Task Report;Report;Convergence Criteria Met;Converged;Total Energy;TotalEnergy;Enthalpy;Enthalpy;Entropy;Entropy;Heat Capacity;HeatCapacity;Energy Chart;EnergyChart;Convergence Chart;ConvergenceChart;Thermodynamics Chart;Thermodynamics;UV-Vis Chart;UVVis;Structure;Structure;Trajectory;Trajectory</sci:value>
															</sci:arg>
															<sci:arg name="__MS_Extra_Outputs_Def" type="StringType" required="false" visibility="visible" multi="false">
																<sci:value>Electronic Energy;ELECTRONIC ENERGY;Repulsive Energy;REPULSIVE ENERGY;Ionization Potential;IONIZATION POTENTIAL;HOMO Energy;HOMO;LUMO Energy;LUMO;Heat Of Formation;HEAT OF FORMATION;Zero Point Energy;ZPE;Total Dipole;TOTAL DIPOL;Dipole Moment;DIPOL;Quadrupole Moment;QUADPOL;Octupole Moment;OCTUPOL;ESP Charge;VESPA;Mulliken Charge;MULLIKEN CHARGES;Coulson Charge;COULSON CHARGES;Atomic Densities HOMO;ATOMIC DENSITIES HOMO;Atomic Densities LUMO;ATOMIC DENSITIES LUMO;Mean Polarizability;MEANPOL;Molecular Point Group;POINT-GROUP;Surface Area;MOLAREA;Electronic Levels;ELECTRONIC LEVELS;Propgen Descriptors;PROPGEN DESCRIPTORS</sci:value>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Halt</sci:value>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{37392346-E16E-4C97-ADFC-FCF74F17C7CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Jul 28 10:50:24 2011</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Settings Mapper</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Settings Mapper</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Exec Core" version="2">
															<sci:arg name="Task Execution" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Execution Script File</sci:member>
																<sci:member>Module Name</sci:member>
																<sci:member>Task Name</sci:member>
																<sci:member>Task Run Method</sci:member>
																<sci:member>Settings File</sci:member>
															</sci:arg>
															<sci:arg name="Execution Script File" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Name of the execution script file, without extension, to be used by this component. The script needs to be stored in apps/scitegic/materials/lang/perl/ComponentModules/Core/Impl directory. If parameter value is not specified a GenericExec script will be used by default, which is appropriate for components with the following characteristic:
&lt;ul&gt;
&lt;li&gt;component produces 1 output record for each input record (1 in - 1 out)&lt;/li&gt; 
&lt;li&gt;task doesn&apos;t require any special preparation&lt;/li&gt;
&lt;li&gt;task is executed like: Modules-&gt;$(Module Name)-&gt;$(Task Name)-&gt;$(Task Run Method)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:value>VampExec</sci:value>
															</sci:arg>
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="Task Name" type="ExpressionType" required="true" visibility="visible" multi="false">
																<sci:help>Name of a property which holds task name, or task name in quotes, for ex: &quot;Dynamics&quot;. For generated components this should always be __MS_Module_Task.</sci:help>
																<sci:value>__MS_Module_Task</sci:value>
															</sci:arg>
															<sci:arg name="Task Run Method" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds name of a method called to execute a task, or method name in quotes, for ex: &quot;Pawley&quot;. If value is not specified, &apos;Run&apos; will be is used by default. For generated components with custom execution method, this should always be __MS_Module_Exec.</sci:help>
															</sci:arg>
															<sci:arg name="Settings File" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>URL of a settings file to be used instead of UI parameters. For generated components this should always be $(Settings File). If value is not specified, settings files won&apos;t be used.</sci:help>
																<sci:value>$(Settings File)</sci:value>
															</sci:arg>
															<sci:arg name="Export Result Files" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export result files produced by task run. For generated components this should always be $(Keep Output Files), when such parameter is exposed on their UI and blank otherwise. When parameter value doesn&apos;t evaluate to True the result files are only available in Project/Documents directory on the server.</sci:help>
																<sci:member>Export Intermediate Files</sci:member>
																<sci:member>Intermediate Files to Export</sci:member>
																<sci:member>Root Output Directory</sci:member>
																<sci:value>$(Keep Output Files)</sci:value>
															</sci:arg>
															<sci:arg name="Export Intermediate Files" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:help>Whether to export intermediate files. For generated components which has appropriate UI parameter this should always be &lt;i&gt;$(Keep Intermediate Files)&lt;/i&gt;, and blank otherwise. If value is not specified &lt;i&gt;True&lt;/i&gt; is used by default, but intermediate files are only exported if Intermediate Files to Export list is not empty. No intermediate files are exported if Export Result Files doesn&apos;t evaluate to &lt;i&gt;True&lt;/i&gt;.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Intermediate Files to Export" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds semicolon separated list of file extensions to export, or list in quotes like: &quot;arc;grd;cosmo&quot;. No intermediate files will be exported if list is empty or Export Intermediate Files or Export Result Files doesn&apos;t evaluate to True. For generated components which need to keep intermediates, this shuld always be set to __MS_Intermediate_Files.</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>__MS_Intermediate_Files</sci:value>
															</sci:arg>
															<sci:arg name="Root Output Directory" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>URL of root directory for result files export. If not specified this will be $(JobDir)/Exports/$(RunId). For generated components this should be set to &lt;i&gt;$(Output Directory)&lt;/i&gt; when such a parameter is exposed on their UI. The parameter is only used if Export Result Files evaluates to &lt;i&gt;True&lt;/i&gt;.
</sci:help>
																<sci:enabledscript>Parameter(&quot;Export Result Files&quot;) eq &quot;True&quot;</sci:enabledscript>
																<sci:value>$(Output Directory)</sci:value>
															</sci:arg>
															<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
																<sci:member>Properties to Produce</sci:member>
																<sci:member>Get Result Document from Keys</sci:member>
																<sci:member>Generated Properties</sci:member>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="ExpressionType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys which to be export as properties, or list in quotes, like: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, all result key-value pairs will be exported. For generated components the value should be set to &lt;i&gt;__MS_Outputs_Definition&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;
Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;. To block export of all result key-values, provide empty list, like &quot;&quot;.
</sci:help>
																<sci:value>__MS_Outputs_Definition</sci:value>
															</sci:arg>
															<sci:arg name="Get Result Document from Keys" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of result object keys to be scanned for document to attach to output data record, or list in quotes like: &quot;Key1; Key2&quot;. Document from first key found will be used. If value is not specified, &quot;Structure;Trajectory&quot; will be used by default. For generated components this should always be set to __MS_Out_Document.</sci:help>
																<sci:value>__MS_Out_Document</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_Output_Properties</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval>Halt</sci:legalval>
																<sci:legalval selected="true">Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Exec Core</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Aug 09 10:07:06 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Exec Core</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>CALCULATORNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{A25EE466-7063-4655-964D-556DA80569AF}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>390 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Exec Core</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Subprotocol" version="2">
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																		<sci:member>RunToCompletion Categorize Using</sci:member>
																		<sci:legalval selected="true">False</sci:legalval>
																		<sci:legalval>True - For Each Data Record</sci:legalval>
																		<sci:legalval>True - For Each Category</sci:legalval>
																	</sci:arg>
																	<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																		<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Run subprotocol on grid engine if available.</sci:help>
																		<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																		<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																		<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval selected="true">Halt</sci:legalval>
																		<sci:legalval>Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Preparation</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>SUBPROTOCOLNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>790</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>90 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																		<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value/>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>7.9.0.30</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/coreutils</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>8</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.EvaluateExpression.1">
																		<sci:component name="Custom Manipulator (PilotScript)" version="2">
																			<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																				<sci:member>Initial Expression</sci:member>
																				<sci:member>Final Expression</sci:member>
																				<sci:member>Keep Calculated Properties</sci:member>
																				<sci:value>__MS_DSD_NumProc := 1;

if @&apos;Number of Parallel Threads&apos; is defined And RMatch(@&apos;Number of Parallel Threads&apos;, &quot;^\\d+$&quot;) then
	__MS_DSD_NumProc := @&apos;Number of Parallel Threads&apos;;		
end if;

/* reduce number of cores if it exceeds CPUCoresTotal */
if __MS_CPUCoresTotal is defined And __MS_DSD_NumProc &gt; __MS_CPUCoresTotal then
	__MS_DSD_NumProc := __MS_CPUCoresTotal;
	WarningText := &quot;Requested number of parallel threads was reduced to &quot; + __MS_DSD_NumProc +
				 &quot; as it exceeded CPUCoresTotal defined in Pipeline Pilot Server Administration Portal.&quot;;
end if;
</sci:value>
																			</sci:arg>
																			<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																				<sci:help>Version of expression parser to use.</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Preparation</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>EXPRESSIONNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																				<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.35</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>2</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
																			</sci:arg>
																		</sci:component>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																				<sci:value>__MS_QueueType,__MS_DSD_NumProc,__MS_BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Set Environment Variables</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>SUBPROTOCOLNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>378 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>7.0.0.48</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/generic</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Mon Feb 25 11:10:06 2008</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																						<sci:value>__MS_DSD_NumProc</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>MPI Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>9</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_QueueType)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_DSD_NumProc)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_QueueType is defined then
	@__MS_QueueType := __MS_QueueType;
end if;

__MS_QueueType is defined
</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Queued?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>666 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1 then
	@__MS_DSD_NumProc := __MS_DSD_NumProc;
end if;

__MS_DSD_NumProc is defined And __MS_DSD_NumProc &gt; 1

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>MPI Run?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>MSC_QueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset MSCQueueType</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>954 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>4</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Unset DSD_NumProc</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -820</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>5</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:connectid from="1" to="2" type="true"/>
																					<sci:connectid from="2" to="0" type="true"/>
																					<sci:connectid from="2" to="4" type="false"/>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="5" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:data object="SciTegic.Protocol.1">
																				<sci:component name="Subprotocol" version="2">
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval>ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>License Wait Environment</sci:value>
																					</sci:arg>
																					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol AutoLayout</sci:help>
																						<sci:value>1</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>SUBPROTOCOLNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																						<sci:help>Component Revision</sci:help>
																						<sci:value>790</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>378 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																						<sci:help>By Ref</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																						<sci:value>None</sci:value>
																						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>7.9.0.30</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Sticky Notes</sci:help>
																					</sci:arg>
																					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Scale</sci:help>
																						<sci:value>100</sci:value>
																					</sci:arg>
																					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Protocol Options</sci:help>
																						<sci:legalval>Owner Access Only</sci:legalval>
																					</sci:arg>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/coreutils</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Tue Jan 26 10:02:05 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>10</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																					</sci:arg>
																				</sci:component>
																				<sci:protocol>
																					<sci:data object="SciTegic.Protocol.1">
																						<sci:component name="Set Environment Variable" version="2">
																							<sci:arg name="Variable Name" type="StringType" required="true" visibility="visible" multi="false">
																								<sci:help>Name of the environment variable to set</sci:help>
																								<sci:value>BIOVIA_LIC_WAIT_TIMEOUT</sci:value>
																							</sci:arg>
																							<sci:arg name="Variable Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
																								<sci:help>Value of environment variable to be set. If Value is not provided, then a coresponding environment variable (Variable Name) is unset.</sci:help>
																								<sci:value>$(__MS_BIOVIA_LIC_WAIT_TIMEOUT)</sci:value>
																							</sci:arg>
																							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																								<sci:legalval selected="true">True</sci:legalval>
																								<sci:legalval>False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Set Environment Variable</sci:value>
																							</sci:arg>
																							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol AutoLayout</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>Component Revision</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>SubProtocol</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{B412CE07-749F-FA47-DEC0-41EC65389816}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -95</sci:value>
																							</sci:arg>
																							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>By Ref</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Set Environment Variable</sci:value>
																								<sci:value>Sets environment variable on running SES process. Variable is set for each record.</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>7.5.2.500</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Sticky Notes</sci:help>
																							</sci:arg>
																							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Scale</sci:help>
																								<sci:value>100</sci:value>
																							</sci:arg>
																							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Protocol Options</sci:help>
																								<sci:legalval>Make Shortcut by Default</sci:legalval>
																								<sci:legalval>Owner Access Only</sci:legalval>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/materials</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Oct 19 11:58:03 2009</sci:value>
																							</sci:arg>
																							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Subprotocol Made Link Into Copy</sci:help>
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Materials\Utilities\Internals\MatServer\Set Environment Variable</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:protocol/>
																					</sci:data>
																					<sci:data object="SciTegic.EvaluateExpression.1">
																						<sci:component name="Custom Filter (PilotScript)" version="2">
																							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>The PilotScript expression used to filter the data.</sci:help>
																								<sci:member>Initial Expression</sci:member>
																								<sci:member>Final Expression</sci:member>
																								<sci:member>Keep Calculated Properties</sci:member>
																								<sci:value>if __MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot; then
	@__MS_BIOVIA_LIC_WAIT_TIMEOUT := __MS_BIOVIA_LIC_WAIT_TIMEOUT;
end if;

__MS_BIOVIA_LIC_WAIT_TIMEOUT is defined And __MS_BIOVIA_LIC_WAIT_TIMEOUT ne &quot;&quot;

</sci:value>
																							</sci:arg>
																							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
																							</sci:arg>
																							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																								<sci:legalval>True</sci:legalval>
																								<sci:legalval selected="true">False</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																								<sci:help>Version of expression parser to use.</sci:help>
																								<sci:value>2</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Use License Wait?</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>FILTERNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>90 -295</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																								<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>3</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
																							</sci:arg>
																						</sci:component>
																						<sci:proplist>
																							<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
																						</sci:proplist>
																					</sci:data>
																					<sci:data object="SciTegic.PropertyFunctions.1">
																						<sci:component name="No-op" version="2">
																							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																								<sci:legalval selected="true">LeaveData</sci:legalval>
																								<sci:legalval>ClearData</sci:legalval>
																								<sci:legalval>DeleteData</sci:legalval>
																							</sci:arg>
																							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																								<sci:help>Component Attributes</sci:help>
																								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																								<sci:legalval>ComponentReturnsFail</sci:legalval>
																								<sci:legalval>ComponentRunsLocal</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																								<sci:legalval selected="true">Halt</sci:legalval>
																								<sci:legalval>Fail</sci:legalval>
																								<sci:legalval>Pass</sci:legalval>
																							</sci:arg>
																							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the action to perform</sci:help>
																								<sci:value>PassDataToPort</sci:value>
																							</sci:arg>
																							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																								<sci:help>the port to pass data to</sci:help>
																								<sci:value>1</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																								<sci:value>COMPONENTNODE</sci:value>
																							</sci:arg>
																							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The user who registered this component.</sci:help>
																								<sci:value>scitegic/generic</sci:value>
																							</sci:arg>
																							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The date this component was registered.</sci:help>
																								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>No-op</sci:value>
																							</sci:arg>
																							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The component this component is based upon.</sci:help>
																								<sci:value>Evaluate Expression</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:value>0</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>378 -470</sci:value>
																							</sci:arg>
																							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																								<sci:value>100</sci:value>
																								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>Generic</sci:value>
																								<sci:value/>
																								<sci:value>None</sci:value>
																								<sci:value/>
																							</sci:arg>
																							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:help>The server version when this component was registered</sci:help>
																								<sci:value>6.0.1.1</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																								<sci:help>Local Component Identifier</sci:help>
																								<sci:value>6</sci:value>
																							</sci:arg>
																							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
																							</sci:arg>
																						</sci:component>
																					</sci:data>
																					<sci:connectid from="3" to="1" type="true"/>
																					<sci:connectid from="3" to="6" type="false"/>
																				</sci:protocol>
																			</sci:data>
																			<sci:connectid from="9" to="10" type="true"/>
																		</sci:protocol>
																	</sci:data>
																	<sci:connectid from="2" to="1" type="true"/>
																</sci:protocol>
															</sci:data>
															<sci:data object="SciTegic.Protocol.1">
																<sci:component name="Perl MaterialsScript (on Server)" version="2">
																	<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
																		<sci:help>&lt;p&gt;MaterialsScript (Perl) script to execute.  The component provides &lt;i&gt;templated&lt;/i&gt; script, which must be replaced.&lt;/p&gt;

&lt;p&gt;Any Pipeline Pilot Perl (on Server) component must execute the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;In addition, a MaterialsScript component provides a method GetMaterialsDocument($data) which can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt;
</sci:help>
																		<sci:value>use ComponentModules::Core::CoreExecute;</sci:value>
																	</sci:arg>
																	<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																	</sci:arg>
																	<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																		<sci:member>Parallel Processing Options Batch Size</sci:member>
																		<sci:member>Parallel Processing Options Server</sci:member>
																		<sci:member>Parallel Processing Options Preserve Order</sci:member>
																		<sci:legalval>True</sci:legalval>
																		<sci:legalval selected="true">False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																		<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:value>25</sci:value>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																		<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																		<sci:member>Parallel Processing Options Server Processes</sci:member>
																		<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																		<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																	</sci:arg>
																	<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																		<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																		<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																		<sci:help>Component Attributes</sci:help>
																		<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																		<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																		<sci:legalval>ComponentRunsLocal</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																		<sci:legalval>Halt</sci:legalval>
																		<sci:legalval selected="true">Fail</sci:legalval>
																		<sci:legalval>Pass</sci:legalval>
																	</sci:arg>
																	<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>For internal use only.</sci:help>
																		<sci:legalval selected="true">True</sci:legalval>
																		<sci:legalval>False</sci:legalval>
																	</sci:arg>
																	<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Comment</sci:help>
																		<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Component Usage</sci:help>
																		<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>Execute &amp; generate properties</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol AutoLayout</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol ShowComment</sci:help>
																		<sci:value>true</sci:value>
																	</sci:arg>
																	<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Add Protocol Comment Here</sci:help>
																		<sci:value>Add Protocol Comment Here</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																		<sci:value>COMPONENTNODE</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																		<sci:help>Component Revision</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The component this component is based upon.</sci:help>
																		<sci:value>SubProtocol</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:value>390 -95</sci:value>
																	</sci:arg>
																	<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>By Ref</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																		<sci:value>100</sci:value>
																		<sci:value>Executes MaterialsScript for each record</sci:value>
																		<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Material data</sci:value>
																		<sci:value>Generic</sci:value>
																		<sci:value>Unprocessed data records</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The server version when this component was registered</sci:help>
																		<sci:value>8.4.5.24</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																	<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Sticky Notes</sci:help>
																	</sci:arg>
																	<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Scale</sci:help>
																		<sci:value>100</sci:value>
																	</sci:arg>
																	<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Protocol Options</sci:help>
																		<sci:legalval>Make Shortcut by Default</sci:legalval>
																		<sci:legalval>Owner Access Only</sci:legalval>
																	</sci:arg>
																	<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The user who registered this component.</sci:help>
																		<sci:value>scitegic/materials</sci:value>
																	</sci:arg>
																	<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The date this component was registered.</sci:help>
																		<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
																	</sci:arg>
																	<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Local Component Identifier</sci:help>
																		<sci:value>6</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Made Link Into Copy</sci:help>
																		<sci:value>1</sci:value>
																	</sci:arg>
																	<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																		<sci:help>Subprotocol Modified</sci:help>
																		<sci:value>0</sci:value>
																	</sci:arg>
																	<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																		<sci:help>The original path within the database of this component.</sci:help>
																		<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
																	</sci:arg>
																</sci:component>
																<sci:protocol>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Container Connection" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="WebExports" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;p/&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval>ComponentTakesInput</sci:legalval>
																				<sci:legalval>ComponentReturnsPass</sci:legalval>
																				<sci:legalval>ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="MaterialsSystem" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>For internal use only.</sci:help>
																				<sci:value>$(MaterialsSystem)</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>EmptyProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/materials</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue Mar 22 15:31:46 2011</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>A top-level component for building protocols.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>The user should customize this description and usage to describe 
the functioning of their derived protocol.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Container Connection</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>ComponentNode</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{08334F2A-00CB-4A37-503F-8483A2E5178D}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -95</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Manage connections to the Materials Studio container</sci:value>
																				<sci:value>This is an internal component, used by other components in the Materials Collection.  It shouldn&apos;t be used on its own.</sci:value>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																				<sci:value>None</sci:value>
																				<sci:value/>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>8.4.5.20</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Made Link Into Copy</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Subprotocol Modified</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Materials\Utilities\Internals\MatServer\Container Connection</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol/>
																	</sci:data>
																	<sci:data object="SciTegic.Protocol.1">
																		<sci:component name="Subprotocol" version="2">
																			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																			</sci:arg>
																			<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																				<sci:member>Parallel Processing Options Batch Size</sci:member>
																				<sci:member>Parallel Processing Options Server</sci:member>
																				<sci:member>Parallel Processing Options Preserve Order</sci:member>
																				<sci:legalval>True</sci:legalval>
																				<sci:legalval selected="true">False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																				<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:value>25</sci:value>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																				<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																				<sci:member>Parallel Processing Options Server Processes</sci:member>
																				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																			</sci:arg>
																			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																				<sci:legalval selected="true">True</sci:legalval>
																				<sci:legalval>False</sci:legalval>
																			</sci:arg>
																			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																				<sci:help>Component Attributes</sci:help>
																				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																				<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																				<sci:legalval>ComponentRunsLocal</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																				<sci:legalval selected="true">Halt</sci:legalval>
																				<sci:legalval>Fail</sci:legalval>
																				<sci:legalval>Pass</sci:legalval>
																			</sci:arg>
																			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Comment</sci:help>
																				<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Component Usage</sci:help>
																				<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>Subprotocol 1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol AutoLayout</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol ShowComment</sci:help>
																				<sci:value>true</sci:value>
																			</sci:arg>
																			<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Add Protocol Comment Here</sci:help>
																				<sci:value>Add Protocol Comment Here</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																				<sci:value>COMPONENTNODE</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																				<sci:help>Component Revision</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The component this component is based upon.</sci:help>
																				<sci:value>SubProtocol</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:value>90 -455</sci:value>
																			</sci:arg>
																			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																				<sci:help>By Ref</sci:help>
																				<sci:value>0</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																				<sci:value>100</sci:value>
																				<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																				<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value/>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																				<sci:value>Generic</sci:value>
																				<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The server version when this component was registered</sci:help>
																				<sci:value>6.1.0.21</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Sticky Notes</sci:help>
																			</sci:arg>
																			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Scale</sci:help>
																				<sci:value>100</sci:value>
																			</sci:arg>
																			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Protocol Options</sci:help>
																				<sci:legalval>Make Shortcut by Default</sci:legalval>
																				<sci:legalval>Owner Access Only</sci:legalval>
																			</sci:arg>
																			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The user who registered this component.</sci:help>
																				<sci:value>scitegic/core</sci:value>
																			</sci:arg>
																			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The date this component was registered.</sci:help>
																				<sci:value>Tue May 01 14:06:30 2007</sci:value>
																			</sci:arg>
																			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																				<sci:help>Local Component Identifier</sci:help>
																				<sci:value>1</sci:value>
																			</sci:arg>
																			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																				<sci:help>The original path within the database of this component.</sci:help>
																				<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
																			</sci:arg>
																		</sci:component>
																		<sci:protocol>
																			<sci:data object="SciTegic.ComponentPerlPlugin.1">
																				<sci:component name="Perl (on Server)" version="2">
																					<sci:arg name="Script" type="StringType" required="true" visibility="visible" multi="false">
																						<sci:help>&lt;p&gt;Perl script to execute.  Pipeline Pilot executes the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The usual Perl scoping rules apply to variables.  To pass a variable between the three required subroutines use package level variables, e.g., &lt;code&gt;$::variable&lt;/code&gt; or &lt;code&gt;my $variable&lt;/code&gt; declared outside the subroutines.
&lt;/p&gt;

&lt;p&gt;
The &lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onFinalize&lt;/i&gt; subroutines both receive the &lt;code&gt;pilot::Context Perl&lt;/code&gt; object as the only argument.  The &lt;i&gt;onProcess&lt;/i&gt; subroutine receives the &lt;code&gt;pilot::Context&lt;/code&gt; and &lt;code&gt;pilot::DataRecord&lt;/code&gt; Perl objects as its two arguments.
&lt;/p&gt;

&lt;p&gt;
pilot::Context provides access to globals and parameters.  A common way to get these is via a Perl hash reference.  For example, to get a &lt;i&gt;Source&lt;/i&gt; parameter value use
&lt;/p&gt;

&lt;pre&gt;
my $parametersHashRef = $context-&gt;getComponentParameters()-&gt;getHashRef();
my $source = $parametersHashRef-&gt;{&quot;Source&quot;};
&lt;/pre&gt;

&lt;p&gt;
To obtain the value of a global property called &lt;i&gt;Old&lt;/i&gt; and set a new global property called &lt;i&gt;New&lt;/i&gt; use
&lt;/p&gt;

&lt;pre&gt;
my $globalsHashRef = $context-&gt;getGlobalProperties()-&gt;getHashRef();
my $value = $globalsHashRef-&gt;{&quot;Old&quot;};
$globalsHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
Top level properties in a data record are accessed similarly.
&lt;/p&gt;

&lt;pre&gt;
my $node = $data-&gt;getRoot();
my $propertiesHashRef = $node-&gt;getProperties()-&gt;getHashRef();
my $value = $propertiesHashRef-&gt;{&quot;Old&quot;};
$propertiesHashRef-&gt;{&quot;New&quot;} = &quot;newValue&quot;;
&lt;/pre&gt;

&lt;p&gt;
&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must return one of the following component state values:
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;
&lt;/p&gt;

&lt;p&gt;
To explicitly route a data record to a port use
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::PassPort);
&lt;/pre&gt;

&lt;p&gt;
or
&lt;/p&gt;

&lt;pre&gt;
$data-&gt;routeTo($pilot::FailPort);
&lt;/pre&gt;

&lt;p&gt;
Data records can also be terminated internally by routing to &lt;code&gt;$pilot::NoPort&lt;/code&gt;.
&lt;/p&gt;</sci:help>
																						<sci:value>$(Script)</sci:value>
																					</sci:arg>
																					<sci:arg name="Use Package" type="StringType" required="false" visibility="visible" multi="false" implbase="{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}">
																						<sci:help>The name of an application package that contains Perl modules referenced by this component. By defining this package name, a package-specific module may be referenced with the &apos;use modulename;&apos; syntax.</sci:help>
																						<sci:value>scitegic/materials</sci:value>
																					</sci:arg>
																					<sci:arg name="Rebuild In RTC" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																						<sci:help>&lt;p&gt;
The Perl component functions by creating an instance of a Perl interpreter and
passing the supplied Perl script to the interpreter for execution. The
creation of the Perl interpreter occurs one time, while script execution
occurs once for initialization and finalization subroutines and once 
for each data record processed by the component.
&lt;/p&gt;
&lt;p&gt;
However, in the context of a Run To Completion (RTC) subprtocols, the Perl 
component would normally be re-instantiated for each data record, 
in common with other components in an RTC subprotocol. This implies the
re-creation of the Perl interpreter for each data record, which can be
relatively time consuming, particularly for Perl scripts which
themselves perform a rapid operation per data record.
&lt;/p&gt;
&lt;p&gt;
So, to avoid significant differences in performance timings between RTC
and non-RTC contexts, the Perl component&apos;s default behavior is to &lt;i&gt;keep&lt;/i&gt;
the same instance of the Perl interpreter throughout its life cycle. This
is indicated by the False setting of the &lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
However, there are some circumstances where Perl script or 3rd party modules
are not written in a way that allows them to safely re-use the same interpreter in this way. So if you see unexpected behavior from a Perl
component in a Run To Completion subprotocol, switch the &lt;em&gt;Rebuild In RTC&lt;/em&gt;
parameter to True to see if that resolves the issue.
&lt;/p&gt;
&lt;p&gt;
If that fixes the problem, and the Perl cannot be re-cast to 
handle the persistent interpreter,
you may need to trade performance for stability.
&lt;/p&gt;</sci:help>
																						<sci:legalval>True</sci:legalval>
																						<sci:legalval selected="true">False</sci:legalval>
																					</sci:arg>
																					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																						<sci:help>Component Attributes</sci:help>
																						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																						<sci:legalval>ComponentRunsLocal</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																						<sci:legalval selected="true">Halt</sci:legalval>
																						<sci:legalval>Fail</sci:legalval>
																						<sci:legalval>Pass</sci:legalval>
																					</sci:arg>
																					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The user who registered this component.</sci:help>
																						<sci:value>scitegic/integration</sci:value>
																					</sci:arg>
																					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The date this component was registered.</sci:help>
																						<sci:value>Fri Feb 05 11:55:51 2010</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>Perl (on Server)</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:value>90 -95</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																						<sci:value>COMPONENTNODE</sci:value>
																					</sci:arg>
																					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The component this component is based upon.</sci:help>
																						<sci:value>Plug In</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																						<sci:value>100</sci:value>
																						<sci:value>Executes Perl code on the server</sci:value>
																						<sci:value>&lt;p&gt;Allows a Perl script to manipulate a data record&apos;s property list, the global
property list, and component behavior. The &lt;em&gt;Script&lt;/em&gt; parameter contains
the script that implements the component behavior, encoded in Perl. The following
subroutines must be defined in this text parameter (all three methods need to
be declared in the main scope): &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;onInitialize: &lt;/em&gt;Invoked once before the any data records
    arrive. This method receives one argument, a pilot::Context object. Also,
    it must return a component state, one of $pilot::ReadyForInputData, $pilot::DoneProcessingData, $pilot::ReadyForNewData or $pilot::ReadyForInputThenNewData. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onProcess&lt;/em&gt;: Called once per data record. This method
    receives two arguments, a pilot::Context and a pilot::DataRecord object and
    return a component state. &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;onFinalize&lt;/em&gt;: Called when no more data records are available.
    This method receives one argument, a pilot::Context object. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;i&gt;onInitialize&lt;/i&gt; and &lt;i&gt;onProcess&lt;/i&gt; must
return one of the following component state values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pilot::READYFORINPUTDATA
&lt;li&gt;pilot::DONEPROCESSINGDATA
&lt;li&gt;pilot::READYFORNEWDATA
&lt;li&gt;pilot::READYFORINPUTTHENNEWDATA
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Any script outside of the subroutines is executed just prior to calling
    onInitialize.&lt;/li&gt;
	&lt;li&gt;The optional &lt;em&gt;Use Package&lt;/em&gt; parameter is used to identify a package
      that holds one or more Perl modules that are referenced by the component.
      In this way, much or all of a component&apos;s functionality can be maintained
      in a package module. This facilitates component upgrading, by centralizing
    the code.&lt;/li&gt;
    &lt;li&gt;The Perl include path for the library must be declared in the package.conf
      file for the named package.&lt;/li&gt;
    &lt;li&gt;Perl&apos;s &lt;em&gt;strict&lt;/em&gt; and &lt;em&gt;warnings&lt;/em&gt; directives can be very useful
      when writing scripts. To detect warnings, you need to create a handler
      to manage them, since by default, Perl sends them to STDERR, which is not
    easily accessible from within Pipeline Pilot. 
	&lt;p&gt;For example, the following
    script treats warnings as errors:&lt;/p&gt;
	&lt;p&gt;&lt;code&gt;use warnings;&lt;br /&gt;
	$SIG{__WARN__} = sub {die @_;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt; If you see unexpected or erroneous behavior when using this component
in a Run To Completion subprotocol, please look at the help text for the
&lt;em&gt;Rebuild In RTC&lt;/em&gt; parameter, which is in the Implementation tab.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt;</sci:value>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																						<sci:value>Generic</sci:value>
																						<sci:value/>
																					</sci:arg>
																					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
																					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The server version when this component was registered</sci:help>
																						<sci:value>6.0.1.4</sci:value>
																					</sci:arg>
																					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																						<sci:help>Local Component Identifier</sci:help>
																						<sci:value>0</sci:value>
																					</sci:arg>
																					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																						<sci:help>The original path within the database of this component.</sci:help>
																						<sci:value>Components\Database and Application Integration\Application Integration\Programmatic Integration\Perl (on Server)</sci:value>
																					</sci:arg>
																				</sci:component>
																			</sci:data>
																		</sci:protocol>
																	</sci:data>
																	<sci:version iVal="1"/>
																</sci:protocol>
															</sci:data>
															<sci:connectid from="8" to="6" type="true"/>
															<sci:version iVal="2"/>
														</sci:protocol>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract SD properties" version="2">
															<sci:arg name="Module Name" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which holds module name, or module name in quotes, for ex: &quot;Forcite&quot;. For generated components this should always be __MS_Module.</sci:help>
																<sci:value>__MS_Module</sci:value>
															</sci:arg>
															<sci:arg name="SDF Document Property" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds SDF document URL, for ex: __MS_SDF_URL.</sci:help>
																<sci:value>__MS_SDF_URL</sci:value>
															</sci:arg>
															<sci:arg name="Properties to Produce" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds a list of SDF attributes to be export as properties, or list in quotes, for ex: &quot;property_name_1; key_name_1; property_name_2; key_name_2&quot;. If value is not specified, no properties will be exported. For generated components the value should be set to __MS_Extra_Outputs_Def. Defined property names will be prefixed with &quot;MS$(Module Name)_&quot;.
</sci:help>
																<sci:value>__MS_Extra_Outputs_Def</sci:value>
															</sci:arg>
															<sci:arg name="Generated Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Name of a property which will hold a semicolon separated list of all generated output properties. If value is not specified, no property will be is created by default.</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_SDProperties, __MS_SDFDocumentName,__IsSDFPresent</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:value>25</sci:value>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract SD properties</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8BF08A69-552B-4A5B-9007-7C9C7BF1ED68}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>690 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 27 10:36:46 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract SD properties</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Extract Vibrational Data" version="2">
															<sci:arg name="Output Type" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of output file from which vibrational mode information will be extracted.</sci:help>
																<sci:legalval selected="true">VAMP</sci:legalval>
																<sci:legalval>DMol3</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
																<sci:member>Parallel Processing Options Batch Size</sci:member>
																<sci:member>Parallel Processing Options Server</sci:member>
																<sci:member>Parallel Processing Options Preserve Order</sci:member>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
																<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
																<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
																<sci:member>Parallel Processing Options Server Processes</sci:member>
																<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
																<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Run subprotocol on grid engine if available.</sci:help>
																<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
																<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
																<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
																<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="SDF Properties" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of a property which holds list of generated SDF propeties. For genereated components this should be __MS_Generated_SDF_Properties,</sci:help>
																<sci:value>__MS_Generated_SDF_Properties</sci:value>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Extract Vibrational Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0ED898BB-A171-4B01-95D8-2E5473B1D8A1}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>990 -95</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Extracts vibrational data from VAMP or DMol3 output</sci:value>
																<sci:value>Extracts vibrational data from the output file created by a VAMP or DMol3 calculation. The file URL must be contained in either the MSVAMP_TaskReport (for VAMP output) or MSDMol3_TaskReport (for DMol3 output) property on the input data record. If vibrational information is contained in the output file then frequencies and intensities are added to the data record as array properties. </sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.5.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue Jul 26 13:07:08 2011</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Extract Vibrational Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Clear Internal Data" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
																<sci:value>__MS_Failed</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Clear Internal Data</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1B241797-6411-49AE-9CB1-2E8C2C0FC316}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>2190 -185</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Clears any internal data</sci:value>
																<sci:value>&lt;p&gt;Clears internal data such as internal properties and nodes.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.2.500</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Make Shortcut by Default</sci:legalval>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jul 26 10:03:17 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\Clear Internal Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1290 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="MS Mark As Failure" version="2">
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
																<sci:member>RunToCompletion Categorize Using</sci:member>
																<sci:legalval selected="true">False</sci:legalval>
																<sci:legalval>True - For Each Data Record</sci:legalval>
																<sci:legalval>True - For Each Category</sci:legalval>
															</sci:arg>
															<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
																<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
																<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Mark As Failure</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ComponentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>790</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{5A9C91F6-BF88-425B-A04E-9915868E06F4}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1590 -275</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
																<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>8.0.0.18</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/materials</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Mar 10 10:27:01 2010</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Materials\Utilities\Internals\Core Components\MS Mark As Failure</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="No-op" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>No-op</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1890 -275</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
																<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.1.1</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="4" to="0" type="true"/>
													<sci:connectid from="4" to="5" type="false"/>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="0" to="5" type="false"/>
													<sci:connectid from="1" to="2" type="true"/>
													<sci:connectid from="1" to="5" type="false"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:connectid from="2" to="5" type="false"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="6" to="7" type="true"/>
													<sci:connectid from="7" to="3" type="true"/>
												</sci:protocol>
											</sci:data>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:connectid from="24" to="21" type="true"/>
									<sci:connectid from="24" to="27" type="false"/>
									<sci:connectid from="25" to="26" type="true"/>
									<sci:connectid from="26" to="24" type="true"/>
									<sci:connectid from="26" to="28" type="false"/>
									<sci:connectid from="28" to="21" type="true"/>
									<sci:connectid from="28" to="31" type="false"/>
									<sci:connectid from="31" to="21" type="true"/>
									<sci:connectid from="31" to="30" type="false"/>
									<sci:connectid from="27" to="21" type="true"/>
									<sci:connectid from="30" to="21" type="true"/>
									<sci:connectid from="30" to="32" type="false"/>
									<sci:connectid from="21" to="22" type="true"/>
									<sci:connectid from="22" to="23" type="true"/>
									<sci:connectid from="32" to="21" type="true"/>
									<sci:connectid from="32" to="33" type="false"/>
									<sci:connectid from="33" to="21" type="true"/>
									<sci:connectid from="33" to="34" type="false"/>
									<sci:connectid from="34" to="21" type="true"/>
									<sci:connectid from="34" to="27" type="false"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Study Table Writer" version="2">
									<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Destination for the generated file.&lt;/p&gt;</sci:help>
										<sci:member>IfFileExists</sci:member>
										<sci:value>userdata:/run_8_3_22/original_data_smile_strings_$(idx)_finish.std</sci:value>
									</sci:arg>
									<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specify what the behavior should be if the file in the &lt;i&gt;Destination&lt;/i&gt;
parameter already exists. Available options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Overwrite&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Halt&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New Sheet&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
When creating several sheets in the same protocol, make sure that only one component is working against the destination file at the same time.
&lt;/p&gt;
</sci:help>
										<sci:legalval selected="true">Overwrite</sci:legalval>
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval>New Sheet</sci:legalval>
									</sci:arg>
									<sci:arg name="Multiple Value Delimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;When writing an array property into a cell of the study table, this character is used as the delimiter to separate the values.&lt;/p&gt;

&lt;p&gt;Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Semicolon&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Colon&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Comma&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linefeed&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vertical Bar&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Semicolon</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
										<sci:legalval>Linefeed</sci:legalval>
										<sci:legalval>Vertical Bar</sci:legalval>
									</sci:arg>
									<sci:arg name="Sheet Name" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Defines the name to the study table sheet. If left empty a default name will be used.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
										<sci:value>job:/Orig_data_for_musho_to_convert_fails.std</sci:value>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>VAMP Study Table Writer Finish</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DOCUMENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{3341B881-25DA-4A76-A7B8-018757755FDB}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -815</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Writes Materials Studio study tables</sci:value>
										<sci:value>&lt;p&gt;One row will be created for each incoming data record. A column will be
created in the study table for each unique property name encountered, and the
value of each property on a data record will be written to the appropriate
cell.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Study tables use .std as their file extension. If you specify a &lt;i&gt;Destination&lt;/i&gt; without this extension then it will be appended automatically.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.5.2.500</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/materials</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed May 26 14:38:12 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>9</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Materials\Writers\Study Table Writer</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
												<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.1</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Perl MaterialsScript (on Server)" version="2">
											<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;MaterialsScript (Perl) script to execute.  The component provides &lt;i&gt;templated&lt;/i&gt; script, which must be replaced.&lt;/p&gt;

&lt;p&gt;Any Pipeline Pilot Perl (on Server) component must execute the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;In addition, a MaterialsScript component provides a method GetMaterialsDocument($data) which can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt;
</sci:help>
												<sci:value>use ComponentModules::Writers::StudyTableWriter;</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Component Comment</sci:help>
												<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
											</sci:arg>
											<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Component Usage</sci:help>
												<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Perl MaterialsScript (on Server)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol ShowComment</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Add Protocol Comment Here</sci:help>
												<sci:value>Add Protocol Comment Here</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -95</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Executes MaterialsScript for each record</sci:value>
												<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>8.4.5.24</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
												<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.1</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="1" type="true"/>
									<sci:connectid from="1" to="2" type="true"/>
									<sci:connectid from="2" to="1" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.DataToJsonWriter.1">
								<sci:component name="JSON Writer" version="2">
									<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>
The name or path name for the destination data. The destination can be a file, a network resource, a data record property, or a global property.
&lt;ul&gt;
&lt;li&gt;Use a network URL for a network resource.&lt;/li&gt;
&lt;li&gt;Use a file path name for a file.&lt;/li&gt;
&lt;li&gt;Use &quot;global://property-name&quot; for a global property.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, specify an extension. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
	</sci:help>
										<sci:member>Maximum</sci:member>
										<sci:member>If Destination Exists</sci:member>
										<sci:member>CharacterEncoding</sci:member>
										<sci:value>userdata:/run_8_3_22/original_data_smile_strings_$(idx)_fails.json</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data records to write (all if value is empty).</sci:help>
									</sci:arg>
									<sci:arg name="If Destination Exists" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>What to do if the destination already exists</sci:help>
										<sci:legalval selected="true">Overwrite</sci:legalval>
										<sci:legalval>Append</sci:legalval>
										<sci:legalval>Halt</sci:legalval>
									</sci:arg>
									<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/p&gt;</sci:help>
										<sci:member>UseByteOrderMark</sci:member>
										<sci:legalval>ANSI</sci:legalval>
										<sci:legalval selected="true">UTF-8</sci:legalval>
										<sci:legalval>Unicode</sci:legalval>
										<sci:legalval>Unicode big endian</sci:legalval>
									</sci:arg>
									<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The byte order mark (BOM) is an optional Unicode character written to the start of a file or data stream that can be used to indicate the character encoding of the following data. Spefically it can be used to indicate the various UTF-8 and UTF-16 encodings.
&lt;/p&gt;
&lt;p&gt;
BOMs are more widely used in a Windows setting. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;/p&gt;
&lt;p&gt;
Setting options are:
&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Always&lt;/dt&gt;
&lt;dd&gt;For non-ANSI encodings, the BOM is always written at the start of the output stream.&lt;/dd&gt;
&lt;dt&gt;Never&lt;/dt&gt;
&lt;dd&gt;No BOM is written at the start of the output stream.&lt;/dd&gt;
&lt;dt&gt;Native&lt;/dt&gt;
&lt;dd&gt;This is equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.&lt;/dd&gt;
&lt;/dl&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a non-ANSI value&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
										<sci:legalval selected="true">Always</sci:legalval>
										<sci:legalval>Never</sci:legalval>
										<sci:legalval>Native</sci:legalval>
									</sci:arg>
									<sci:arg name="Output All Nodes" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>&lt;p&gt;
If true, this component will recurse down the node tree, creating the corresponding objects in the JSON output based on the node names.
&lt;/p&gt;

</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Children Are Always Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>&lt;p&gt;If set to True then child nodes with the same name are always serialized as an array of objects even if there is only one child node with that name.&lt;/p&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="IfFileExists" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>What to do if the destination file already exists</sci:help>
										<sci:value>$(If Destination Exists)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Lossless Format" type="BoolType" required="true" visibility="nevershow" multi="false" legalvalsenforced="false">
										<sci:help>&lt;p&gt;If set to true, then types which do not have an obvious or unambiguous mapping to JSON primitives (e.g. a ByteArray or Integer Fingerprint), will be represented as JSON objects with a special &quot;__ctag__&quot; name indicating the type.&lt;/p&gt;
&lt;p&gt;If set to false, then JSON output will be simpler, but types more complex than the basic numeric, boolean, string and null types may not be represented with sufficient information to allow reserialisation back into their original format. This option is provided for backwards compatibility.&lt;/p&gt;</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Complete" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>When &quot;For Each Data&quot; is selected, data is written for each data record. Otherwise, data is written to a new data record after all input data records have been processed.
</sci:help>
										<sci:enabledscript>false;</sci:enabledscript>
										<sci:legalval selected="true">Using All Data</sci:legalval>
										<sci:legalval>For Each Data</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Aug 19 11:20:24 2013</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{61B96C66-E9EB-41F7-814A-14F3F1827AB2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>VAMP Output Json Fails</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -1175</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Writes input data records as JSON encoded string  (formerly called &quot;JSON Writer (Generic)&quot;)</sci:value>
										<sci:value>&lt;p&gt;
Converts incoming data record properties into an array of objects in JSON (JavaScript Object Notation) format and writes the results to the file, network resource, or global property specified in the &lt;i&gt;Destination&lt;/i&gt; parameter. The format tries to create a JSON object that best reflects the hierarchical data structure, but may be lossy for unusual data types, metadata, etc.
&lt;/p&gt;
&lt;p&gt;
The output is an array of objects. One object is generated for each incoming data record, with fields corresponding to each property. When the parameter &lt;i&gt;Output All Nodes&lt;/i&gt; is True (default), this component will recurse down the node tree, creating the corresponding JSON objects based on the node names. Arrays and n-dimensional arrays are supported, and Pipeline Pilot data types are mapped to JavaScript primitive types where appropriate.
&lt;/p&gt;
With the default parameterization, the output will be of the form:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;
[{&quot;name1&quot;:&quot;value1&quot;},{&quot;name2&quot;:&quot;value2&quot;}]
&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;
To learn more about JSON, visit the &lt;a href=&quot;javascript:DoLink(&apos;http://www.json.org&apos;)&quot;&gt;JSON.org&lt;/a&gt; web site.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon</sci:help>
										<sci:value>Plug In</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.2.0.0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Writers\JSON Writer</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Study Table Writer" version="2">
									<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Destination for the generated file.&lt;/p&gt;</sci:help>
										<sci:member>IfFileExists</sci:member>
										<sci:value>userdata:/total_new_species_152021_s$(idx)_fail.std</sci:value>
									</sci:arg>
									<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Specify what the behavior should be if the file in the &lt;i&gt;Destination&lt;/i&gt;
parameter already exists. Available options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Overwrite&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Halt&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New Sheet&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
When creating several sheets in the same protocol, make sure that only one component is working against the destination file at the same time.
&lt;/p&gt;
</sci:help>
										<sci:legalval selected="true">Overwrite</sci:legalval>
										<sci:legalval>Halt</sci:legalval>
										<sci:legalval>New Sheet</sci:legalval>
									</sci:arg>
									<sci:arg name="Multiple Value Delimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;When writing an array property into a cell of the study table, this character is used as the delimiter to separate the values.&lt;/p&gt;

&lt;p&gt;Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Semicolon&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Colon&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Comma&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linefeed&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vertical Bar&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Semicolon</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
										<sci:legalval>Linefeed</sci:legalval>
										<sci:legalval>Vertical Bar</sci:legalval>
									</sci:arg>
									<sci:arg name="Sheet Name" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Defines the name to the study table sheet. If left empty a default name will be used.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
										<sci:value>job:/Orig_data_for_musho_to_convert_fails.std</sci:value>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:value>25</sci:value>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>VAMP Study Table Writer Fail</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DOCUMENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{3341B881-25DA-4A76-A7B8-018757755FDB}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -1535</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Writes Materials Studio study tables</sci:value>
										<sci:value>&lt;p&gt;One row will be created for each incoming data record. A column will be
created in the study table for each unique property name encountered, and the
value of each property on a data record will be written to the appropriate
cell.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Study tables use .std as their file extension. If you specify a &lt;i&gt;Destination&lt;/i&gt; without this extension then it will be appended automatically.&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Material data</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.5.2.500</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/materials</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed May 26 14:38:12 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>11</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Materials\Writers\Study Table Writer</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
												<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.1</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Perl MaterialsScript (on Server)" version="2">
											<sci:arg name="Script" type="PerlScriptType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;MaterialsScript (Perl) script to execute.  The component provides &lt;i&gt;templated&lt;/i&gt; script, which must be replaced.&lt;/p&gt;

&lt;p&gt;Any Pipeline Pilot Perl (on Server) component must execute the following three subroutines:

&lt;ul&gt;
&lt;li&gt;onInitialize: the subroutine that executes before the first data record is processed.&lt;/li&gt;
&lt;li&gt;onProcess: the subroutine that executes for each data record.&lt;/li&gt;
&lt;li&gt;onFinalize: the subroutine that executes after the last data record has been processed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;In addition, a MaterialsScript component provides a method GetMaterialsDocument($data) which can pull a Materials Studio Document (binary object) off the record and make it available to the Perl script.&lt;/p&gt;
</sci:help>
												<sci:value>use ComponentModules::Writers::StudyTableWriter;</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
												<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:value>25</sci:value>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="MaterialsSystem" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>For internal use only.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Component Comment</sci:help>
												<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>
											</sci:arg>
											<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Component Usage</sci:help>
												<sci:value>When you are creating a pipeline which requires a subprotocol as 
a component, you can drag this SubProtocol component into the 
pipeline, open it, and add components into it.</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Perl MaterialsScript (on Server)</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol ShowComment</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Add Protocol Comment Here</sci:help>
												<sci:value>Add Protocol Comment Here</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{55DEC068-093A-8924-623B-A200D784691B}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -95</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Executes MaterialsScript for each record</sci:value>
												<sci:value>&lt;p&gt;The Perl MaterialsScript API provides access to Materials Studio objects through a Perl API. This extends the standard &lt;a href=&quot;javascript:DoLink(&apos;{6C9F19F9-6CF3-4BB9-8F61-89C89D9CDCBB}&apos;)&quot;&gt;Perl (on Server)&lt;/a&gt; to enable MaterialsScript to be used in conjunction with the Pipeline Pilot Perl Scripting Component API to manipulate Material data records.&lt;/p&gt;

&lt;p&gt;The template &lt;em&gt;Script&lt;/em&gt; demonstrates how to access Material data. The HasMaterialsDocument($data) function call returns true if the data is a Material data record, as is created for example by &lt;a href=&quot;javascript:DoLink(&apos;{F2BE6BAC-2F14-40FA-BC77-A2F83A899642}&apos;)&quot;&gt;Material Reader&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{EEF3DE81-41F9-4C5A-BED5-1169F3813D05}&apos;)&quot;&gt;Study Table Reader&lt;/a&gt;. For Material data records, the GetMaterialsDocument($data) function call returns a reference to the Material data as a Materials Studio document, which is then available for subsequent MaterialsScript commands. Several example protocols demonstrating the use of MaterialsScript are provided.&lt;/p&gt;

&lt;p&gt;More details can be found in Chapter 6 of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Materials Studio Collection User Guide&lt;/a&gt;.&lt;/p&gt;          
          
          
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/materials_user.pdf&apos;)&quot;&gt;Perl Materials Toolkit API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/materials/docs/scriptingAPI/MSapi.htm&apos;)&quot;&gt;Materials Studio Scripting API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_api.htm&apos;)&quot;&gt;Perl Scripting Component API&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/perl_comp_dev.pdf&apos;)&quot;&gt;Perl Component Development Guide&lt;/a&gt;&lt;/li&gt;  
&lt;/ul&gt; 


</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Material data</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Unprocessed data records</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>8.4.5.24</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/materials</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Apr 07 11:36:55 2011</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Materials\Materials Toolkit\Perl MaterialsScript (on Server)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
												<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.1</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="1" type="true"/>
									<sci:connectid from="1" to="2" type="true"/>
									<sci:connectid from="2" to="1" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:connectid from="2" to="7" type="true"/>
							<sci:connectid from="2" to="8" type="true"/>
							<sci:connectid from="2" to="9" type="true"/>
							<sci:connectid from="2" to="10" type="false"/>
							<sci:connectid from="2" to="11" type="false"/>
						</sci:protocol>
					</sci:data>
					<sci:connectid from="0" to="1" type="true"/>
					<sci:connectid from="3" to="0" type="true"/>
					<sci:connectid from="3" to="8" type="true"/>
					<sci:connectid from="5" to="17" type="true"/>
					<sci:connectid from="17" to="6" type="true"/>
					<sci:connectid from="6" to="7" type="true"/>
					<sci:connectid from="7" to="3" type="true"/>
					<sci:connectid from="7" to="11" type="false"/>
					<sci:connectid from="8" to="9" type="true"/>
					<sci:connectid from="9" to="10" type="true"/>
					<sci:connectid from="10" to="2" type="true"/>
					<sci:connectid from="10" to="4" type="true"/>
					<sci:connectid from="10" to="13" type="true"/>
					<sci:connectid from="10" to="4" type="false"/>
					<sci:connectid from="10" to="12" type="false"/>
				</sci:protocol>
			</sci:data>
			<sci:connectid from="32" to="34" type="true"/>
			<sci:version iVal="5"/>
		</sci:protocol>
	</sci:dbitem>
</sci:data>
